{
  "after,holding,almostsure,after,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,almostsure,always,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,almostsure,before,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,almostsure,eventually,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,almostsure,finally,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,almostsure,for,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,almostsure,immediately,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,almostsure,never,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,almostsure,next,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,almostsure,null,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,almostsure,until,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,almostsure,within,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,bound,after,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,bound,always,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,bound,before,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,bound,eventually,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,bound,finally,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,bound,for,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,bound,immediately,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,bound,never,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,bound,next,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,bound,null,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,bound,until,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,holding,bound,within,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,almostsure,after,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,almostsure,always,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,almostsure,before,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,almostsure,eventually,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,almostsure,finally,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,almostsure,for,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,almostsure,immediately,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,almostsure,never,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,almostsure,next,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,almostsure,null,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,almostsure,until,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,almostsure,within,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,bound,after,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,bound,always,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,bound,before,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,bound,eventually,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,bound,finally,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,bound,for,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,bound,immediately,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,bound,never,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,bound,next,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,bound,null,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,bound,until,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,bound,within,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X PROBFORM))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X PROBFORM))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,almostsure,after,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,almostsure,always,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,almostsure,before,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,almostsure,eventually,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,almostsure,finally,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,almostsure,for,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,almostsure,immediately,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,almostsure,never,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,almostsure,next,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,almostsure,null,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,almostsure,until,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,almostsure,within,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,bound,after,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,bound,always,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,bound,before,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,bound,eventually,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,bound,finally,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,bound,for,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,bound,immediately,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,bound,never,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,bound,next,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,bound,null,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,bound,until,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,bound,within,satisfaction": {
    "pctl": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FLin_$scope_mode$)))",
    "pctlExpanded": "(((! ($scope_mode$ & (X (! $scope_mode$)))) U (($scope_mode$ & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ($scope_mode$ & (X (! $scope_mode$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,almostsure,after,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,almostsure,always,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,almostsure,before,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,almostsure,eventually,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,almostsure,finally,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,almostsure,for,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,almostsure,immediately,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,almostsure,never,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,almostsure,next,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,almostsure,null,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,almostsure,until,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,almostsure,within,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,bound,after,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,bound,always,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,bound,before,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,bound,eventually,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,bound,finally,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,bound,for,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,bound,immediately,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,bound,never,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,bound,next,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,bound,null,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,bound,until,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,holding,bound,within,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | (FFin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,almostsure,after,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,almostsure,always,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,almostsure,before,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,almostsure,eventually,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,almostsure,finally,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,almostsure,for,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,almostsure,immediately,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,almostsure,never,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,almostsure,next,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,almostsure,null,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,almostsure,until,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,almostsure,within,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,bound,after,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,bound,always,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,bound,before,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,bound,eventually,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,bound,finally,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,bound,for,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,bound,immediately,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,bound,never,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,bound,next,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,bound,null,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,bound,until,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,bound,within,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,almostsure,after,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,almostsure,always,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,almostsure,before,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,almostsure,eventually,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,almostsure,finally,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,almostsure,for,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,almostsure,immediately,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,almostsure,never,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,almostsure,next,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,almostsure,null,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,almostsure,until,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,almostsure,within,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,bound,after,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,bound,always,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,bound,before,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,bound,eventually,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,bound,finally,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,bound,for,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,bound,immediately,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,bound,never,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,bound,next,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,bound,null,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,bound,until,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,bound,within,satisfaction": {
    "pctl": "(FFin_$scope_mode$ | ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X PROBFORM) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,almostsure,after,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,almostsure,always,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,almostsure,before,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,almostsure,eventually,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,almostsure,finally,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,almostsure,for,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,almostsure,immediately,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,almostsure,never,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,almostsure,next,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,almostsure,null,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,almostsure,until,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,almostsure,within,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,bound,after,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,bound,always,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,bound,before,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,bound,eventually,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,bound,finally,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,bound,for,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,bound,immediately,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,bound,never,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,bound,next,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,bound,null,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,bound,until,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,holding,bound,within,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | (Lin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,almostsure,after,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,almostsure,always,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,almostsure,before,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,almostsure,eventually,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,almostsure,finally,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,almostsure,for,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,almostsure,immediately,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,almostsure,never,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,almostsure,next,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,almostsure,null,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,almostsure,until,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,almostsure,within,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,bound,after,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,bound,always,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,bound,before,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,bound,eventually,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,bound,finally,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,bound,for,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,bound,immediately,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,bound,never,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,bound,next,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,bound,null,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,bound,until,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,bound,within,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (Lin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X PROBFORM))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,almostsure,after,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,almostsure,always,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,almostsure,before,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,almostsure,eventually,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,almostsure,finally,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,almostsure,for,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,almostsure,immediately,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,almostsure,never,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,almostsure,next,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,almostsure,null,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,almostsure,until,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,almostsure,within,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,bound,after,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,bound,always,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,bound,before,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,bound,eventually,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,bound,finally,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,bound,for,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,bound,immediately,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,bound,never,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,bound,next,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,bound,null,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,bound,until,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,bound,within,satisfaction": {
    "pctl": "((G ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X PROBFORM) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (((! $scope_mode$) & (X $scope_mode$)) & (! LAST))) | (X ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM))))) & ($scope_mode$ -> (($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,almostsure,after,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,almostsure,always,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,almostsure,before,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,almostsure,eventually,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,almostsure,finally,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,almostsure,for,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,almostsure,immediately,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,almostsure,never,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,almostsure,next,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,almostsure,null,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,almostsure,until,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,almostsure,within,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,bound,after,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,bound,always,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,bound,before,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,bound,eventually,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,bound,finally,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,bound,for,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,bound,immediately,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,bound,never,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,bound,next,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,bound,null,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,bound,until,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,holding,bound,within,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,almostsure,after,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,almostsure,always,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,almostsure,before,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,almostsure,eventually,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,almostsure,finally,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,almostsure,for,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,almostsure,immediately,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,almostsure,never,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,almostsure,next,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,almostsure,null,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,almostsure,until,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,almostsure,within,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,bound,after,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,bound,always,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,bound,before,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,bound,eventually,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,bound,finally,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,bound,for,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,bound,immediately,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,bound,never,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,bound,next,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,bound,null,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,bound,until,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,bound,within,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,almostsure,after,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,almostsure,always,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,almostsure,before,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,almostsure,eventually,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,almostsure,finally,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,almostsure,for,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,almostsure,immediately,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,almostsure,never,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,almostsure,next,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,almostsure,null,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,almostsure,until,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,almostsure,within,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,bound,after,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,bound,always,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,bound,before,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,bound,eventually,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,bound,finally,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,bound,for,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,bound,immediately,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,bound,never,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,bound,next,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,bound,null,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,bound,until,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,bound,within,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,almostsure,after,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,almostsure,always,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,almostsure,before,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,almostsure,eventually,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,almostsure,finally,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,almostsure,for,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,almostsure,immediately,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,almostsure,never,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,almostsure,next,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,almostsure,null,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,almostsure,until,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,almostsure,within,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,bound,after,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,bound,always,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,bound,before,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,bound,eventually,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,bound,finally,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,bound,for,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,bound,immediately,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,bound,never,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,bound,next,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,bound,null,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,bound,until,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,holding,bound,within,satisfaction": {
    "pctl": "(G ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "(G ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,almostsure,after,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,almostsure,always,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,almostsure,before,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,almostsure,eventually,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,almostsure,finally,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,almostsure,for,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,almostsure,immediately,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,almostsure,never,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,almostsure,next,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,almostsure,null,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,almostsure,until,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,almostsure,within,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,bound,after,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,bound,always,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,bound,before,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,bound,eventually,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,bound,finally,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,bound,for,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,bound,immediately,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,bound,never,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,bound,next,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,bound,null,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,bound,until,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,bound,within,satisfaction": {
    "pctl": "PROBFORM",
    "pctlExpanded": "PROBFORM",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,almostsure,after,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,almostsure,always,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,almostsure,before,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,almostsure,eventually,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,almostsure,finally,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,almostsure,for,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,almostsure,immediately,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,almostsure,never,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,almostsure,next,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,almostsure,null,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,almostsure,until,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,almostsure,within,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,bound,after,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,bound,always,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,bound,before,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,bound,eventually,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,bound,finally,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,bound,for,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,bound,immediately,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,bound,never,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,bound,next,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,bound,null,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,bound,until,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,bound,within,satisfaction": {
    "pctl": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "pctlExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,almostsure,after,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,almostsure,always,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,almostsure,before,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,almostsure,eventually,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,almostsure,finally,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,almostsure,for,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,almostsure,immediately,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,almostsure,never,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,almostsure,next,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,almostsure,null,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,almostsure,until,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,almostsure,within,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,bound,after,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,bound,always,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,bound,before,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,bound,eventually,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,bound,finally,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,bound,for,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,bound,immediately,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,bound,never,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,bound,next,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,bound,null,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,bound,until,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,holding,bound,within,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | (FLin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | (($scope_mode$ & (X (! $scope_mode$))) V ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,almostsure,after,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,almostsure,always,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,almostsure,before,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,almostsure,eventually,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,almostsure,finally,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,almostsure,for,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,almostsure,immediately,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,almostsure,never,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,almostsure,next,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,almostsure,null,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,almostsure,until,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,almostsure,within,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,bound,after,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,bound,always,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,bound,before,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,bound,eventually,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,bound,finally,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,bound,for,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,bound,immediately,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,bound,never,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,bound,next,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,bound,null,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,bound,until,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,bound,within,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | PROBFORM)",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | PROBFORM)",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,almostsure,after,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,almostsure,always,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,almostsure,before,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,almostsure,eventually,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,almostsure,finally,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,almostsure,for,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,almostsure,immediately,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,almostsure,never,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,almostsure,next,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,almostsure,null,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,almostsure,until,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,almostsure,within,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,bound,after,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,bound,always,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,bound,before,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,bound,eventually,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,bound,finally,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,bound,for,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,bound,immediately,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,bound,never,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,bound,next,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,bound,null,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,bound,until,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,bound,within,satisfaction": {
    "pctl": "(FLin_$scope_mode$ | ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X PROBFORM) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))",
    "pctlExpanded": "(($scope_mode$ & (X (! $scope_mode$))) | ((($scope_mode$ & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! ($scope_mode$ & (X (! $scope_mode$)))))) -> ((X PROBFORM) & (! ($scope_mode$ & (X (! $scope_mode$))))))) & ($regular_condition$ -> PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,almostsure,after,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,almostsure,always,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,almostsure,before,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,almostsure,eventually,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,almostsure,finally,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,almostsure,for,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,almostsure,immediately,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,almostsure,never,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,almostsure,next,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,almostsure,null,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,almostsure,until,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,almostsure,within,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,bound,after,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,bound,always,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,bound,before,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,bound,eventually,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,bound,finally,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,bound,for,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,bound,immediately,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,bound,never,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,bound,next,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,bound,null,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,bound,until,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,holding,bound,within,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X (G ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,almostsure,after,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,almostsure,always,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,almostsure,before,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,almostsure,eventually,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,almostsure,finally,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,almostsure,for,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,almostsure,immediately,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,almostsure,never,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,almostsure,next,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,almostsure,null,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,almostsure,until,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,almostsure,within,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,bound,after,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,bound,always,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,bound,before,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,bound,eventually,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,bound,finally,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,bound,for,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,bound,immediately,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,bound,never,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,bound,next,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,bound,null,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,bound,until,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,bound,within,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X PROBFORM))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> PROBFORM))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X PROBFORM))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> PROBFORM))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,almostsure,after,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,almostsure,always,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,almostsure,before,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,almostsure,eventually,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,almostsure,finally,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,almostsure,for,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,almostsure,immediately,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,almostsure,never,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,almostsure,next,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,almostsure,null,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,almostsure,until,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,almostsure,within,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,bound,after,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,bound,always,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,bound,before,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,bound,eventually,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,bound,finally,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,bound,for,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,bound,immediately,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,bound,never,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,bound,next,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,bound,null,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,bound,until,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,bound,within,satisfaction": {
    "pctl": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "pctlExpanded": "(((! $scope_mode$) -> (((! ((! $scope_mode$) & (X $scope_mode$))) U (((! $scope_mode$) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))) | (G (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X PROBFORM))) & ($regular_condition$ -> PROBFORM))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,almostsure,after,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,almostsure,always,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,almostsure,before,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,almostsure,eventually,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,almostsure,finally,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,almostsure,for,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,almostsure,immediately,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,almostsure,never,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,almostsure,next,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,almostsure,null,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,almostsure,until,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,almostsure,within,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,bound,after,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,bound,always,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,bound,before,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,bound,eventually,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,bound,finally,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,bound,for,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,bound,immediately,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,bound,never,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,bound,next,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,bound,null,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,bound,until,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,holding,bound,within,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | (LNin_$scope_mode$ V ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | (((! $scope_mode$) & (X $scope_mode$)) V ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,almostsure,after,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,almostsure,always,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,almostsure,before,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,almostsure,eventually,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,almostsure,finally,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,almostsure,for,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,almostsure,immediately,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,almostsure,never,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,almostsure,next,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,almostsure,null,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,almostsure,until,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,almostsure,within,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,bound,after,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,bound,always,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,bound,before,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,bound,eventually,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,bound,finally,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,bound,for,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,bound,immediately,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,bound,never,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,bound,next,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,bound,null,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,bound,until,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,bound,within,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | PROBFORM)))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X PROBFORM))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | PROBFORM)))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,almostsure,after,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,almostsure,always,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,almostsure,before,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,almostsure,eventually,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,almostsure,finally,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,almostsure,for,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,almostsure,immediately,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,almostsure,never,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,almostsure,next,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,almostsure,null,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,almostsure,until,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,almostsure,within,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,bound,after,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,bound,always,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,bound,before,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,bound,eventually,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,bound,finally,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,bound,for,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,bound,immediately,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,bound,never,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,bound,next,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,bound,null,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,bound,until,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,bound,within,satisfaction": {
    "pctl": "((G ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X PROBFORM) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> PROBFORM)))))",
    "pctlExpanded": "((G ((! (($scope_mode$ & (X (! $scope_mode$))) & (! LAST))) | (X ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM))))) & ((! $scope_mode$) -> (((! $scope_mode$) & (X $scope_mode$)) | ((((! $scope_mode$) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! ((! $scope_mode$) & (X $scope_mode$))))) -> ((X PROBFORM) & (! ((! $scope_mode$) & (X $scope_mode$)))))) & ($regular_condition$ -> PROBFORM)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  }
}