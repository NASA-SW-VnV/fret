{
  "after,noTrigger,after,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$))) & FLin_$scope_mode$)) & (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (FLin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (FLin_$scope_mode$ | $post_condition$))) & FLin_$scope_mode$))))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) S (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((OT($duration$,0,$regular_condition$)) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((OT($duration$+1,$duration$+1,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$,0,(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) or $post_condition$)))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$))) & FLin_$scope_mode$)) & (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (FLin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (FLin_$scope_mode$ | $post_condition$))) & FLin_$scope_mode$))))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) S (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((OT($duration$,0,$regular_condition$)) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((OT($duration$+1,$duration$+1,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$,0,(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) or $post_condition$)))) ))))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_noTrigger_after_satisfaction.svg"
  },
  "after,noTrigger,always,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (LAST V $post_condition$)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> (LAST V $post_condition$)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> (G $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> (G $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> (G $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> (G $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (LAST V $post_condition$)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> (LAST V $post_condition$)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or $post_condition$) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_noTrigger_always_satisfaction.svg"
  },
  "after,noTrigger,before,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! FLin_$scope_mode$) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! FLin_$scope_mode$) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ($stop_condition$ => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ((( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) and ( not $regular_condition$)) and (YtoPre( not (SI( $regular_condition$, ( not $post_condition$) ))))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! FLin_$scope_mode$) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! FLin_$scope_mode$) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ($stop_condition$ => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ((( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) and ( not $regular_condition$)) and (YtoPre( not (SI( $regular_condition$, ( not $post_condition$) ))))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs in the interval, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_noTrigger_before_satisfaction.svg"
  },
  "after,noTrigger,eventually,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> (F $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> (F $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> (F $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> (F $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, ( not $post_condition$) )))))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_noTrigger_eventually_satisfaction.svg"
  },
  "after,noTrigger,finally,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (LAST V (LAST -> $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> (LAST V (LAST -> $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> TRUE))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> TRUE))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> TRUE))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> TRUE))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (LAST V (LAST -> $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> (LAST V (LAST -> $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or $post_condition$))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, if trigger holds, then RES holds at the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_noTrigger_finally_satisfaction.svg"
  },
  "after,noTrigger,for,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$)) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$)) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((OT($duration$,0,$regular_condition$)) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$)) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$)) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((OT($duration$,0,$regular_condition$)) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_noTrigger_for_satisfaction.svg"
  },
  "after,noTrigger,immediately,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (($regular_condition$ -> $post_condition$) S (($regular_condition$ -> $post_condition$) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (($regular_condition$ -> $post_condition$) S (($regular_condition$ -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ($regular_condition$ => $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> $post_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> $post_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> $post_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> $post_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (($regular_condition$ -> $post_condition$) S (($regular_condition$ -> $post_condition$) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (($regular_condition$ -> $post_condition$) S (($regular_condition$ -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ($regular_condition$ => $post_condition$) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_noTrigger_immediately_satisfaction.svg"
  },
  "after,noTrigger,never,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$)) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$)) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ( not $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_noTrigger_never_satisfaction.svg"
  },
  "after,noTrigger,next,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (LAST | (X $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> (LAST | (X $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (((Y $regular_condition$) -> ($post_condition$ | FLin_$scope_mode$)) S (((Y $regular_condition$) -> ($post_condition$ | FLin_$scope_mode$)) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((Y $regular_condition$) -> ($post_condition$ | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) S (((Y $regular_condition$) -> ($post_condition$ | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((YtoPre($regular_condition$)) => ($post_condition$ or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> (X $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> (X $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> (X $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> (X $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (LAST | (X $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> (LAST | (X $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((Y $regular_condition$) -> ($post_condition$ | FLin_$scope_mode$)) S (((Y $regular_condition$) -> ($post_condition$ | FLin_$scope_mode$)) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((Y $regular_condition$) -> ($post_condition$ | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) S (((Y $regular_condition$) -> ($post_condition$ | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((YtoPre($regular_condition$)) => ($post_condition$ or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_noTrigger_next_satisfaction.svg"
  },
  "after,noTrigger,null,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> (F $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> (F $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> (F $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> (F $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, ( not $post_condition$) )))))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_noTrigger_null_satisfaction.svg"
  },
  "after,noTrigger,until,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ((SI( $regular_condition$, ( not $stop_condition$) )) => $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> ($stop_condition$ V ($post_condition$ | $stop_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> ($stop_condition$ V ($post_condition$ | $stop_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> ($stop_condition$ V ($post_condition$ | $stop_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> ($stop_condition$ V ($post_condition$ | $stop_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ((SI( $regular_condition$, ( not $stop_condition$) )) => $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_noTrigger_until_satisfaction.svg"
  },
  "after,noTrigger,within,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (FLin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (FLin_$scope_mode$ | $post_condition$))) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) S (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((OT($duration$,$duration$,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$-1,0,(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) or $post_condition$)))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> (F[<=$duration$] $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> (F[<=$duration$] $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G ($regular_condition$ -> (F[<=$duration$] $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G ($regular_condition$ -> (F[<=$duration$] $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (FLin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (FLin_$scope_mode$ | $post_condition$))) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) S (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((OT($duration$,$duration$,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$-1,0,(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) or $post_condition$)))) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_noTrigger_within_satisfaction.svg"
  },
  "after,null,after,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((((O[<=$duration$] FLin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FLin_$scope_mode$) -> (! $post_condition$)) & FLin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$+1] FLin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$+1] FLin_$scope_mode$)) & FLin_$scope_mode$))))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! $post_condition$)) S (((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$+1] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) S ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$+1] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((OT($duration$,0,((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => ( not $post_condition$)) )) and (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $post_condition$) )) => (OT($duration$,0,((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((((O[<=$duration$] FLin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FLin_$scope_mode$) -> (! $post_condition$)) & FLin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$+1] FLin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$+1] FLin_$scope_mode$)) & FLin_$scope_mode$))))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! $post_condition$)) S (((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$+1] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) S ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$+1] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((OT($duration$,0,((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => ( not $post_condition$)) )) and (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $post_condition$) )) => (OT($duration$,0,((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))))) ))))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_after_satisfaction.svg"
  },
  "after,null,always,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V $post_condition$)))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V $post_condition$)))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ($post_condition$ S ($post_condition$ & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ($post_condition$ S ($post_condition$ & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), $post_condition$ )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G $post_condition$)))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G $post_condition$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G $post_condition$)))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G $post_condition$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V $post_condition$)))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V $post_condition$)))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ($post_condition$ S ($post_condition$ & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ($post_condition$ S ($post_condition$ & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), $post_condition$ )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_always_satisfaction.svg"
  },
  "after,null,before,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (($post_condition$ | LAST) V (! $stop_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (($post_condition$ | LAST) V (! $stop_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (($stop_condition$ -> ((! FLin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)))))) S (($stop_condition$ -> ((! FLin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)))))) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (($stop_condition$ -> ((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))))) S (($stop_condition$ -> ((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ($stop_condition$ => (( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) and (YtoPre( not (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $post_condition$) )))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ($post_condition$ V (! $stop_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ($post_condition$ V (! $stop_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ($post_condition$ V (! $stop_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ($post_condition$ V (! $stop_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (($post_condition$ | LAST) V (! $stop_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (($post_condition$ | LAST) V (! $stop_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (($stop_condition$ -> ((! FLin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)))))) S (($stop_condition$ -> ((! FLin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)))))) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (($stop_condition$ -> ((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))))) S (($stop_condition$ -> ((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ($stop_condition$ => (( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) and (YtoPre( not (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $post_condition$) )))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs in the interval, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_before_satisfaction.svg"
  },
  "after,null,eventually,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((! LAST) U $post_condition$)))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((! LAST) U $post_condition$)))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$))))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ( not (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (F $post_condition$)))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (F $post_condition$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (F $post_condition$)))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (F $post_condition$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((! LAST) U $post_condition$)))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((! LAST) U $post_condition$)))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$))))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ( not (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $post_condition$) ))))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_eventually_satisfaction.svg"
  },
  "after,null,finally,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V (LAST -> $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V (LAST -> $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> $post_condition$)",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$)",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => $post_condition$)",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U FLin_$scope_mode$) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U FLin_$scope_mode$) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V (LAST -> $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V (LAST -> $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> $post_condition$)",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$)",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => $post_condition$)",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, if trigger holds, then RES holds at the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_finally_satisfaction.svg"
  },
  "after,null,for,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (((O[<=$duration$] FLin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] FLin_$scope_mode$) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) S (((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((OT($duration$,0,((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((O[<=$duration$] FLin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] FLin_$scope_mode$) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) S (((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((OT($duration$,0,((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => $post_condition$) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_for_satisfaction.svg"
  },
  "after,null,immediately,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X $post_condition$))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X $post_condition$))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((FLin_$scope_mode$ -> $post_condition$) S ((FLin_$scope_mode$ -> $post_condition$) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> $post_condition$) S (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), (((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X $post_condition$))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X $post_condition$))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X $post_condition$))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X $post_condition$))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X $post_condition$))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X $post_condition$))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((FLin_$scope_mode$ -> $post_condition$) S ((FLin_$scope_mode$ -> $post_condition$) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> $post_condition$) S (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), (((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => $post_condition$) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_immediately_satisfaction.svg"
  },
  "after,null,never,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V (! $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V (! $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G (! $post_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G (! $post_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G (! $post_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G (! $post_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V (! $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V (! $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $post_condition$) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_never_satisfaction.svg"
  },
  "after,null,next,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST | (X $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST | (X $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (((Y FLin_$scope_mode$) -> $post_condition$) S (((Y FLin_$scope_mode$) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((Y (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) S (((Y (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((YtoPre((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (X $post_condition$)))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (X $post_condition$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (X $post_condition$)))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (X $post_condition$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST | (X $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST | (X $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((Y FLin_$scope_mode$) -> $post_condition$) S (((Y FLin_$scope_mode$) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((Y (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) S (((Y (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((YtoPre((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => $post_condition$) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_next_satisfaction.svg"
  },
  "after,null,null,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((! LAST) U $post_condition$)))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((! LAST) U $post_condition$)))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$))))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ( not (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (F $post_condition$)))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (F $post_condition$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (F $post_condition$)))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (F $post_condition$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((! LAST) U $post_condition$)))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((! LAST) U $post_condition$)))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$))))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ( not (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $post_condition$) ))))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_null_satisfaction.svg"
  },
  "after,null,until,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((((! $stop_condition$) S ((! $stop_condition$) & FLin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & FLin_$scope_mode$)) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $stop_condition$) S ((! $stop_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $stop_condition$) )) => $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ($stop_condition$ V ($post_condition$ | $stop_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ($stop_condition$ V ($post_condition$ | $stop_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ($stop_condition$ V ($post_condition$ | $stop_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ($stop_condition$ V ($post_condition$ | $stop_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((((! $stop_condition$) S ((! $stop_condition$) & FLin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & FLin_$scope_mode$)) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $stop_condition$) S ((! $stop_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $stop_condition$) )) => $post_condition$) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_until_satisfaction.svg"
  },
  "after,null,within,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$] FLin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$] FLin_$scope_mode$)) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) S ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $post_condition$) )) => (OT($duration$-1,0,((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (F[<=$duration$] $post_condition$)))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (F[<=$duration$] $post_condition$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (F[<=$duration$] $post_condition$)))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (F[<=$duration$] $post_condition$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$] FLin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$] FLin_$scope_mode$)) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) S ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $post_condition$) )) => (OT($duration$-1,0,((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_within_satisfaction.svg"
  },
  "after,regular,after,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$))) & FLin_$scope_mode$)) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (FLin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (FLin_$scope_mode$ | $post_condition$))) & FLin_$scope_mode$))))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (! $post_condition$))) -> (O[<$duration$+1] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (! $post_condition$))) -> (O[<$duration$+1] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((OT($duration$,0,($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((OT($duration$+1,$duration$+1,(($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) and ( not $post_condition$)))) => (OT($duration$,0,(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) or $post_condition$)))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$))) & FLin_$scope_mode$)) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (FLin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (FLin_$scope_mode$ | $post_condition$))) & FLin_$scope_mode$))))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (! $post_condition$))) -> (O[<$duration$+1] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (! $post_condition$))) -> (O[<$duration$+1] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((OT($duration$,0,($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((OT($duration$+1,$duration$+1,(($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) and ( not $post_condition$)))) => (OT($duration$,0,(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) or $post_condition$)))) ))))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_after_satisfaction.svg"
  },
  "after,regular,always,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V $post_condition$)))) & ($regular_condition$ -> (LAST V $post_condition$)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V $post_condition$)))) & ($regular_condition$ -> (LAST V $post_condition$)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G $post_condition$)))) & ($regular_condition$ -> (G $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G $post_condition$)))) & ($regular_condition$ -> (G $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G $post_condition$)))) & ($regular_condition$ -> (G $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G $post_condition$)))) & ($regular_condition$ -> (G $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V $post_condition$)))) & ($regular_condition$ -> (LAST V $post_condition$)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V $post_condition$)))) & ($regular_condition$ -> (LAST V $post_condition$)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or $post_condition$) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_always_satisfaction.svg"
  },
  "after,regular,before,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($post_condition$ | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($post_condition$ | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! FLin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! FLin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))))))))) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ($stop_condition$ => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ((( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) and ( not ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))))) and (YtoPre( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))), ( not $post_condition$) ))))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($post_condition$ V (! $stop_condition$))))) & ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($post_condition$ V (! $stop_condition$))))) & ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($post_condition$ V (! $stop_condition$))))) & ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($post_condition$ V (! $stop_condition$))))) & ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($post_condition$ | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($post_condition$ | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! FLin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! FLin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))))))))) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ($stop_condition$ => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ((( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) and ( not ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))))) and (YtoPre( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))), ( not $post_condition$) ))))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs in the interval, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_before_satisfaction.svg"
  },
  "after,regular,eventually,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))))))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))), ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))))))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))), ( not $post_condition$) )))))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_eventually_satisfaction.svg"
  },
  "after,regular,finally,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (LAST -> $post_condition$))))) & ($regular_condition$ -> (LAST V (LAST -> $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (LAST -> $post_condition$))))) & ($regular_condition$ -> (LAST V (LAST -> $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> TRUE)) & ($regular_condition$ -> TRUE))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> TRUE)) & ($regular_condition$ -> TRUE))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> TRUE)) & ($regular_condition$ -> TRUE))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> TRUE)) & ($regular_condition$ -> TRUE))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (LAST -> $post_condition$))))) & ($regular_condition$ -> (LAST V (LAST -> $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (LAST -> $post_condition$))))) & ($regular_condition$ -> (LAST V (LAST -> $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or $post_condition$))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, if trigger holds, then RES holds at the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_finally_satisfaction.svg"
  },
  "after,regular,for,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$)) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((OT($duration$,0,($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$)) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((OT($duration$,0,($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_for_satisfaction.svg"
  },
  "after,regular,immediately,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), (($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), (($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => $post_condition$) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_immediately_satisfaction.svg"
  },
  "after,regular,never,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$)) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$)) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ( not $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_never_satisfaction.svg"
  },
  "after,regular,next,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X $post_condition$))))) & ($regular_condition$ -> (LAST | (X $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X $post_condition$))))) & ($regular_condition$ -> (LAST | (X $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> ($post_condition$ | FLin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> ($post_condition$ | FLin_$scope_mode$)) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> ($post_condition$ | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> ($post_condition$ | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((YtoPre($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))))) => ($post_condition$ or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X $post_condition$)))) & ($regular_condition$ -> (X $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X $post_condition$)))) & ($regular_condition$ -> (X $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X $post_condition$)))) & ($regular_condition$ -> (X $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X $post_condition$)))) & ($regular_condition$ -> (X $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X $post_condition$))))) & ($regular_condition$ -> (LAST | (X $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X $post_condition$))))) & ($regular_condition$ -> (LAST | (X $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> ($post_condition$ | FLin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> ($post_condition$ | FLin_$scope_mode$)) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> ($post_condition$ | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> ($post_condition$ | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((YtoPre($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))))) => ($post_condition$ or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_next_satisfaction.svg"
  },
  "after,regular,null,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))))))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))), ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))))))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))), ( not $post_condition$) )))))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_null_satisfaction.svg"
  },
  "after,regular,until,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))) -> $post_condition$)) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))) -> $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))), ( not $stop_condition$) )) => $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($stop_condition$ V ($post_condition$ | $stop_condition$))))) & ($regular_condition$ -> ($stop_condition$ V ($post_condition$ | $stop_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($stop_condition$ V ($post_condition$ | $stop_condition$))))) & ($regular_condition$ -> ($stop_condition$ V ($post_condition$ | $stop_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($stop_condition$ V ($post_condition$ | $stop_condition$))))) & ($regular_condition$ -> ($stop_condition$ V ($post_condition$ | $stop_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($stop_condition$ V ($post_condition$ | $stop_condition$))))) & ($regular_condition$ -> ($stop_condition$ V ($post_condition$ | $stop_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))) -> $post_condition$)) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))) -> $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))), ( not $stop_condition$) )) => $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_until_satisfaction.svg"
  },
  "after,regular,within,satisfaction": {
    "endpoints": {
      "left": "FLin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "LAST",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (FLin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (FLin_$scope_mode$ | $post_condition$))) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (! $post_condition$))) -> (O[<$duration$] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (! $post_condition$))) -> (O[<$duration$] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((OT($duration$,$duration$,(($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) and ( not $post_condition$)))) => (OT($duration$-1,0,(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) or $post_condition$)))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] $post_condition$)))) & ($regular_condition$ -> (F[<=$duration$] $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] $post_condition$)))) & ($regular_condition$ -> (F[<=$duration$] $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] $post_condition$)))) & ($regular_condition$ -> (F[<=$duration$] $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] $post_condition$)))) & ($regular_condition$ -> (F[<=$duration$] $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (FLin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (FLin_$scope_mode$ | $post_condition$))) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (! $post_condition$))) -> (O[<$duration$] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (! $post_condition$))) -> (O[<$duration$] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))), ((OT($duration$,$duration$,(($regular_condition$ and ((YtoPre( not $regular_condition$)) or ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) and ( not $post_condition$)))) => (OT($duration$-1,0,(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) or $post_condition$)))) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_within_satisfaction.svg"
  },
  "before,noTrigger,after,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(((FFin_$scope_mode$ | LAST) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((FFin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (FFin_$scope_mode$ | LAST)))))) | $scope_mode$)",
    "ftExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y ((H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] ((Z FALSE) | $post_condition$)))))))) & ((H (! FFin_$scope_mode$)) -> ((H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] ((Z FALSE) | $post_condition$)))))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y ((H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] ((Z FALSE) | $post_condition$)))))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> ((H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] ((Z FALSE) | $post_condition$)))))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre((H((OT($duration$,0,$regular_condition$)) => ((H( not $regular_condition$)) or ( not $post_condition$)))) and (H((OT($duration$+1,$duration$+1,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$,0,((ZtoPre( false )) or $post_condition$))))))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => ((H((OT($duration$,0,$regular_condition$)) => ((H( not $regular_condition$)) or ( not $post_condition$)))) and (H((OT($duration$+1,$duration$+1,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$,0,((ZtoPre( false )) or $post_condition$))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FFin_$scope_mode$ V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (FFin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] FFin_$scope_mode$))))) | $scope_mode$)",
    "ftInfAUExpanded": "(((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (FFin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] FFin_$scope_mode$)))))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (FFin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] FFin_$scope_mode$)))))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y ((H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] ((Z FALSE) | $post_condition$))))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y ((H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] ((Z FALSE) | $post_condition$))))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre((H((OT($duration$,0,$regular_condition$)) => ((H( not $regular_condition$)) or ( not $post_condition$)))) and (H((OT($duration$+1,$duration$+1,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$,0,((ZtoPre( false )) or $post_condition$)))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_noTrigger_after_satisfaction.svg"
  },
  "before,noTrigger,always,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(((FFin_$scope_mode$ | LAST) V ($regular_condition$ -> ((FFin_$scope_mode$ | LAST) V $post_condition$))) | $scope_mode$)",
    "ftExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | $post_condition$))))) & ((H (! FFin_$scope_mode$)) -> (H ((H (! $regular_condition$)) | $post_condition$))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | $post_condition$))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H ((H (! $regular_condition$)) | $post_condition$))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((H( not $regular_condition$)) or $post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H((H( not $regular_condition$)) or $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FFin_$scope_mode$ V ($regular_condition$ -> (FFin_$scope_mode$ V $post_condition$))) | $scope_mode$)",
    "ftInfAUExpanded": "(((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> (FFin_$scope_mode$ V $post_condition$)))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> (FFin_$scope_mode$ V $post_condition$)))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((H( not $regular_condition$)) or $post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_noTrigger_always_satisfaction.svg"
  },
  "before,noTrigger,before,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(((FFin_$scope_mode$ | LAST) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (FFin_$scope_mode$ | LAST)))) & (! (FFin_$scope_mode$ | LAST))) U $stop_condition$)))) | $scope_mode$)",
    "ftExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$)))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))))))) & ((H (! FFin_$scope_mode$)) -> (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H($stop_condition$ => ((H( not $regular_condition$)) or (((YtoPre( true )) and ( not $regular_condition$)) and (YtoPre( not (SI( $regular_condition$, ( not $post_condition$) ))))))))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H($stop_condition$ => ((H( not $regular_condition$)) or (((YtoPre( true )) and ( not $regular_condition$)) and (YtoPre( not (SI( $regular_condition$, ( not $post_condition$) ))))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FFin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | FFin_$scope_mode$))) & (! FFin_$scope_mode$)) U $stop_condition$)))) | $scope_mode$)",
    "ftInfAUExpanded": "(((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | FFin_$scope_mode$))) & (! FFin_$scope_mode$)) U $stop_condition$))))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | FFin_$scope_mode$))) & (! FFin_$scope_mode$)) U $stop_condition$))))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H($stop_condition$ => ((H( not $regular_condition$)) or (((YtoPre( true )) and ( not $regular_condition$)) and (YtoPre( not (SI( $regular_condition$, ( not $post_condition$) )))))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs in the interval, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_noTrigger_before_satisfaction.svg"
  },
  "before,noTrigger,eventually,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(((FFin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (FFin_$scope_mode$ | LAST)) U $post_condition$))) | $scope_mode$)",
    "ftExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & ((H (! FFin_$scope_mode$)) -> ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre((H( not $regular_condition$)) or ( not (SI( $regular_condition$, ( not $post_condition$) ))))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => ((H( not $regular_condition$)) or ( not (SI( $regular_condition$, ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FFin_$scope_mode$ V ($regular_condition$ -> ((! FFin_$scope_mode$) U $post_condition$))) | $scope_mode$)",
    "ftInfAUExpanded": "(((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> ((! FFin_$scope_mode$) U $post_condition$)))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> ((! FFin_$scope_mode$) U $post_condition$)))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre((H( not $regular_condition$)) or ( not (SI( $regular_condition$, ( not $post_condition$) )))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_noTrigger_eventually_satisfaction.svg"
  },
  "before,noTrigger,finally,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(((FFin_$scope_mode$ | LAST) V ($regular_condition$ -> ((FFin_$scope_mode$ | LAST) V ((FFin_$scope_mode$ | LAST) -> $post_condition$)))) | $scope_mode$)",
    "ftExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) -> $post_condition$)))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | $post_condition$)))) & ((H (! FFin_$scope_mode$)) -> ((H (! $regular_condition$)) | $post_condition$)))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | $post_condition$)))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> ((H (! $regular_condition$)) | $post_condition$)))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre((H( not $regular_condition$)) or $post_condition$)))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => ((H( not $regular_condition$)) or $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FFin_$scope_mode$ V ($regular_condition$ -> (FFin_$scope_mode$ V (FFin_$scope_mode$ -> $post_condition$)))) | $scope_mode$)",
    "ftInfAUExpanded": "(((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$)))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> (FFin_$scope_mode$ V (FFin_$scope_mode$ -> $post_condition$))))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> (FFin_$scope_mode$ V (FFin_$scope_mode$ -> $post_condition$))))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | $post_condition$))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre((H( not $regular_condition$)) or $post_condition$))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, if trigger holds, then RES holds at the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_noTrigger_finally_satisfaction.svg"
  },
  "before,noTrigger,for,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(((FFin_$scope_mode$ | LAST) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((FFin_$scope_mode$ | LAST) V $post_condition$)))) | $scope_mode$)",
    "ftExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$)))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | $post_condition$)))))) & ((H (! FFin_$scope_mode$)) -> (H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | $post_condition$)))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | $post_condition$)))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | $post_condition$)))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((OT($duration$,0,$regular_condition$)) => ((H( not $regular_condition$)) or $post_condition$)))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H((OT($duration$,0,$regular_condition$)) => ((H( not $regular_condition$)) or $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FFin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (FFin_$scope_mode$ V $post_condition$)))) | $scope_mode$)",
    "ftInfAUExpanded": "(((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (FFin_$scope_mode$ V $post_condition$))))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (FFin_$scope_mode$ V $post_condition$))))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | $post_condition$))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((OT($duration$,0,$regular_condition$)) => ((H( not $regular_condition$)) or $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_noTrigger_for_satisfaction.svg"
  },
  "before,noTrigger,immediately,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(((FFin_$scope_mode$ | LAST) V ($regular_condition$ -> $post_condition$)) | $scope_mode$)",
    "ftExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> $post_condition$)) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ($regular_condition$ -> $post_condition$))))) & ((H (! FFin_$scope_mode$)) -> (H ($regular_condition$ -> $post_condition$))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ($regular_condition$ -> $post_condition$))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H ($regular_condition$ -> $post_condition$))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H($regular_condition$ => $post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H($regular_condition$ => $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FFin_$scope_mode$ V ($regular_condition$ -> $post_condition$)) | $scope_mode$)",
    "ftInfAUExpanded": "(((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> $post_condition$)) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> $post_condition$))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> $post_condition$))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> $post_condition$))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> $post_condition$))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ($regular_condition$ -> $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ($regular_condition$ -> $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H($regular_condition$ => $post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_noTrigger_immediately_satisfaction.svg"
  },
  "before,noTrigger,never,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(((FFin_$scope_mode$ | LAST) V ($regular_condition$ -> ((FFin_$scope_mode$ | LAST) V (! $post_condition$)))) | $scope_mode$)",
    "ftExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$)))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$)))))) & ((H (! FFin_$scope_mode$)) -> (H ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$)))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((H( not $regular_condition$)) or ( not $post_condition$)))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H((H( not $regular_condition$)) or ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FFin_$scope_mode$ V ($regular_condition$ -> (FFin_$scope_mode$ V (! $post_condition$)))) | $scope_mode$)",
    "ftInfAUExpanded": "(((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> (FFin_$scope_mode$ V (! $post_condition$))))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> (FFin_$scope_mode$ V (! $post_condition$))))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((H( not $regular_condition$)) or ( not $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_noTrigger_never_satisfaction.svg"
  },
  "before,noTrigger,next,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(((FFin_$scope_mode$ | LAST) V ($regular_condition$ -> ((FFin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (FFin_$scope_mode$ | LAST)))))) | $scope_mode$)",
    "ftExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((Y $regular_condition$) -> ($post_condition$ | (Z FALSE))))))) & ((H (! FFin_$scope_mode$)) -> (H ((Y $regular_condition$) -> ($post_condition$ | (Z FALSE))))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((Y $regular_condition$) -> ($post_condition$ | (Z FALSE))))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H ((Y $regular_condition$) -> ($post_condition$ | (Z FALSE))))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((YtoPre($regular_condition$)) => ($post_condition$ or (ZtoPre( false )))))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H((YtoPre($regular_condition$)) => ($post_condition$ or (ZtoPre( false )))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FFin_$scope_mode$ V ($regular_condition$ -> (FFin_$scope_mode$ | ((X $post_condition$) & (! FFin_$scope_mode$))))) | $scope_mode$)",
    "ftInfAUExpanded": "(((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> (FFin_$scope_mode$ | ((X $post_condition$) & (! FFin_$scope_mode$)))))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> (FFin_$scope_mode$ | ((X $post_condition$) & (! FFin_$scope_mode$)))))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((Y $regular_condition$) -> ($post_condition$ | (Z FALSE)))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((Y $regular_condition$) -> ($post_condition$ | (Z FALSE)))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((YtoPre($regular_condition$)) => ($post_condition$ or (ZtoPre( false ))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_noTrigger_next_satisfaction.svg"
  },
  "before,noTrigger,null,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(((FFin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (FFin_$scope_mode$ | LAST)) U $post_condition$))) | $scope_mode$)",
    "ftExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & ((H (! FFin_$scope_mode$)) -> ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre((H( not $regular_condition$)) or ( not (SI( $regular_condition$, ( not $post_condition$) ))))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => ((H( not $regular_condition$)) or ( not (SI( $regular_condition$, ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FFin_$scope_mode$ V ($regular_condition$ -> ((! FFin_$scope_mode$) U $post_condition$))) | $scope_mode$)",
    "ftInfAUExpanded": "(((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> ((! FFin_$scope_mode$) U $post_condition$)))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> ((! FFin_$scope_mode$) U $post_condition$)))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre((H( not $regular_condition$)) or ( not (SI( $regular_condition$, ( not $post_condition$) )))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_noTrigger_null_satisfaction.svg"
  },
  "before,noTrigger,until,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(((FFin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (FFin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (FFin_$scope_mode$ | LAST)) | (FFin_$scope_mode$ | LAST)) V $post_condition$)))) | $scope_mode$)",
    "ftExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) V $post_condition$)))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)))))) & ((H (! FFin_$scope_mode$)) -> (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((H( not $regular_condition$)) or ((SI( $regular_condition$, ( not $stop_condition$) )) => $post_condition$)))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H((H( not $regular_condition$)) or ((SI( $regular_condition$, ( not $stop_condition$) )) => $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FFin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! FFin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & FFin_$scope_mode$) | FFin_$scope_mode$) V $post_condition$)))) | $scope_mode$)",
    "ftInfAUExpanded": "(((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! FFin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & FFin_$scope_mode$) | FFin_$scope_mode$) V $post_condition$))))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! FFin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & FFin_$scope_mode$) | FFin_$scope_mode$) V $post_condition$))))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((H( not $regular_condition$)) or ((SI( $regular_condition$, ( not $stop_condition$) )) => $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_noTrigger_until_satisfaction.svg"
  },
  "before,noTrigger,within,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(((FFin_$scope_mode$ | LAST) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (FFin_$scope_mode$ | LAST))))) | $scope_mode$)",
    "ftExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] ((Z FALSE) | $post_condition$))))))) & ((H (! FFin_$scope_mode$)) -> (H ((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] ((Z FALSE) | $post_condition$))))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] ((Z FALSE) | $post_condition$))))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H ((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] ((Z FALSE) | $post_condition$))))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((OT($duration$,$duration$,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$-1,0,((ZtoPre( false )) or $post_condition$)))))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H((OT($duration$,$duration$,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$-1,0,((ZtoPre( false )) or $post_condition$)))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FFin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] FFin_$scope_mode$)))) | $scope_mode$)",
    "ftInfAUExpanded": "(((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] FFin_$scope_mode$))))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (FFin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] FFin_$scope_mode$))))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] ((Z FALSE) | $post_condition$)))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] ((Z FALSE) | $post_condition$)))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((OT($duration$,$duration$,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$-1,0,((ZtoPre( false )) or $post_condition$))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_noTrigger_within_satisfaction.svg"
  },
  "before,null,after,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((((G[<=$duration$] (! $post_condition$)) | ((FFin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (FFin_$scope_mode$ | LAST)))) | $scope_mode$)",
    "ftExpanded": "((((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y ((H ((O[<=$duration$] (Z FALSE)) -> (! $post_condition$))) & (H ((H (! $post_condition$)) -> (O[<$duration$+1] (Z FALSE)))))))) & ((H (! FFin_$scope_mode$)) -> ((H ((O[<=$duration$] (Z FALSE)) -> (! $post_condition$))) & (H ((H (! $post_condition$)) -> (O[<$duration$+1] (Z FALSE)))))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y ((H ((O[<=$duration$] (Z FALSE)) -> (! $post_condition$))) & (H ((H (! $post_condition$)) -> (O[<$duration$+1] (Z FALSE)))))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> ((H ((O[<=$duration$] (Z FALSE)) -> (! $post_condition$))) & (H ((H (! $post_condition$)) -> (O[<$duration$+1] (Z FALSE)))))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre((H((OT($duration$,0,(ZtoPre( false )))) => ( not $post_condition$))) and (H((H( not $post_condition$)) => (OT($duration$,0,(ZtoPre( false )))))))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => ((H((OT($duration$,0,(ZtoPre( false )))) => ( not $post_condition$))) and (H((H( not $post_condition$)) => (OT($duration$,0,(ZtoPre( false )))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((((G[<=$duration$] (! $post_condition$)) | (FFin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] FFin_$scope_mode$))) | $scope_mode$)",
    "ftInfAUExpanded": "((((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (FFin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] FFin_$scope_mode$)))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (FFin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] FFin_$scope_mode$)))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y ((H ((O[<=$duration$] (Z FALSE)) -> (! $post_condition$))) & (H ((H (! $post_condition$)) -> (O[<$duration$+1] (Z FALSE))))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y ((H ((O[<=$duration$] (Z FALSE)) -> (! $post_condition$))) & (H ((H (! $post_condition$)) -> (O[<$duration$+1] (Z FALSE))))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre((H((OT($duration$,0,(ZtoPre( false )))) => ( not $post_condition$))) and (H((H( not $post_condition$)) => (OT($duration$,0,(ZtoPre( false ))))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_null_after_satisfaction.svg"
  },
  "before,null,always,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(((FFin_$scope_mode$ | LAST) V $post_condition$) | $scope_mode$)",
    "ftExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H $post_condition$)))) & ((H (! FFin_$scope_mode$)) -> (H $post_condition$)))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H $post_condition$)))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H $post_condition$)))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H($post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H($post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FFin_$scope_mode$ V $post_condition$) | $scope_mode$)",
    "ftInfAUExpanded": "(((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (FFin_$scope_mode$ V $post_condition$)) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (FFin_$scope_mode$ V $post_condition$)) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H $post_condition$))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H($post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_null_always_satisfaction.svg"
  },
  "before,null,before,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((! (((! ((! $stop_condition$) & ($post_condition$ | (FFin_$scope_mode$ | LAST)))) & (! (FFin_$scope_mode$ | LAST))) U $stop_condition$)) | $scope_mode$)",
    "ftExpanded": "((! (((! ((! $stop_condition$) & ($post_condition$ | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$)) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ($stop_condition$ -> (Y (O $post_condition$))))))) & ((H (! FFin_$scope_mode$)) -> (H ($stop_condition$ -> (Y (O $post_condition$))))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ($stop_condition$ -> (Y (O $post_condition$))))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H ($stop_condition$ -> (Y (O $post_condition$))))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H($stop_condition$ => (YtoPre(O($post_condition$)))))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H($stop_condition$ => (YtoPre(O($post_condition$)))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((! (((! ((! $stop_condition$) & ($post_condition$ | FFin_$scope_mode$))) & (! FFin_$scope_mode$)) U $stop_condition$)) | $scope_mode$)",
    "ftInfAUExpanded": "((! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | FFin_$scope_mode$))) & (! FFin_$scope_mode$)) U $stop_condition$))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | FFin_$scope_mode$))) & (! FFin_$scope_mode$)) U $stop_condition$))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ($stop_condition$ -> (Y (O $post_condition$)))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ($stop_condition$ -> (Y (O $post_condition$)))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H($stop_condition$ => (YtoPre(O($post_condition$))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs in the interval, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_null_before_satisfaction.svg"
  },
  "before,null,eventually,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(((! (FFin_$scope_mode$ | LAST)) U $post_condition$) | $scope_mode$)",
    "ftExpanded": "(((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (O $post_condition$)))) & ((H (! FFin_$scope_mode$)) -> (O $post_condition$)))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (O $post_condition$)))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (O $post_condition$)))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(O($post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (O($post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FFin_$scope_mode$) U $post_condition$) | $scope_mode$)",
    "ftInfAUExpanded": "(((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((! FFin_$scope_mode$) U $post_condition$)) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((! FFin_$scope_mode$) U $post_condition$)) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (O $post_condition$))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (O $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(O($post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_null_eventually_satisfaction.svg"
  },
  "before,null,finally,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(((FFin_$scope_mode$ | LAST) V ((FFin_$scope_mode$ | LAST) -> $post_condition$)) | $scope_mode$)",
    "ftExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) -> $post_condition$)) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y $post_condition$))) & ((H (! FFin_$scope_mode$)) -> $post_condition$))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y $post_condition$))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> $post_condition$))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre($post_condition$)))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FFin_$scope_mode$ V (FFin_$scope_mode$ -> $post_condition$)) | $scope_mode$)",
    "ftInfAUExpanded": "(((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$)) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (FFin_$scope_mode$ V (FFin_$scope_mode$ -> $post_condition$))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (FFin_$scope_mode$ V (FFin_$scope_mode$ -> $post_condition$))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y $post_condition$)))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y $post_condition$)))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre($post_condition$))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, if trigger holds, then RES holds at the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_null_finally_satisfaction.svg"
  },
  "before,null,for,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(((G[<=$duration$] $post_condition$) | ((FFin_$scope_mode$ | LAST) V $post_condition$)) | $scope_mode$)",
    "ftExpanded": "(((G[<=$duration$] $post_condition$) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$)) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((O[<=$duration$] (Z FALSE)) -> $post_condition$))))) & ((H (! FFin_$scope_mode$)) -> (H ((O[<=$duration$] (Z FALSE)) -> $post_condition$))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((O[<=$duration$] (Z FALSE)) -> $post_condition$))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H ((O[<=$duration$] (Z FALSE)) -> $post_condition$))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((OT($duration$,0,(ZtoPre( false )))) => $post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H((OT($duration$,0,(ZtoPre( false )))) => $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((G[<=$duration$] $post_condition$) | (FFin_$scope_mode$ V $post_condition$)) | $scope_mode$)",
    "ftInfAUExpanded": "(((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((G[<=$duration$] $post_condition$) | (FFin_$scope_mode$ V $post_condition$))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((G[<=$duration$] $post_condition$) | (FFin_$scope_mode$ V $post_condition$))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((O[<=$duration$] (Z FALSE)) -> $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((O[<=$duration$] (Z FALSE)) -> $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((OT($duration$,0,(ZtoPre( false )))) => $post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_null_for_satisfaction.svg"
  },
  "before,null,immediately,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "($post_condition$ | $scope_mode$)",
    "ftExpanded": "($post_condition$ | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((Z FALSE) -> $post_condition$))))) & ((H (! FFin_$scope_mode$)) -> (H ((Z FALSE) -> $post_condition$))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((Z FALSE) -> $post_condition$))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H ((Z FALSE) -> $post_condition$))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((ZtoPre( false )) => $post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H((ZtoPre( false )) => $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "($post_condition$ | $scope_mode$)",
    "ftInfAUExpanded": "($post_condition$ | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> $post_condition$) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> $post_condition$) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> $post_condition$) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> $post_condition$) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((Z FALSE) -> $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((Z FALSE) -> $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((ZtoPre( false )) => $post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_null_immediately_satisfaction.svg"
  },
  "before,null,never,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(((FFin_$scope_mode$ | LAST) V (! $post_condition$)) | $scope_mode$)",
    "ftExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$)) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H (! $post_condition$))))) & ((H (! FFin_$scope_mode$)) -> (H (! $post_condition$))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H (! $post_condition$))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H (! $post_condition$))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H( not $post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H( not $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FFin_$scope_mode$ V (! $post_condition$)) | $scope_mode$)",
    "ftInfAUExpanded": "(((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (FFin_$scope_mode$ V (! $post_condition$))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (FFin_$scope_mode$ V (! $post_condition$))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H (! $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H (! $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H( not $post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_null_never_satisfaction.svg"
  },
  "before,null,next,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(((FFin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (FFin_$scope_mode$ | LAST)))) | $scope_mode$)",
    "ftExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((Y (Z FALSE)) -> $post_condition$))))) & ((H (! FFin_$scope_mode$)) -> (H ((Y (Z FALSE)) -> $post_condition$))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((Y (Z FALSE)) -> $post_condition$))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H ((Y (Z FALSE)) -> $post_condition$))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((YtoPre(ZtoPre( false ))) => $post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H((YtoPre(ZtoPre( false ))) => $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FFin_$scope_mode$ | ((X $post_condition$) & (! FFin_$scope_mode$))) | $scope_mode$)",
    "ftInfAUExpanded": "(((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (FFin_$scope_mode$ | ((X $post_condition$) & (! FFin_$scope_mode$)))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (FFin_$scope_mode$ | ((X $post_condition$) & (! FFin_$scope_mode$)))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((Y (Z FALSE)) -> $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((Y (Z FALSE)) -> $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((YtoPre(ZtoPre( false ))) => $post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_null_next_satisfaction.svg"
  },
  "before,null,null,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(((! (FFin_$scope_mode$ | LAST)) U $post_condition$) | $scope_mode$)",
    "ftExpanded": "(((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (O $post_condition$)))) & ((H (! FFin_$scope_mode$)) -> (O $post_condition$)))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (O $post_condition$)))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (O $post_condition$)))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(O($post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (O($post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FFin_$scope_mode$) U $post_condition$) | $scope_mode$)",
    "ftInfAUExpanded": "(((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((! FFin_$scope_mode$) U $post_condition$)) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((! FFin_$scope_mode$) U $post_condition$)) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (O $post_condition$))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (O $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(O($post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_null_null_satisfaction.svg"
  },
  "before,null,until,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(((! (((! $stop_condition$) & (! (FFin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (FFin_$scope_mode$ | LAST)) | (FFin_$scope_mode$ | LAST)) V $post_condition$)) | $scope_mode$)",
    "ftExpanded": "(((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) V $post_condition$)) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((H (! $stop_condition$)) -> $post_condition$))))) & ((H (! FFin_$scope_mode$)) -> (H ((H (! $stop_condition$)) -> $post_condition$))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((H (! $stop_condition$)) -> $post_condition$))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H ((H (! $stop_condition$)) -> $post_condition$))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((H( not $stop_condition$)) => $post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H((H( not $stop_condition$)) => $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! (((! $stop_condition$) & (! FFin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & FFin_$scope_mode$) | FFin_$scope_mode$) V $post_condition$)) | $scope_mode$)",
    "ftInfAUExpanded": "(((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((! (((! $stop_condition$) & (! FFin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & FFin_$scope_mode$) | FFin_$scope_mode$) V $post_condition$))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((! (((! $stop_condition$) & (! FFin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & FFin_$scope_mode$) | FFin_$scope_mode$) V $post_condition$))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((H (! $stop_condition$)) -> $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((H (! $stop_condition$)) -> $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((H( not $stop_condition$)) => $post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_null_until_satisfaction.svg"
  },
  "before,null,within,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(((F[<=$duration$] $post_condition$) | (F[<$duration$] (FFin_$scope_mode$ | LAST))) | $scope_mode$)",
    "ftExpanded": "(((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((H (! $post_condition$)) -> (O[<$duration$] (Z FALSE))))))) & ((H (! FFin_$scope_mode$)) -> (H ((H (! $post_condition$)) -> (O[<$duration$] (Z FALSE))))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((H (! $post_condition$)) -> (O[<$duration$] (Z FALSE))))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H ((H (! $post_condition$)) -> (O[<$duration$] (Z FALSE))))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((H( not $post_condition$)) => (OT($duration$-1,0,(ZtoPre( false ))))))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H((H( not $post_condition$)) => (OT($duration$-1,0,(ZtoPre( false ))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((F[<=$duration$] $post_condition$) | (F[<$duration$] FFin_$scope_mode$)) | $scope_mode$)",
    "ftInfAUExpanded": "(((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] FFin_$scope_mode$))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] FFin_$scope_mode$))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((H (! $post_condition$)) -> (O[<$duration$] (Z FALSE)))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((H (! $post_condition$)) -> (O[<$duration$] (Z FALSE)))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((H( not $post_condition$)) => (OT($duration$-1,0,(ZtoPre( false )))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_null_within_satisfaction.svg"
  },
  "before,regular,after,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((((FFin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FFin_$scope_mode$ | LAST))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((FFin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (FFin_$scope_mode$ | LAST))))) & (! (FFin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((FFin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (FFin_$scope_mode$ | LAST)))))) | $scope_mode$)",
    "ftExpanded": "(((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y ((H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] (($regular_condition$ & (Z (! $regular_condition$))) & (! $post_condition$))) -> (O[<$duration$+1] ((Z FALSE) | $post_condition$)))))))) & ((H (! FFin_$scope_mode$)) -> ((H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] (($regular_condition$ & (Z (! $regular_condition$))) & (! $post_condition$))) -> (O[<$duration$+1] ((Z FALSE) | $post_condition$)))))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y ((H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] (($regular_condition$ & (Z (! $regular_condition$))) & (! $post_condition$))) -> (O[<$duration$+1] ((Z FALSE) | $post_condition$)))))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> ((H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] (($regular_condition$ & (Z (! $regular_condition$))) & (! $post_condition$))) -> (O[<$duration$+1] ((Z FALSE) | $post_condition$)))))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre((H((OT($duration$,0,($regular_condition$ and (ZtoPre( not $regular_condition$))))) => ((H( not $regular_condition$)) or ( not $post_condition$)))) and (H((OT($duration$+1,$duration$+1,(($regular_condition$ and (ZtoPre( not $regular_condition$))) and ( not $post_condition$)))) => (OT($duration$,0,((ZtoPre( false )) or $post_condition$))))))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => ((H((OT($duration$,0,($regular_condition$ and (ZtoPre( not $regular_condition$))))) => ((H( not $regular_condition$)) or ( not $post_condition$)))) and (H((OT($duration$+1,$duration$+1,(($regular_condition$ and (ZtoPre( not $regular_condition$))) and ( not $post_condition$)))) => (OT($duration$,0,((ZtoPre( false )) or $post_condition$))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (FFin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] FFin_$scope_mode$)))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (FFin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] FFin_$scope_mode$))))) | $scope_mode$)",
    "ftInfAUExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (FFin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] FFin_$scope_mode$)))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (FFin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] FFin_$scope_mode$)))))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FFin_$scope_mode$)))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (FFin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] FFin_$scope_mode$)))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (FFin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] FFin_$scope_mode$)))))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y ((H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] (($regular_condition$ & (Z (! $regular_condition$))) & (! $post_condition$))) -> (O[<$duration$+1] ((Z FALSE) | $post_condition$))))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y ((H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] (($regular_condition$ & (Z (! $regular_condition$))) & (! $post_condition$))) -> (O[<$duration$+1] ((Z FALSE) | $post_condition$))))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre((H((OT($duration$,0,($regular_condition$ and (ZtoPre( not $regular_condition$))))) => ((H( not $regular_condition$)) or ( not $post_condition$)))) and (H((OT($duration$+1,$duration$+1,(($regular_condition$ and (ZtoPre( not $regular_condition$))) and ( not $post_condition$)))) => (OT($duration$,0,((ZtoPre( false )) or $post_condition$)))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_regular_after_satisfaction.svg"
  },
  "before,regular,always,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((((FFin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FFin_$scope_mode$ | LAST))))) -> ((X ((FFin_$scope_mode$ | LAST) V $post_condition$)) & (! (FFin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((FFin_$scope_mode$ | LAST) V $post_condition$))) | $scope_mode$)",
    "ftExpanded": "(((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | $post_condition$))))) & ((H (! FFin_$scope_mode$)) -> (H ((H (! $regular_condition$)) | $post_condition$))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | $post_condition$))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H ((H (! $regular_condition$)) | $post_condition$))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((H( not $regular_condition$)) or $post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H((H( not $regular_condition$)) or $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X (FFin_$scope_mode$ V $post_condition$)) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (FFin_$scope_mode$ V $post_condition$))) | $scope_mode$)",
    "ftInfAUExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X (FFin_$scope_mode$ V $post_condition$)) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (FFin_$scope_mode$ V $post_condition$)))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FFin_$scope_mode$)))) -> ((X (FFin_$scope_mode$ V $post_condition$)) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (FFin_$scope_mode$ V $post_condition$)))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((H( not $regular_condition$)) or $post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_regular_always_satisfaction.svg"
  },
  "before,regular,before,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((((FFin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FFin_$scope_mode$ | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (FFin_$scope_mode$ | LAST)))) & (! (FFin_$scope_mode$ | LAST))) U $stop_condition$))) & (! (FFin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (FFin_$scope_mode$ | LAST)))) & (! (FFin_$scope_mode$ | LAST))) U $stop_condition$)))) | $scope_mode$)",
    "ftExpanded": "(((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$)))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & (Z (! $regular_condition$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))))))))) & ((H (! FFin_$scope_mode$)) -> (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & (Z (! $regular_condition$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))))))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & (Z (! $regular_condition$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))))))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & (Z (! $regular_condition$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))))))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H($stop_condition$ => ((H( not $regular_condition$)) or (((YtoPre( true )) and ( not ($regular_condition$ and (ZtoPre( not $regular_condition$))))) and (YtoPre( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $post_condition$) ))))))))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H($stop_condition$ => ((H( not $regular_condition$)) or (((YtoPre( true )) and ( not ($regular_condition$ and (ZtoPre( not $regular_condition$))))) and (YtoPre( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $post_condition$) ))))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | FFin_$scope_mode$))) & (! FFin_$scope_mode$)) U $stop_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | FFin_$scope_mode$))) & (! FFin_$scope_mode$)) U $stop_condition$)))) | $scope_mode$)",
    "ftInfAUExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | FFin_$scope_mode$))) & (! FFin_$scope_mode$)) U $stop_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | FFin_$scope_mode$))) & (! FFin_$scope_mode$)) U $stop_condition$))))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FFin_$scope_mode$)))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | FFin_$scope_mode$))) & (! FFin_$scope_mode$)) U $stop_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | FFin_$scope_mode$))) & (! FFin_$scope_mode$)) U $stop_condition$))))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & (Z (! $regular_condition$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))))))))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & (Z (! $regular_condition$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))))))))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H($stop_condition$ => ((H( not $regular_condition$)) or (((YtoPre( true )) and ( not ($regular_condition$ and (ZtoPre( not $regular_condition$))))) and (YtoPre( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $post_condition$) )))))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs in the interval, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_regular_before_satisfaction.svg"
  },
  "before,regular,eventually,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((((FFin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FFin_$scope_mode$ | LAST))))) -> ((X ((! (FFin_$scope_mode$ | LAST)) U $post_condition$)) & (! (FFin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (FFin_$scope_mode$ | LAST)) U $post_condition$))) | $scope_mode$)",
    "ftExpanded": "(((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))))) & ((H (! FFin_$scope_mode$)) -> ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $post_condition$) ))))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => ((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X ((! FFin_$scope_mode$) U $post_condition$)) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((! FFin_$scope_mode$) U $post_condition$))) | $scope_mode$)",
    "ftInfAUExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X ((! FFin_$scope_mode$) U $post_condition$)) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((! FFin_$scope_mode$) U $post_condition$)))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FFin_$scope_mode$)))) -> ((X ((! FFin_$scope_mode$) U $post_condition$)) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((! FFin_$scope_mode$) U $post_condition$)))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $post_condition$) )))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_regular_eventually_satisfaction.svg"
  },
  "before,regular,finally,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((((FFin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FFin_$scope_mode$ | LAST))))) -> ((X ((FFin_$scope_mode$ | LAST) V ((FFin_$scope_mode$ | LAST) -> $post_condition$))) & (! (FFin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((FFin_$scope_mode$ | LAST) V ((FFin_$scope_mode$ | LAST) -> $post_condition$)))) | $scope_mode$)",
    "ftExpanded": "(((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) -> $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) -> $post_condition$)))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | $post_condition$)))) & ((H (! FFin_$scope_mode$)) -> ((H (! $regular_condition$)) | $post_condition$)))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | $post_condition$)))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> ((H (! $regular_condition$)) | $post_condition$)))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre((H( not $regular_condition$)) or $post_condition$)))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => ((H( not $regular_condition$)) or $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X (FFin_$scope_mode$ V (FFin_$scope_mode$ -> $post_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (FFin_$scope_mode$ V (FFin_$scope_mode$ -> $post_condition$)))) | $scope_mode$)",
    "ftInfAUExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$)))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X (FFin_$scope_mode$ V (FFin_$scope_mode$ -> $post_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (FFin_$scope_mode$ V (FFin_$scope_mode$ -> $post_condition$))))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FFin_$scope_mode$)))) -> ((X (FFin_$scope_mode$ V (FFin_$scope_mode$ -> $post_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (FFin_$scope_mode$ V (FFin_$scope_mode$ -> $post_condition$))))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | $post_condition$))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre((H( not $regular_condition$)) or $post_condition$))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, if trigger holds, then RES holds at the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_regular_finally_satisfaction.svg"
  },
  "before,regular,for,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((((FFin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FFin_$scope_mode$ | LAST))))) -> ((X ((G[<=$duration$] $post_condition$) | ((FFin_$scope_mode$ | LAST) V $post_condition$))) & (! (FFin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((FFin_$scope_mode$ | LAST) V $post_condition$)))) | $scope_mode$)",
    "ftExpanded": "(((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((G[<=$duration$] $post_condition$) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$)))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | $post_condition$)))))) & ((H (! FFin_$scope_mode$)) -> (H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | $post_condition$)))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | $post_condition$)))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | $post_condition$)))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((OT($duration$,0,($regular_condition$ and (ZtoPre( not $regular_condition$))))) => ((H( not $regular_condition$)) or $post_condition$)))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H((OT($duration$,0,($regular_condition$ and (ZtoPre( not $regular_condition$))))) => ((H( not $regular_condition$)) or $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X ((G[<=$duration$] $post_condition$) | (FFin_$scope_mode$ V $post_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (FFin_$scope_mode$ V $post_condition$)))) | $scope_mode$)",
    "ftInfAUExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X ((G[<=$duration$] $post_condition$) | (FFin_$scope_mode$ V $post_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (FFin_$scope_mode$ V $post_condition$))))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FFin_$scope_mode$)))) -> ((X ((G[<=$duration$] $post_condition$) | (FFin_$scope_mode$ V $post_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (FFin_$scope_mode$ V $post_condition$))))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | $post_condition$))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((OT($duration$,0,($regular_condition$ and (ZtoPre( not $regular_condition$))))) => ((H( not $regular_condition$)) or $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_regular_for_satisfaction.svg"
  },
  "before,regular,immediately,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((((FFin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FFin_$scope_mode$ | LAST))))) -> ((X $post_condition$) & (! (FFin_$scope_mode$ | LAST))))) & ($regular_condition$ -> $post_condition$)) | $scope_mode$)",
    "ftExpanded": "(((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> $post_condition$)) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H (($regular_condition$ & (Z (! $regular_condition$))) -> $post_condition$))))) & ((H (! FFin_$scope_mode$)) -> (H (($regular_condition$ & (Z (! $regular_condition$))) -> $post_condition$))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H (($regular_condition$ & (Z (! $regular_condition$))) -> $post_condition$))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H (($regular_condition$ & (Z (! $regular_condition$))) -> $post_condition$))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H(($regular_condition$ and (ZtoPre( not $regular_condition$))) => $post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H(($regular_condition$ and (ZtoPre( not $regular_condition$))) => $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X $post_condition$) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$)) | $scope_mode$)",
    "ftInfAUExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> $post_condition$)) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X $post_condition$) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> $post_condition$))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FFin_$scope_mode$)))) -> ((X $post_condition$) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> $post_condition$))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H (($regular_condition$ & (Z (! $regular_condition$))) -> $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H (($regular_condition$ & (Z (! $regular_condition$))) -> $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H(($regular_condition$ and (ZtoPre( not $regular_condition$))) => $post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_regular_immediately_satisfaction.svg"
  },
  "before,regular,never,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((((FFin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FFin_$scope_mode$ | LAST))))) -> ((X ((FFin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (FFin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((FFin_$scope_mode$ | LAST) V (! $post_condition$)))) | $scope_mode$)",
    "ftExpanded": "(((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$)))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$)))))) & ((H (! FFin_$scope_mode$)) -> (H ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$)))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((H( not $regular_condition$)) or ( not $post_condition$)))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H((H( not $regular_condition$)) or ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X (FFin_$scope_mode$ V (! $post_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (FFin_$scope_mode$ V (! $post_condition$)))) | $scope_mode$)",
    "ftInfAUExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X (FFin_$scope_mode$ V (! $post_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (FFin_$scope_mode$ V (! $post_condition$))))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FFin_$scope_mode$)))) -> ((X (FFin_$scope_mode$ V (! $post_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (FFin_$scope_mode$ V (! $post_condition$))))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((H( not $regular_condition$)) or ( not $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_regular_never_satisfaction.svg"
  },
  "before,regular,next,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((((FFin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FFin_$scope_mode$ | LAST))))) -> ((X ((FFin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (FFin_$scope_mode$ | LAST))))) & (! (FFin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((FFin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (FFin_$scope_mode$ | LAST)))))) | $scope_mode$)",
    "ftExpanded": "(((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((Y ($regular_condition$ & (Z (! $regular_condition$)))) -> ($post_condition$ | (Z FALSE))))))) & ((H (! FFin_$scope_mode$)) -> (H ((Y ($regular_condition$ & (Z (! $regular_condition$)))) -> ($post_condition$ | (Z FALSE))))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((Y ($regular_condition$ & (Z (! $regular_condition$)))) -> ($post_condition$ | (Z FALSE))))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H ((Y ($regular_condition$ & (Z (! $regular_condition$)))) -> ($post_condition$ | (Z FALSE))))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((YtoPre($regular_condition$ and (ZtoPre( not $regular_condition$)))) => ($post_condition$ or (ZtoPre( false )))))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H((YtoPre($regular_condition$ and (ZtoPre( not $regular_condition$)))) => ($post_condition$ or (ZtoPre( false )))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X (FFin_$scope_mode$ | ((X $post_condition$) & (! FFin_$scope_mode$)))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (FFin_$scope_mode$ | ((X $post_condition$) & (! FFin_$scope_mode$))))) | $scope_mode$)",
    "ftInfAUExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X (FFin_$scope_mode$ | ((X $post_condition$) & (! FFin_$scope_mode$)))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (FFin_$scope_mode$ | ((X $post_condition$) & (! FFin_$scope_mode$)))))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FFin_$scope_mode$)))) -> ((X (FFin_$scope_mode$ | ((X $post_condition$) & (! FFin_$scope_mode$)))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (FFin_$scope_mode$ | ((X $post_condition$) & (! FFin_$scope_mode$)))))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((Y ($regular_condition$ & (Z (! $regular_condition$)))) -> ($post_condition$ | (Z FALSE)))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((Y ($regular_condition$ & (Z (! $regular_condition$)))) -> ($post_condition$ | (Z FALSE)))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((YtoPre($regular_condition$ and (ZtoPre( not $regular_condition$)))) => ($post_condition$ or (ZtoPre( false ))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_regular_next_satisfaction.svg"
  },
  "before,regular,null,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((((FFin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FFin_$scope_mode$ | LAST))))) -> ((X ((! (FFin_$scope_mode$ | LAST)) U $post_condition$)) & (! (FFin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (FFin_$scope_mode$ | LAST)) U $post_condition$))) | $scope_mode$)",
    "ftExpanded": "(((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))))) & ((H (! FFin_$scope_mode$)) -> ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $post_condition$) ))))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => ((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X ((! FFin_$scope_mode$) U $post_condition$)) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((! FFin_$scope_mode$) U $post_condition$))) | $scope_mode$)",
    "ftInfAUExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X ((! FFin_$scope_mode$) U $post_condition$)) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((! FFin_$scope_mode$) U $post_condition$)))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FFin_$scope_mode$)))) -> ((X ((! FFin_$scope_mode$) U $post_condition$)) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((! FFin_$scope_mode$) U $post_condition$)))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $post_condition$) )))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_regular_null_satisfaction.svg"
  },
  "before,regular,until,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((((FFin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FFin_$scope_mode$ | LAST))))) -> ((X ((! (((! $stop_condition$) & (! (FFin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (FFin_$scope_mode$ | LAST)) | (FFin_$scope_mode$ | LAST)) V $post_condition$))) & (! (FFin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (FFin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (FFin_$scope_mode$ | LAST)) | (FFin_$scope_mode$ | LAST)) V $post_condition$)))) | $scope_mode$)",
    "ftExpanded": "(((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) V $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) V $post_condition$)))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))) -> $post_condition$)))))) & ((H (! FFin_$scope_mode$)) -> (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))) -> $post_condition$)))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))) -> $post_condition$)))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))) -> $post_condition$)))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((H( not $regular_condition$)) or ((SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $stop_condition$) )) => $post_condition$)))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H((H( not $regular_condition$)) or ((SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $stop_condition$) )) => $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! FFin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & FFin_$scope_mode$) | FFin_$scope_mode$) V $post_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! FFin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & FFin_$scope_mode$) | FFin_$scope_mode$) V $post_condition$)))) | $scope_mode$)",
    "ftInfAUExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! FFin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & FFin_$scope_mode$) | FFin_$scope_mode$) V $post_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! FFin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & FFin_$scope_mode$) | FFin_$scope_mode$) V $post_condition$))))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FFin_$scope_mode$)))) -> ((X ((! (((! $stop_condition$) & (! FFin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & FFin_$scope_mode$) | FFin_$scope_mode$) V $post_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! FFin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & FFin_$scope_mode$) | FFin_$scope_mode$) V $post_condition$))))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))) -> $post_condition$))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))) -> $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((H( not $regular_condition$)) or ((SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $stop_condition$) )) => $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_regular_until_satisfaction.svg"
  },
  "before,regular,within,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FFin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "ftExtleft": "FTP",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((((FFin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FFin_$scope_mode$ | LAST))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (FFin_$scope_mode$ | LAST)))) & (! (FFin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (FFin_$scope_mode$ | LAST))))) | $scope_mode$)",
    "ftExpanded": "(((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((O[=$duration$] (($regular_condition$ & (Z (! $regular_condition$))) & (! $post_condition$))) -> (O[<$duration$] ((Z FALSE) | $post_condition$))))))) & ((H (! FFin_$scope_mode$)) -> (H ((O[=$duration$] (($regular_condition$ & (Z (! $regular_condition$))) & (! $post_condition$))) -> (O[<$duration$] ((Z FALSE) | $post_condition$))))))",
    "ptExpanded": "((H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((O[=$duration$] (($regular_condition$ & (Z (! $regular_condition$))) & (! $post_condition$))) -> (O[<$duration$] ((Z FALSE) | $post_condition$))))))) & ((H (! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (H ((O[=$duration$] (($regular_condition$ & (Z (! $regular_condition$))) & (! $post_condition$))) -> (O[<$duration$] ((Z FALSE) | $post_condition$))))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((OT($duration$,$duration$,(($regular_condition$ and (ZtoPre( not $regular_condition$))) and ( not $post_condition$)))) => (OT($duration$-1,0,((ZtoPre( false )) or $post_condition$)))))))) and ((H( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (H((OT($duration$,$duration$,(($regular_condition$ and (ZtoPre( not $regular_condition$))) and ( not $post_condition$)))) => (OT($duration$-1,0,((ZtoPre( false )) or $post_condition$)))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] FFin_$scope_mode$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] FFin_$scope_mode$)))) | $scope_mode$)",
    "ftInfAUExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] FFin_$scope_mode$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] FFin_$scope_mode$))))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FFin_$scope_mode$)))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] FFin_$scope_mode$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] FFin_$scope_mode$))))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (Y TRUE)) -> (Y (H ((O[=$duration$] (($regular_condition$ & (Z (! $regular_condition$))) & (! $post_condition$))) -> (O[<$duration$] ((Z FALSE) | $post_condition$)))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) & (Y TRUE)) -> (Y (H ((O[=$duration$] (($regular_condition$ & (Z (! $regular_condition$))) & (! $post_condition$))) -> (O[<$duration$] ((Z FALSE) | $post_condition$)))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) and (YtoPre( true ))) => (YtoPre(H((OT($duration$,$duration$,(($regular_condition$ and (ZtoPre( not $regular_condition$))) and ( not $post_condition$)))) => (OT($duration$-1,0,((ZtoPre( false )) or $post_condition$))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds. If $scope_mode$ holds initially, the requirement is vacuously satisfied.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_regular_within_satisfaction.svg"
  },
  "in,noTrigger,after,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((Lin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (Lin_$scope_mode$ | LAST))))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((Lin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (Lin_$scope_mode$ | LAST))))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y ((((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$))) & Fin_$scope_mode$)) & (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (Fin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (Fin_$scope_mode$ | $post_condition$))) & Fin_$scope_mode$)))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$))) & Fin_$scope_mode$)) & (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (Fin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (Fin_$scope_mode$ | $post_condition$))) & Fin_$scope_mode$)))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$))) & ($scope_mode$ & (Z (! $scope_mode$))))) & (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) S (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) & ($scope_mode$ & (Z (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> ((((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$))) & ($scope_mode$ & (Z (! $scope_mode$))))) & (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) S (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,0,$regular_condition$)) => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$+1,$duration$+1,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) or $post_condition$)))) )))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,0,$regular_condition$)) => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$+1,$duration$+1,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) or $post_condition$)))) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X (Lin_$scope_mode$ V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))))))) & ($scope_mode$ -> (Lin_$scope_mode$ V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))) & ($scope_mode$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$))))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$))))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$))))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y ((((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$))) & Fin_$scope_mode$)) & (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (Fin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (Fin_$scope_mode$ | $post_condition$))) & Fin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$))) & ($scope_mode$ & (Z (! $scope_mode$))))) & (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) S (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) & ($scope_mode$ & (Z (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,0,$regular_condition$)) => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$+1,$duration$+1,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) or $post_condition$)))) ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_noTrigger_after_satisfaction.svg"
  },
  "in,noTrigger,always,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) V $post_condition$)))))) & ($scope_mode$ -> ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) V $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$)))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$)))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$) & Fin_$scope_mode$))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$)))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$)))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$) ))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ V $post_condition$)))))) & ($scope_mode$ -> (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ V $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))) & ($scope_mode$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ V $post_condition$))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ V $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ V $post_condition$))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ V $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_noTrigger_always_satisfaction.svg"
  },
  "in,noTrigger,before,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (Lin_$scope_mode$ | LAST)))) & (! (Lin_$scope_mode$ | LAST))) U $stop_condition$))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (Lin_$scope_mode$ | LAST)))) & (! (Lin_$scope_mode$ | LAST))) U $stop_condition$))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $stop_condition$))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $stop_condition$))))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! Fin_$scope_mode$) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! Fin_$scope_mode$) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! Fin_$scope_mode$) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! Fin_$scope_mode$) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & Fin_$scope_mode$))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! ($scope_mode$ & (Z (! $scope_mode$)))) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! ($scope_mode$ & (Z (! $scope_mode$)))) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & ($scope_mode$ & (Z (! $scope_mode$)))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! ($scope_mode$ & (Z (! $scope_mode$)))) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! ($scope_mode$ & (Z (! $scope_mode$)))) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & ($scope_mode$ & (Z (! $scope_mode$)))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ($stop_condition$ => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ((( not ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$))))) and ( not $regular_condition$)) and (YtoPre( not (SI( $regular_condition$, ( not $post_condition$) ))))))) ))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ($stop_condition$ => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ((( not ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$))))) and ( not $regular_condition$)) and (YtoPre( not (SI( $regular_condition$, ( not $post_condition$) ))))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X (Lin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))))))) & ($scope_mode$ -> (Lin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))))))) & ($scope_mode$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$)))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$)))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! Fin_$scope_mode$) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! Fin_$scope_mode$) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! ($scope_mode$ & (Z (! $scope_mode$)))) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! ($scope_mode$ & (Z (! $scope_mode$)))) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ($stop_condition$ => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ((( not ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$))))) and ( not $regular_condition$)) and (YtoPre( not (SI( $regular_condition$, ( not $post_condition$) ))))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs in the interval, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_noTrigger_before_satisfaction.svg"
  },
  "in,noTrigger,eventually,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)))))) & ($scope_mode$ -> ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, ( not $post_condition$) ))))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X (Lin_$scope_mode$ V ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$)))))) & ($scope_mode$ -> (Lin_$scope_mode$ V ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))))) & ($scope_mode$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, ( not $post_condition$) )))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_noTrigger_eventually_satisfaction.svg"
  },
  "in,noTrigger,finally,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) V ((Lin_$scope_mode$ | LAST) -> $post_condition$))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) V ((Lin_$scope_mode$ | LAST) -> $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) -> $post_condition$))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) -> $post_condition$))))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$)))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$)))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$))))))) & ($scope_mode$ -> (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$))))))) & ($scope_mode$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$)))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$)))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$)))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, if trigger holds, then RES holds at the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_noTrigger_finally_satisfaction.svg"
  },
  "in,noTrigger,for,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((Lin_$scope_mode$ | LAST) V $post_condition$))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((Lin_$scope_mode$ | LAST) V $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$))))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)) & Fin_$scope_mode$))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$)) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$)) & ($scope_mode$ & (Z (! $scope_mode$)))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$)) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$)) & ($scope_mode$ & (Z (! $scope_mode$)))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,0,$regular_condition$)) => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)) ))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,0,$regular_condition$)) => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X (Lin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))))))) & ($scope_mode$ -> (Lin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))))) & ($scope_mode$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$)))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$)) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$)) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,0,$regular_condition$)) => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_noTrigger_for_satisfaction.svg"
  },
  "in,noTrigger,immediately,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> $post_condition$))))) & ($scope_mode$ -> ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> $post_condition$))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> $post_condition$))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> $post_condition$))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y (($regular_condition$ -> $post_condition$) S (($regular_condition$ -> $post_condition$) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (($regular_condition$ -> $post_condition$) S (($regular_condition$ -> $post_condition$) & Fin_$scope_mode$))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (($regular_condition$ -> $post_condition$) S (($regular_condition$ -> $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$)))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (($regular_condition$ -> $post_condition$) S (($regular_condition$ -> $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$)))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ($regular_condition$ => $post_condition$) ))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ($regular_condition$ => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X (Lin_$scope_mode$ V ($regular_condition$ -> $post_condition$))))) & ($scope_mode$ -> (Lin_$scope_mode$ V ($regular_condition$ -> $post_condition$))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> $post_condition$))))) & ($scope_mode$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> $post_condition$))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> $post_condition$)))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> $post_condition$)))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> $post_condition$)))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> $post_condition$)))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> $post_condition$)))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y (($regular_condition$ -> $post_condition$) S (($regular_condition$ -> $post_condition$) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (($regular_condition$ -> $post_condition$) S (($regular_condition$ -> $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ($regular_condition$ => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_noTrigger_immediately_satisfaction.svg"
  },
  "in,noTrigger,never,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) V (! $post_condition$))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) V (! $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$)) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$)) & Fin_$scope_mode$))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$)) & ($scope_mode$ & (Z (! $scope_mode$)))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$)) & ($scope_mode$ & (Z (! $scope_mode$)))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ V (! $post_condition$))))))) & ($scope_mode$ -> (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))))) & ($scope_mode$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ V (! $post_condition$)))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ V (! $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ V (! $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$)) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$)) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_noTrigger_never_satisfaction.svg"
  },
  "in,noTrigger,next,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (Lin_$scope_mode$ | LAST))))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (Lin_$scope_mode$ | LAST))))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) | ((X $post_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) | ((X $post_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y (((Y $regular_condition$) -> ($post_condition$ | Fin_$scope_mode$)) S (((Y $regular_condition$) -> ($post_condition$ | Fin_$scope_mode$)) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((Y $regular_condition$) -> ($post_condition$ | Fin_$scope_mode$)) S (((Y $regular_condition$) -> ($post_condition$ | Fin_$scope_mode$)) & Fin_$scope_mode$))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((Y $regular_condition$) -> ($post_condition$ | ($scope_mode$ & (Z (! $scope_mode$))))) S (((Y $regular_condition$) -> ($post_condition$ | ($scope_mode$ & (Z (! $scope_mode$))))) & ($scope_mode$ & (Z (! $scope_mode$)))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (((Y $regular_condition$) -> ($post_condition$ | ($scope_mode$ & (Z (! $scope_mode$))))) S (((Y $regular_condition$) -> ($post_condition$ | ($scope_mode$ & (Z (! $scope_mode$))))) & ($scope_mode$ & (Z (! $scope_mode$)))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((YtoPre($regular_condition$)) => ($post_condition$ or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))) ))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((YtoPre($regular_condition$)) => ($post_condition$ or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))))))) & ($scope_mode$ -> (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))) & ($scope_mode$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$))))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$))))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$))))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y (((Y $regular_condition$) -> ($post_condition$ | Fin_$scope_mode$)) S (((Y $regular_condition$) -> ($post_condition$ | Fin_$scope_mode$)) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((Y $regular_condition$) -> ($post_condition$ | ($scope_mode$ & (Z (! $scope_mode$))))) S (((Y $regular_condition$) -> ($post_condition$ | ($scope_mode$ & (Z (! $scope_mode$))))) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((YtoPre($regular_condition$)) => ($post_condition$ or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_noTrigger_next_satisfaction.svg"
  },
  "in,noTrigger,null,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)))))) & ($scope_mode$ -> ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, ( not $post_condition$) ))))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X (Lin_$scope_mode$ V ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$)))))) & ($scope_mode$ -> (Lin_$scope_mode$ V ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))))) & ($scope_mode$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, ( not $post_condition$) )))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_noTrigger_null_satisfaction.svg"
  },
  "in,noTrigger,until,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (Lin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (Lin_$scope_mode$ | LAST)) | (Lin_$scope_mode$ | LAST)) V $post_condition$))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (Lin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (Lin_$scope_mode$ | LAST)) | (Lin_$scope_mode$ | LAST)) V $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) V $post_condition$))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) V $post_condition$))))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) & Fin_$scope_mode$))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) & ($scope_mode$ & (Z (! $scope_mode$)))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) & ($scope_mode$ & (Z (! $scope_mode$)))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ((SI( $regular_condition$, ( not $stop_condition$) )) => $post_condition$)) ))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ((SI( $regular_condition$, ( not $stop_condition$) )) => $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X (Lin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))))))) & ($scope_mode$ -> (Lin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))))))) & ($scope_mode$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$)))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$)))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$)))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ((SI( $regular_condition$, ( not $stop_condition$) )) => $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_noTrigger_until_satisfaction.svg"
  },
  "in,noTrigger,within,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (Lin_$scope_mode$ | LAST)))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ | LAST) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (Lin_$scope_mode$ | LAST)))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (Fin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (Fin_$scope_mode$ | $post_condition$))) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (Fin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (Fin_$scope_mode$ | $post_condition$))) & Fin_$scope_mode$))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) S (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) & ($scope_mode$ & (Z (! $scope_mode$)))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) S (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) & ($scope_mode$ & (Z (! $scope_mode$)))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,$duration$,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$-1,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) or $post_condition$)))) ))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,$duration$,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$-1,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) or $post_condition$)))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X (Lin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))))))) & ($scope_mode$ -> (Lin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))) & ($scope_mode$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$)))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$)))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$)))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (Fin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (Fin_$scope_mode$ | $post_condition$))) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) S (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,$duration$,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$-1,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) or $post_condition$)))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_noTrigger_within_satisfaction.svg"
  },
  "in,null,after,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((G[<=$duration$] (! $post_condition$)) | ((Lin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (Lin_$scope_mode$ | LAST))))))) & ($scope_mode$ -> (((G[<=$duration$] (! $post_condition$)) | ((Lin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (Lin_$scope_mode$ | LAST))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((G[<=$duration$] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))) & ($scope_mode$ -> (((G[<=$duration$] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y ((((O[<=$duration$] Fin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] Fin_$scope_mode$) -> (! $post_condition$)) & Fin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$+1] Fin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$+1] Fin_$scope_mode$)) & Fin_$scope_mode$)))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((((O[<=$duration$] Fin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] Fin_$scope_mode$) -> (! $post_condition$)) & Fin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$+1] Fin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$+1] Fin_$scope_mode$)) & Fin_$scope_mode$)))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((O[<=$duration$] ($scope_mode$ & (Z (! $scope_mode$)))) -> (! $post_condition$)) S (((O[<=$duration$] ($scope_mode$ & (Z (! $scope_mode$)))) -> (! $post_condition$)) & ($scope_mode$ & (Z (! $scope_mode$))))) & ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (O[<$duration$+1] ($scope_mode$ & (Z (! $scope_mode$))))) S ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (O[<$duration$+1] ($scope_mode$ & (Z (! $scope_mode$))))) & ($scope_mode$ & (Z (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> ((((O[<=$duration$] ($scope_mode$ & (Z (! $scope_mode$)))) -> (! $post_condition$)) S (((O[<=$duration$] ($scope_mode$ & (Z (! $scope_mode$)))) -> (! $post_condition$)) & ($scope_mode$ & (Z (! $scope_mode$))))) & ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (O[<$duration$+1] ($scope_mode$ & (Z (! $scope_mode$))))) S ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (O[<$duration$+1] ($scope_mode$ & (Z (! $scope_mode$))))) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,0,($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))) => ( not $post_condition$)) )) and (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $post_condition$) )) => (OT($duration$,0,($scope_mode$ and (FTP or (YtoPre( not $scope_mode$))))))) )))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,0,($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))) => ( not $post_condition$)) )) and (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $post_condition$) )) => (OT($duration$,0,($scope_mode$ and (FTP or (YtoPre( not $scope_mode$))))))) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))))) & ($scope_mode$ -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))) & ($scope_mode$ -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y ((((O[<=$duration$] Fin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] Fin_$scope_mode$) -> (! $post_condition$)) & Fin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$+1] Fin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$+1] Fin_$scope_mode$)) & Fin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((O[<=$duration$] ($scope_mode$ & (Z (! $scope_mode$)))) -> (! $post_condition$)) S (((O[<=$duration$] ($scope_mode$ & (Z (! $scope_mode$)))) -> (! $post_condition$)) & ($scope_mode$ & (Z (! $scope_mode$))))) & ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (O[<$duration$+1] ($scope_mode$ & (Z (! $scope_mode$))))) S ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (O[<$duration$+1] ($scope_mode$ & (Z (! $scope_mode$))))) & ($scope_mode$ & (Z (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,0,($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))) => ( not $post_condition$)) )) and (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $post_condition$) )) => (OT($duration$,0,($scope_mode$ and (FTP or (YtoPre( not $scope_mode$))))))) ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_after_satisfaction.svg"
  },
  "in,null,always,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "(LAST V ($scope_mode$ -> $post_condition$))",
    "ftExpanded": "(LAST V ($scope_mode$ -> $post_condition$))",
    "pt": "(H ($scope_mode$ -> $post_condition$))",
    "ptExpanded": "(H ($scope_mode$ -> $post_condition$))",
    "CoCoSpecCode": "(H($scope_mode$ => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ($scope_mode$ -> $post_condition$))",
    "ftInfAUExpanded": "(G ($scope_mode$ -> $post_condition$))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V $post_condition$))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V $post_condition$))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V $post_condition$))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y ($post_condition$ S ($post_condition$ & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ($post_condition$ S ($post_condition$ & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), $post_condition$ )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_always_satisfaction.svg"
  },
  "in,null,before,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (! (((! ((! $stop_condition$) & ($post_condition$ | (Lin_$scope_mode$ | LAST)))) & (! (Lin_$scope_mode$ | LAST))) U $stop_condition$))))) & ($scope_mode$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (Lin_$scope_mode$ | LAST)))) & (! (Lin_$scope_mode$ | LAST))) U $stop_condition$))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (! (((! ((! $stop_condition$) & ($post_condition$ | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $stop_condition$))))) & ($scope_mode$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $stop_condition$))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y (($stop_condition$ -> ((! Fin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) S (($stop_condition$ -> ((! Fin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (($stop_condition$ -> ((! Fin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) S (($stop_condition$ -> ((! Fin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) & Fin_$scope_mode$))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (($stop_condition$ -> ((! ($scope_mode$ & (Z (! $scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))))))) S (($stop_condition$ -> ((! ($scope_mode$ & (Z (! $scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))))))) & ($scope_mode$ & (Z (! $scope_mode$)))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (($stop_condition$ -> ((! ($scope_mode$ & (Z (! $scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))))))) S (($stop_condition$ -> ((! ($scope_mode$ & (Z (! $scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))))))) & ($scope_mode$ & (Z (! $scope_mode$)))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ($stop_condition$ => (( not ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$))))) and (YtoPre( not (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $post_condition$) )))))) ))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ($stop_condition$ => (( not ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$))))) and (YtoPre( not (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $post_condition$) )))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))))) & ($scope_mode$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))))) & ($scope_mode$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$)))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$)))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y (($stop_condition$ -> ((! Fin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) S (($stop_condition$ -> ((! Fin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (($stop_condition$ -> ((! ($scope_mode$ & (Z (! $scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))))))) S (($stop_condition$ -> ((! ($scope_mode$ & (Z (! $scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))))))) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ($stop_condition$ => (( not ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$))))) and (YtoPre( not (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $post_condition$) )))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs in the interval, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_before_satisfaction.svg"
  },
  "in,null,eventually,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)))) & ($scope_mode$ -> ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))) & ($scope_mode$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))",
    "pt": "((H (Lin_$scope_mode$ -> (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre( not (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $post_condition$) )))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => ( not (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((! Lin_$scope_mode$) U $post_condition$)))) & ($scope_mode$ -> ((! Lin_$scope_mode$) U $post_condition$)))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))) & ($scope_mode$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((! Lin_$scope_mode$) U $post_condition$))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((! Lin_$scope_mode$) U $post_condition$))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((! Lin_$scope_mode$) U $post_condition$))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((! Lin_$scope_mode$) U $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre( not (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $post_condition$) ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_eventually_satisfaction.svg"
  },
  "in,null,finally,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ | LAST) V ((Lin_$scope_mode$ | LAST) -> $post_condition$))))) & ($scope_mode$ -> ((Lin_$scope_mode$ | LAST) V ((Lin_$scope_mode$ | LAST) -> $post_condition$))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) -> $post_condition$))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) -> $post_condition$))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y $post_condition$))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> $post_condition$))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y $post_condition$))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> $post_condition$))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre($post_condition$)))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$))))) & ($scope_mode$ -> (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$))))) & ($scope_mode$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$)))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$)))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$)))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$)))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$)))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y $post_condition$)))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y $post_condition$)))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre($post_condition$))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, if trigger holds, then RES holds at the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_finally_satisfaction.svg"
  },
  "in,null,for,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((G[<=$duration$] $post_condition$) | ((Lin_$scope_mode$ | LAST) V $post_condition$))))) & ($scope_mode$ -> ((G[<=$duration$] $post_condition$) | ((Lin_$scope_mode$ | LAST) V $post_condition$))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((G[<=$duration$] $post_condition$) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$))))) & ($scope_mode$ -> ((G[<=$duration$] $post_condition$) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y (((O[<=$duration$] Fin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] Fin_$scope_mode$) -> $post_condition$) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((O[<=$duration$] Fin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] Fin_$scope_mode$) -> $post_condition$) & Fin_$scope_mode$))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((O[<=$duration$] ($scope_mode$ & (Z (! $scope_mode$)))) -> $post_condition$) S (((O[<=$duration$] ($scope_mode$ & (Z (! $scope_mode$)))) -> $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$)))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (((O[<=$duration$] ($scope_mode$ & (Z (! $scope_mode$)))) -> $post_condition$) S (((O[<=$duration$] ($scope_mode$ & (Z (! $scope_mode$)))) -> $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$)))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,0,($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))) => $post_condition$) ))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,0,($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))))) & ($scope_mode$ -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))) & ($scope_mode$ -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$)))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$)))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y (((O[<=$duration$] Fin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] Fin_$scope_mode$) -> $post_condition$) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((O[<=$duration$] ($scope_mode$ & (Z (! $scope_mode$)))) -> $post_condition$) S (((O[<=$duration$] ($scope_mode$ & (Z (! $scope_mode$)))) -> $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,0,($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))) => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_for_satisfaction.svg"
  },
  "in,null,immediately,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X $post_condition$))) & ($scope_mode$ -> $post_condition$))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X $post_condition$))) & ($scope_mode$ -> $post_condition$))",
    "pt": "(H (Fin_$scope_mode$ -> $post_condition$))",
    "ptExpanded": "(H (($scope_mode$ & (Z (! $scope_mode$))) -> $post_condition$))",
    "CoCoSpecCode": "(H(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X $post_condition$))) & ($scope_mode$ -> $post_condition$))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X $post_condition$))) & ($scope_mode$ -> $post_condition$))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> $post_condition$)))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> $post_condition$)))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> $post_condition$)))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> $post_condition$)))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> $post_condition$)))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> $post_condition$)))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> $post_condition$)))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> $post_condition$)))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y ((Fin_$scope_mode$ -> $post_condition$) S ((Fin_$scope_mode$ -> $post_condition$) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((($scope_mode$ & (Z (! $scope_mode$))) -> $post_condition$) S ((($scope_mode$ & (Z (! $scope_mode$))) -> $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_immediately_satisfaction.svg"
  },
  "in,null,never,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "(LAST V ($scope_mode$ -> (! $post_condition$)))",
    "ftExpanded": "(LAST V ($scope_mode$ -> (! $post_condition$)))",
    "pt": "(H ($scope_mode$ -> (! $post_condition$)))",
    "ptExpanded": "(H ($scope_mode$ -> (! $post_condition$)))",
    "CoCoSpecCode": "(H($scope_mode$ => ( not $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ($scope_mode$ -> (! $post_condition$)))",
    "ftInfAUExpanded": "(G ($scope_mode$ -> (! $post_condition$)))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V (! $post_condition$)))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V (! $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V (! $post_condition$)))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V (! $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_never_satisfaction.svg"
  },
  "in,null,next,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (Lin_$scope_mode$ | LAST))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (Lin_$scope_mode$ | LAST))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) | ((X $post_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) | ((X $post_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y (((Y Fin_$scope_mode$) -> $post_condition$) S (((Y Fin_$scope_mode$) -> $post_condition$) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((Y Fin_$scope_mode$) -> $post_condition$) S (((Y Fin_$scope_mode$) -> $post_condition$) & Fin_$scope_mode$))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((Y ($scope_mode$ & (Z (! $scope_mode$)))) -> $post_condition$) S (((Y ($scope_mode$ & (Z (! $scope_mode$)))) -> $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$)))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (((Y ($scope_mode$ & (Z (! $scope_mode$)))) -> $post_condition$) S (((Y ($scope_mode$ & (Z (! $scope_mode$)))) -> $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$)))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((YtoPre($scope_mode$ and (FTP or (YtoPre( not $scope_mode$))))) => $post_condition$) ))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((YtoPre($scope_mode$ and (FTP or (YtoPre( not $scope_mode$))))) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))) & ($scope_mode$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y (((Y Fin_$scope_mode$) -> $post_condition$) S (((Y Fin_$scope_mode$) -> $post_condition$) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((Y ($scope_mode$ & (Z (! $scope_mode$)))) -> $post_condition$) S (((Y ($scope_mode$ & (Z (! $scope_mode$)))) -> $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((YtoPre($scope_mode$ and (FTP or (YtoPre( not $scope_mode$))))) => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_next_satisfaction.svg"
  },
  "in,null,null,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)))) & ($scope_mode$ -> ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))) & ($scope_mode$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))",
    "pt": "((H (Lin_$scope_mode$ -> (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre( not (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $post_condition$) )))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => ( not (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((! Lin_$scope_mode$) U $post_condition$)))) & ($scope_mode$ -> ((! Lin_$scope_mode$) U $post_condition$)))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))) & ($scope_mode$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((! Lin_$scope_mode$) U $post_condition$))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((! Lin_$scope_mode$) U $post_condition$))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((! Lin_$scope_mode$) U $post_condition$))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((! Lin_$scope_mode$) U $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre( not (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $post_condition$) ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_null_satisfaction.svg"
  },
  "in,null,until,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((! (((! $stop_condition$) & (! (Lin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (Lin_$scope_mode$ | LAST)) | (Lin_$scope_mode$ | LAST)) V $post_condition$))))) & ($scope_mode$ -> ((! (((! $stop_condition$) & (! (Lin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (Lin_$scope_mode$ | LAST)) | (Lin_$scope_mode$ | LAST)) V $post_condition$))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((! (((! $stop_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) V $post_condition$))))) & ($scope_mode$ -> ((! (((! $stop_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) V $post_condition$))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & Fin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & Fin_$scope_mode$)) -> $post_condition$) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((((! $stop_condition$) S ((! $stop_condition$) & Fin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & Fin_$scope_mode$)) -> $post_condition$) & Fin_$scope_mode$))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) -> $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$)))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> ((((! $stop_condition$) S ((! $stop_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) -> $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$)))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $stop_condition$) )) => $post_condition$) ))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $stop_condition$) )) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))))) & ($scope_mode$ -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))))) & ($scope_mode$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$)))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$)))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$)))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$)))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$)))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & Fin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & Fin_$scope_mode$)) -> $post_condition$) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) -> $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $stop_condition$) )) => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_until_satisfaction.svg"
  },
  "in,null,within,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (Lin_$scope_mode$ | LAST)))))) & ($scope_mode$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (Lin_$scope_mode$ | LAST)))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))))) & ($scope_mode$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$] Fin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$] Fin_$scope_mode$)) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$] Fin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$] Fin_$scope_mode$)) & Fin_$scope_mode$))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (O[<$duration$] ($scope_mode$ & (Z (! $scope_mode$))))) S ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (O[<$duration$] ($scope_mode$ & (Z (! $scope_mode$))))) & ($scope_mode$ & (Z (! $scope_mode$)))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (O[<$duration$] ($scope_mode$ & (Z (! $scope_mode$))))) S ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (O[<$duration$] ($scope_mode$ & (Z (! $scope_mode$))))) & ($scope_mode$ & (Z (! $scope_mode$)))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $post_condition$) )) => (OT($duration$-1,0,($scope_mode$ and (FTP or (YtoPre( not $scope_mode$))))))) ))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $post_condition$) )) => (OT($duration$-1,0,($scope_mode$ and (FTP or (YtoPre( not $scope_mode$))))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))))) & ($scope_mode$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))) & ($scope_mode$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$)))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$)))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$)))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$] Fin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$] Fin_$scope_mode$)) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (O[<$duration$] ($scope_mode$ & (Z (! $scope_mode$))))) S ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (O[<$duration$] ($scope_mode$ & (Z (! $scope_mode$))))) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $post_condition$) )) => (OT($duration$-1,0,($scope_mode$ and (FTP or (YtoPre( not $scope_mode$))))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_within_satisfaction.svg"
  },
  "in,regular,after,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((Lin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (Lin_$scope_mode$ | LAST))))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((Lin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (Lin_$scope_mode$ | LAST))))))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((Lin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (Lin_$scope_mode$ | LAST))))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((Lin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (Lin_$scope_mode$ | LAST))))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$))) & Fin_$scope_mode$)) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (Fin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (Fin_$scope_mode$ | $post_condition$))) & Fin_$scope_mode$)))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$))) & Fin_$scope_mode$)) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (Fin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (Fin_$scope_mode$ | $post_condition$))) & Fin_$scope_mode$)))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$))) & ($scope_mode$ & (Z (! $scope_mode$))))) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$+1] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$+1] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) & ($scope_mode$ & (Z (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$))) & ($scope_mode$ & (Z (! $scope_mode$))))) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$+1] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$+1] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))))) => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$+1,$duration$+1,(($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) or $post_condition$)))) )))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))))) => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$+1,$duration$+1,(($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) or $post_condition$)))) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$))))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$))))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$))))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$))) & Fin_$scope_mode$)) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (Fin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (Fin_$scope_mode$ | $post_condition$))) & Fin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$))) & ($scope_mode$ & (Z (! $scope_mode$))))) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$+1] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$+1] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) & ($scope_mode$ & (Z (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))))) => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$+1,$duration$+1,(($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) or $post_condition$)))) ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_after_satisfaction.svg"
  },
  "in,regular,always,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((Lin_$scope_mode$ | LAST) V $post_condition$)) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) V $post_condition$)))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((Lin_$scope_mode$ | LAST) V $post_condition$)) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) V $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$)))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$)))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$) & Fin_$scope_mode$))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$)))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$)))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$) ))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ V $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V $post_condition$)))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ V $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ V $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V $post_condition$))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ V $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (Lin_$scope_mode$ V $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V $post_condition$))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (Lin_$scope_mode$ V $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_always_satisfaction.svg"
  },
  "in,regular,before,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (Lin_$scope_mode$ | LAST)))) & (! (Lin_$scope_mode$ | LAST))) U $stop_condition$))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (Lin_$scope_mode$ | LAST)))) & (! (Lin_$scope_mode$ | LAST))) U $stop_condition$))))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (Lin_$scope_mode$ | LAST)))) & (! (Lin_$scope_mode$ | LAST))) U $stop_condition$))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (Lin_$scope_mode$ | LAST)))) & (! (Lin_$scope_mode$ | LAST))) U $stop_condition$))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $stop_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $stop_condition$))))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $stop_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $stop_condition$))))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! Fin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! Fin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))))))))) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! Fin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! Fin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))))))))) & Fin_$scope_mode$))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! ($scope_mode$ & (Z (! $scope_mode$)))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! ($scope_mode$ & (Z (! $scope_mode$)))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))))))))) & ($scope_mode$ & (Z (! $scope_mode$)))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! ($scope_mode$ & (Z (! $scope_mode$)))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! ($scope_mode$ & (Z (! $scope_mode$)))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))))))))) & ($scope_mode$ & (Z (! $scope_mode$)))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ($stop_condition$ => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ((( not ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$))))) and ( not ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))))) and (YtoPre( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))), ( not $post_condition$) ))))))) ))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ($stop_condition$ => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ((( not ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$))))) and ( not ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))))) and (YtoPre( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))), ( not $post_condition$) ))))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$)))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$)))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! Fin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! Fin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))))))))) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! ($scope_mode$ & (Z (! $scope_mode$)))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! ($scope_mode$ & (Z (! $scope_mode$)))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))))))))) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ($stop_condition$ => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ((( not ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$))))) and ( not ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))))) and (YtoPre( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))), ( not $post_condition$) ))))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs in the interval, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_before_satisfaction.svg"
  },
  "in,regular,eventually,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))))))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))))))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))), ( not $post_condition$) ))))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))), ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$)))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))))))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))), ( not $post_condition$) )))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_eventually_satisfaction.svg"
  },
  "in,regular,finally,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((Lin_$scope_mode$ | LAST) V ((Lin_$scope_mode$ | LAST) -> $post_condition$))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) V ((Lin_$scope_mode$ | LAST) -> $post_condition$))))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((Lin_$scope_mode$ | LAST) V ((Lin_$scope_mode$ | LAST) -> $post_condition$))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) V ((Lin_$scope_mode$ | LAST) -> $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) -> $post_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) -> $post_condition$))))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) -> $post_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) -> $post_condition$))))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$)))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$)))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$)))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$)))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V (Lin_$scope_mode$ -> $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> $post_condition$)))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, if trigger holds, then RES holds at the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_finally_satisfaction.svg"
  },
  "in,regular,for,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((G[<=$duration$] $post_condition$) | ((Lin_$scope_mode$ | LAST) V $post_condition$))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((Lin_$scope_mode$ | LAST) V $post_condition$))))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((G[<=$duration$] $post_condition$) | ((Lin_$scope_mode$ | LAST) V $post_condition$))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((Lin_$scope_mode$ | LAST) V $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((G[<=$duration$] $post_condition$) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$))))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((G[<=$duration$] $post_condition$) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$))))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)) & Fin_$scope_mode$))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$)) & ($scope_mode$ & (Z (! $scope_mode$)))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$)) & ($scope_mode$ & (Z (! $scope_mode$)))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))))) => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)) ))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))))) => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$)))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | $post_condition$)) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))))) => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_for_satisfaction.svg"
  },
  "in,regular,immediately,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X $post_condition$) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> $post_condition$))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X $post_condition$) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> $post_condition$))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X $post_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> $post_condition$))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X $post_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> $post_condition$))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) -> $post_condition$) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) -> $post_condition$) & Fin_$scope_mode$))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))) -> $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$)))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))) -> $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$)))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), (($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))) => $post_condition$) ))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), (($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X $post_condition$) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X $post_condition$) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> $post_condition$))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> $post_condition$))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X $post_condition$) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$)))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X $post_condition$) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> $post_condition$)))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X $post_condition$) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$)))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X $post_condition$) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> $post_condition$)))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> $post_condition$)))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) -> $post_condition$) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))) -> $post_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), (($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))) => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_immediately_satisfaction.svg"
  },
  "in,regular,never,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((Lin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) V (! $post_condition$))))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((Lin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) V (! $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$)) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$)) & Fin_$scope_mode$))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$)) & ($scope_mode$ & (Z (! $scope_mode$)))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$)) & ($scope_mode$ & (Z (! $scope_mode$)))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ V (! $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V (! $post_condition$))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ V (! $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ V (! $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V (! $post_condition$)))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ V (! $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V (! $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (Lin_$scope_mode$ V (! $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V (! $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (Lin_$scope_mode$ V (! $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$)) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! $post_condition$)) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_never_satisfaction.svg"
  },
  "in,regular,next,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((Lin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (Lin_$scope_mode$ | LAST))))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (Lin_$scope_mode$ | LAST))))))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((Lin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (Lin_$scope_mode$ | LAST))))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (Lin_$scope_mode$ | LAST))))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) | ((X $post_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) | ((X $post_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) | ((X $post_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) | ((X $post_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> ($post_condition$ | Fin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> ($post_condition$ | Fin_$scope_mode$)) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> ($post_condition$ | Fin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> ($post_condition$ | Fin_$scope_mode$)) & Fin_$scope_mode$))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))) -> ($post_condition$ | ($scope_mode$ & (Z (! $scope_mode$))))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))) -> ($post_condition$ | ($scope_mode$ & (Z (! $scope_mode$))))) & ($scope_mode$ & (Z (! $scope_mode$)))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))) -> ($post_condition$ | ($scope_mode$ & (Z (! $scope_mode$))))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))) -> ($post_condition$ | ($scope_mode$ & (Z (! $scope_mode$))))) & ($scope_mode$ & (Z (! $scope_mode$)))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((YtoPre($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$))))))) => ($post_condition$ or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))) ))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((YtoPre($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$))))))) => ($post_condition$ or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$))))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$))))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$))))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> ($post_condition$ | Fin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> ($post_condition$ | Fin_$scope_mode$)) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))) -> ($post_condition$ | ($scope_mode$ & (Z (! $scope_mode$))))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))) -> ($post_condition$ | ($scope_mode$ & (Z (! $scope_mode$))))) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((YtoPre($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$))))))) => ($post_condition$ or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_next_satisfaction.svg"
  },
  "in,regular,null,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))))))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))))))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$)))))))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))), ( not $post_condition$) ))))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))), ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$)))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))))))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))), ( not $post_condition$) )))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_null_satisfaction.svg"
  },
  "in,regular,until,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((! (((! $stop_condition$) & (! (Lin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (Lin_$scope_mode$ | LAST)) | (Lin_$scope_mode$ | LAST)) V $post_condition$))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (Lin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (Lin_$scope_mode$ | LAST)) | (Lin_$scope_mode$ | LAST)) V $post_condition$))))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((! (((! $stop_condition$) & (! (Lin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (Lin_$scope_mode$ | LAST)) | (Lin_$scope_mode$ | LAST)) V $post_condition$))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (Lin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (Lin_$scope_mode$ | LAST)) | (Lin_$scope_mode$ | LAST)) V $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((! (((! $stop_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) V $post_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) V $post_condition$))))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((! (((! $stop_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) V $post_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) V $post_condition$))))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) -> $post_condition$)) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) -> $post_condition$)) & Fin_$scope_mode$))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))))) -> $post_condition$)) & ($scope_mode$ & (Z (! $scope_mode$)))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))))) -> $post_condition$)) & ($scope_mode$ & (Z (! $scope_mode$)))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))), ( not $stop_condition$) )) => $post_condition$)) ))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))), ( not $stop_condition$) )) => $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$)))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$)))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$)))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) -> $post_condition$)) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & (Z (! $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))))) -> $post_condition$)) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))), ( not $stop_condition$) )) => $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_until_satisfaction.svg"
  },
  "in,regular,within,satisfaction": {
    "endpoints": {
      "left": "Fin_$scope_mode$",
      "right": "Lin_$scope_mode$",
      "ptExtleft": "($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$)))",
      "ptExtright": "((not $scope_mode$) and (previous $scope_mode$))",
      "SMVptExtleft": "($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$))))",
      "SMVptExtright": "((!$scope_mode$) & (Y $scope_mode$))",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (Lin_$scope_mode$ | LAST)))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (Lin_$scope_mode$ | LAST)))))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (Lin_$scope_mode$ | LAST)))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (Lin_$scope_mode$ | LAST)))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))))))",
    "pt": "((H (Lin_$scope_mode$ -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (Fin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (Fin_$scope_mode$ | $post_condition$))) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (Fin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (Fin_$scope_mode$ | $post_condition$))) & Fin_$scope_mode$))))",
    "ptExpanded": "((H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) & ($scope_mode$ & (Z (! $scope_mode$)))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & (Z (! $scope_mode$))))) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) & ($scope_mode$ & (Z (! $scope_mode$)))))))",
    "CoCoSpecCode": "((H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,$duration$,(($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$-1,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) or $post_condition$)))) ))))) and ((SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ( not (( not $scope_mode$) and (YtoPre($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,$duration$,(($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$-1,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) or $post_condition$)))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$)))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$)))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$)))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))",
    "ptFinBtw": "(H (Lin_$scope_mode$ -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (Fin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (Fin_$scope_mode$ | $post_condition$))) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (((! $scope_mode$) & (Y $scope_mode$)) -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & (Z (! $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$] (($scope_mode$ & (Z (! $scope_mode$))) | $post_condition$))) & ($scope_mode$ & (Z (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((( not $scope_mode$) and (YtoPre($scope_mode$))) => (YtoPre(SI( ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))), ((OT($duration$,$duration$,(($regular_condition$ and ((YtoPre( not $regular_condition$)) or ($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$-1,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) or $post_condition$)))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_within_satisfaction.svg"
  },
  "notin,noTrigger,after,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (LNin_$scope_mode$ | LAST))))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (LNin_$scope_mode$ | LAST))))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) & FNin_$scope_mode$)) & (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (FNin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (FNin_$scope_mode$ | $post_condition$))) & FNin_$scope_mode$)))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) & FNin_$scope_mode$)) & (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (FNin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (FNin_$scope_mode$ | $post_condition$))) & FNin_$scope_mode$)))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$)))) & (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) S (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$)))) & (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) S (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,$regular_condition$)) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$+1,$duration$+1,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$,0,((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) or $post_condition$)))) )))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,$regular_condition$)) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$+1,$duration$+1,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$,0,((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) or $post_condition$)))) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$))))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$))))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$))))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) & FNin_$scope_mode$)) & (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (FNin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (FNin_$scope_mode$ | $post_condition$))) & FNin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$)))) & (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) S (((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,$regular_condition$)) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$+1,$duration$+1,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$,0,((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) or $post_condition$)))) ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_noTrigger_after_satisfaction.svg"
  },
  "notin,noTrigger,always,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V $post_condition$)))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$)))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$)))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V $post_condition$)))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V $post_condition$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_noTrigger_always_satisfaction.svg"
  },
  "notin,noTrigger,before,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($stop_condition$ => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((( not (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) and ( not $regular_condition$)) and (YtoPre( not (SI( $regular_condition$, ( not $post_condition$) ))))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($stop_condition$ => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((( not (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) and ( not $regular_condition$)) and (YtoPre( not (SI( $regular_condition$, ( not $post_condition$) ))))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($stop_condition$ => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((( not (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) and ( not $regular_condition$)) and (YtoPre( not (SI( $regular_condition$, ( not $post_condition$) ))))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs in the interval, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_noTrigger_before_satisfaction.svg"
  },
  "notin,noTrigger,eventually,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, ( not $post_condition$) ))))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$)))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, ( not $post_condition$) )))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_noTrigger_eventually_satisfaction.svg"
  },
  "notin,noTrigger,finally,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V ((LNin_$scope_mode$ | LAST) -> $post_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V ((LNin_$scope_mode$ | LAST) -> $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) -> $post_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) -> $post_condition$))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$)))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$)))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$))))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$)))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, if trigger holds, then RES holds at the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_noTrigger_finally_satisfaction.svg"
  },
  "notin,noTrigger,for,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((LNin_$scope_mode$ | LAST) V $post_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((LNin_$scope_mode$ | LAST) V $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$)) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$)) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,$regular_condition$)) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,$regular_condition$)) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$)) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,$regular_condition$)) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_noTrigger_for_satisfaction.svg"
  },
  "notin,noTrigger,immediately,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> $post_condition$))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> $post_condition$))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> $post_condition$))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> $post_condition$))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (($regular_condition$ -> $post_condition$) S (($regular_condition$ -> $post_condition$) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (($regular_condition$ -> $post_condition$) S (($regular_condition$ -> $post_condition$) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (($regular_condition$ -> $post_condition$) S (($regular_condition$ -> $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (($regular_condition$ -> $post_condition$) S (($regular_condition$ -> $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($regular_condition$ => $post_condition$) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($regular_condition$ => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> $post_condition$))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> $post_condition$))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> $post_condition$))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> $post_condition$))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> $post_condition$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> $post_condition$)))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> $post_condition$)))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (($regular_condition$ -> $post_condition$) S (($regular_condition$ -> $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (($regular_condition$ -> $post_condition$) S (($regular_condition$ -> $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($regular_condition$ => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_noTrigger_immediately_satisfaction.svg"
  },
  "notin,noTrigger,never,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$))))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_noTrigger_never_satisfaction.svg"
  },
  "notin,noTrigger,next,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (LNin_$scope_mode$ | LAST))))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (LNin_$scope_mode$ | LAST))))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((Y $regular_condition$) -> ($post_condition$ | FNin_$scope_mode$)) S (((Y $regular_condition$) -> ($post_condition$ | FNin_$scope_mode$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((Y $regular_condition$) -> ($post_condition$ | FNin_$scope_mode$)) S (((Y $regular_condition$) -> ($post_condition$ | FNin_$scope_mode$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((Y $regular_condition$) -> ($post_condition$ | ((! $scope_mode$) & (Z $scope_mode$)))) S (((Y $regular_condition$) -> ($post_condition$ | ((! $scope_mode$) & (Z $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((Y $regular_condition$) -> ($post_condition$ | ((! $scope_mode$) & (Z $scope_mode$)))) S (((Y $regular_condition$) -> ($post_condition$ | ((! $scope_mode$) & (Z $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((YtoPre($regular_condition$)) => ($post_condition$ or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((YtoPre($regular_condition$)) => ($post_condition$ or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$))))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$))))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$))))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((Y $regular_condition$) -> ($post_condition$ | FNin_$scope_mode$)) S (((Y $regular_condition$) -> ($post_condition$ | FNin_$scope_mode$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((Y $regular_condition$) -> ($post_condition$ | ((! $scope_mode$) & (Z $scope_mode$)))) S (((Y $regular_condition$) -> ($post_condition$ | ((! $scope_mode$) & (Z $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((YtoPre($regular_condition$)) => ($post_condition$ or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_noTrigger_next_satisfaction.svg"
  },
  "notin,noTrigger,null,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, ( not $post_condition$) ))))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$)))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, ( not $post_condition$) )))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_noTrigger_null_satisfaction.svg"
  },
  "notin,noTrigger,until,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (LNin_$scope_mode$ | LAST)) | (LNin_$scope_mode$ | LAST)) V $post_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (LNin_$scope_mode$ | LAST)) | (LNin_$scope_mode$ | LAST)) V $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) V $post_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) V $post_condition$))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((SI( $regular_condition$, ( not $stop_condition$) )) => $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((SI( $regular_condition$, ( not $stop_condition$) )) => $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((SI( $regular_condition$, ( not $stop_condition$) )) => $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_noTrigger_until_satisfaction.svg"
  },
  "notin,noTrigger,within,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (FNin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (FNin_$scope_mode$ | $post_condition$))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (FNin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (FNin_$scope_mode$ | $post_condition$))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) S (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) S (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,$duration$,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$-1,0,((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) or $post_condition$)))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,$duration$,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$-1,0,((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) or $post_condition$)))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (FNin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (FNin_$scope_mode$ | $post_condition$))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) S (((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,$duration$,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$-1,0,((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) or $post_condition$)))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_noTrigger_within_satisfaction.svg"
  },
  "notin,null,after,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (LNin_$scope_mode$ | LAST))))))) & ((! $scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (LNin_$scope_mode$ | LAST))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))) & ((! $scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$+1] FNin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$+1] FNin_$scope_mode$)) & FNin_$scope_mode$)))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$+1] FNin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$+1] FNin_$scope_mode$)) & FNin_$scope_mode$)))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) -> (! $post_condition$)) S (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) -> (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$)))) & ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (O[<$duration$+1] ((! $scope_mode$) & (Z $scope_mode$)))) S ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (O[<$duration$+1] ((! $scope_mode$) & (Z $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) -> (! $post_condition$)) S (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) -> (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$)))) & ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (O[<$duration$+1] ((! $scope_mode$) & (Z $scope_mode$)))) S ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (O[<$duration$+1] ((! $scope_mode$) & (Z $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) => ( not $post_condition$)) )) and (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) )) => (OT($duration$,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))))) )))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) => ( not $post_condition$)) )) and (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) )) => (OT($duration$,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))))) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))))) & ((! $scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) & ((! $scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$+1] FNin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$+1] FNin_$scope_mode$)) & FNin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) -> (! $post_condition$)) S (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) -> (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$)))) & ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (O[<$duration$+1] ((! $scope_mode$) & (Z $scope_mode$)))) S ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (O[<$duration$+1] ((! $scope_mode$) & (Z $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) => ( not $post_condition$)) )) and (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) )) => (OT($duration$,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))))) ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_after_satisfaction.svg"
  },
  "notin,null,always,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(LAST V ((! $scope_mode$) -> $post_condition$))",
    "ftExpanded": "(LAST V ((! $scope_mode$) -> $post_condition$))",
    "pt": "(H ((! $scope_mode$) -> $post_condition$))",
    "ptExpanded": "(H ((! $scope_mode$) -> $post_condition$))",
    "CoCoSpecCode": "(H(( not $scope_mode$) => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ((! $scope_mode$) -> $post_condition$))",
    "ftInfAUExpanded": "(G ((! $scope_mode$) -> $post_condition$))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V $post_condition$))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V $post_condition$))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V $post_condition$))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), $post_condition$ )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_always_satisfaction.svg"
  },
  "notin,null,before,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (! (((! ((! $stop_condition$) & ($post_condition$ | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))))) & ((! $scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (! (((! ((! $stop_condition$) & ($post_condition$ | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))))) & ((! $scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) S (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) S (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (($stop_condition$ -> ((! ((! $scope_mode$) & (Z $scope_mode$))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))) S (($stop_condition$ -> ((! ((! $scope_mode$) & (Z $scope_mode$))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (($stop_condition$ -> ((! ((! $scope_mode$) & (Z $scope_mode$))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))) S (($stop_condition$ -> ((! ((! $scope_mode$) & (Z $scope_mode$))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($stop_condition$ => (( not (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) and (YtoPre( not (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) )))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($stop_condition$ => (( not (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) and (YtoPre( not (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) )))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))))) & ((! $scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))) & ((! $scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) S (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (($stop_condition$ -> ((! ((! $scope_mode$) & (Z $scope_mode$))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))) S (($stop_condition$ -> ((! ((! $scope_mode$) & (Z $scope_mode$))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($stop_condition$ => (( not (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) and (YtoPre( not (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) )))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs in the interval, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_before_satisfaction.svg"
  },
  "notin,null,eventually,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))) & ((! $scope_mode$) -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))) & ((! $scope_mode$) -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre( not (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) )))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => ( not (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((! LNin_$scope_mode$) U $post_condition$)))) & ((! $scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$)))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))) & ((! $scope_mode$) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre( not (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_eventually_satisfaction.svg"
  },
  "notin,null,finally,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ((LNin_$scope_mode$ | LAST) -> $post_condition$))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ((LNin_$scope_mode$ | LAST) -> $post_condition$))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) -> $post_condition$))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) -> $post_condition$))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y $post_condition$))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> $post_condition$))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y $post_condition$))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> $post_condition$))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre($post_condition$)))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$)))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$)))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y $post_condition$)))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y $post_condition$)))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre($post_condition$))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, if trigger holds, then RES holds at the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_finally_satisfaction.svg"
  },
  "notin,null,for,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((G[<=$duration$] $post_condition$) | ((LNin_$scope_mode$ | LAST) V $post_condition$))))) & ((! $scope_mode$) -> ((G[<=$duration$] $post_condition$) | ((LNin_$scope_mode$ | LAST) V $post_condition$))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((G[<=$duration$] $post_condition$) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$))))) & ((! $scope_mode$) -> ((G[<=$duration$] $post_condition$) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((O[<=$duration$] FNin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] FNin_$scope_mode$) -> $post_condition$) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[<=$duration$] FNin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] FNin_$scope_mode$) -> $post_condition$) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) -> $post_condition$) S (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) -> $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) -> $post_condition$) S (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) -> $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) => $post_condition$) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))))) & ((! $scope_mode$) -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))) & ((! $scope_mode$) -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((O[<=$duration$] FNin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] FNin_$scope_mode$) -> $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) -> $post_condition$) S (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) -> $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_for_satisfaction.svg"
  },
  "notin,null,immediately,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X $post_condition$))) & ((! $scope_mode$) -> $post_condition$))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X $post_condition$))) & ((! $scope_mode$) -> $post_condition$))",
    "pt": "(H (FNin_$scope_mode$ -> $post_condition$))",
    "ptExpanded": "(H (((! $scope_mode$) & (Z $scope_mode$)) -> $post_condition$))",
    "CoCoSpecCode": "(H((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X $post_condition$))) & ((! $scope_mode$) -> $post_condition$))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X $post_condition$))) & ((! $scope_mode$) -> $post_condition$))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> $post_condition$)))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> $post_condition$)))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> $post_condition$)))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> $post_condition$)))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> $post_condition$)))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> $post_condition$)))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> $post_condition$)))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> $post_condition$)))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((FNin_$scope_mode$ -> $post_condition$) S ((FNin_$scope_mode$ -> $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $scope_mode$) & (Z $scope_mode$)) -> $post_condition$) S ((((! $scope_mode$) & (Z $scope_mode$)) -> $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_immediately_satisfaction.svg"
  },
  "notin,null,never,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(LAST V ($post_condition$ -> $scope_mode$))",
    "ftExpanded": "(LAST V ($post_condition$ -> $scope_mode$))",
    "pt": "(H ($post_condition$ -> $scope_mode$))",
    "ptExpanded": "(H ($post_condition$ -> $scope_mode$))",
    "CoCoSpecCode": "(H($post_condition$ => $scope_mode$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ($post_condition$ -> $scope_mode$))",
    "ftInfAUExpanded": "(G ($post_condition$ -> $scope_mode$))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_never_satisfaction.svg"
  },
  "notin,null,next,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (LNin_$scope_mode$ | LAST))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (LNin_$scope_mode$ | LAST))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((Y FNin_$scope_mode$) -> $post_condition$) S (((Y FNin_$scope_mode$) -> $post_condition$) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((Y FNin_$scope_mode$) -> $post_condition$) S (((Y FNin_$scope_mode$) -> $post_condition$) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((Y ((! $scope_mode$) & (Z $scope_mode$))) -> $post_condition$) S (((Y ((! $scope_mode$) & (Z $scope_mode$))) -> $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((Y ((! $scope_mode$) & (Z $scope_mode$))) -> $post_condition$) S (((Y ((! $scope_mode$) & (Z $scope_mode$))) -> $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((YtoPre(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) => $post_condition$) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((YtoPre(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((Y FNin_$scope_mode$) -> $post_condition$) S (((Y FNin_$scope_mode$) -> $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((Y ((! $scope_mode$) & (Z $scope_mode$))) -> $post_condition$) S (((Y ((! $scope_mode$) & (Z $scope_mode$))) -> $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((YtoPre(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_next_satisfaction.svg"
  },
  "notin,null,null,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))) & ((! $scope_mode$) -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))) & ((! $scope_mode$) -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre( not (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) )))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => ( not (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((! LNin_$scope_mode$) U $post_condition$)))) & ((! $scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$)))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))) & ((! $scope_mode$) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre( not (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_null_satisfaction.svg"
  },
  "notin,null,until,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (LNin_$scope_mode$ | LAST)) | (LNin_$scope_mode$ | LAST)) V $post_condition$))))) & ((! $scope_mode$) -> ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (LNin_$scope_mode$ | LAST)) | (LNin_$scope_mode$ | LAST)) V $post_condition$))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) V $post_condition$))))) & ((! $scope_mode$) -> ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) V $post_condition$))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> $post_condition$) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> $post_condition$) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $stop_condition$) )) => $post_condition$) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $stop_condition$) )) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))))) & ((! $scope_mode$) -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))))) & ((! $scope_mode$) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $stop_condition$) )) => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_until_satisfaction.svg"
  },
  "notin,null,within,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))))) & ((! $scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))) & ((! $scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (O[<$duration$] ((! $scope_mode$) & (Z $scope_mode$)))) S ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (O[<$duration$] ((! $scope_mode$) & (Z $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (O[<$duration$] ((! $scope_mode$) & (Z $scope_mode$)))) S ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (O[<$duration$] ((! $scope_mode$) & (Z $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) )) => (OT($duration$-1,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) )) => (OT($duration$-1,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))))) & ((! $scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))) & ((! $scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (O[<$duration$] ((! $scope_mode$) & (Z $scope_mode$)))) S ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (O[<$duration$] ((! $scope_mode$) & (Z $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) )) => (OT($duration$-1,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_within_satisfaction.svg"
  },
  "notin,regular,after,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (LNin_$scope_mode$ | LAST))))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (LNin_$scope_mode$ | LAST))))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (LNin_$scope_mode$ | LAST))))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (LNin_$scope_mode$ | LAST))))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) & FNin_$scope_mode$)) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (FNin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (FNin_$scope_mode$ | $post_condition$))) & FNin_$scope_mode$)))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) & FNin_$scope_mode$)) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (FNin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (FNin_$scope_mode$ | $post_condition$))) & FNin_$scope_mode$)))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$)))) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) & (! $post_condition$))) -> (O[<$duration$+1] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) & (! $post_condition$))) -> (O[<$duration$+1] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$)))) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) & (! $post_condition$))) -> (O[<$duration$+1] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) & (! $post_condition$))) -> (O[<$duration$+1] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))))) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$+1,$duration$+1,(($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$,0,((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) or $post_condition$)))) )))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))))) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$+1,$duration$+1,(($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$,0,((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) or $post_condition$)))) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$))))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$))))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$))))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) & FNin_$scope_mode$)) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (FNin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (FNin_$scope_mode$ | $post_condition$))) & FNin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$)))) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) & (! $post_condition$))) -> (O[<$duration$+1] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) & (! $post_condition$))) -> (O[<$duration$+1] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))))) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$+1,$duration$+1,(($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$,0,((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) or $post_condition$)))) ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_after_satisfaction.svg"
  },
  "notin,regular,always,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) V $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V $post_condition$)))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) V $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$)))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$)))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V $post_condition$)))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V $post_condition$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ V $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ V $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_always_satisfaction.svg"
  },
  "notin,regular,before,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))))))))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))))))))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($stop_condition$ => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((( not (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) and ( not ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))))) and (YtoPre( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), ( not $post_condition$) ))))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($stop_condition$ => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((( not (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) and ( not ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))))) and (YtoPre( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), ( not $post_condition$) ))))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))))))))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($stop_condition$ => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((( not (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) and ( not ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))))) and (YtoPre( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), ( not $post_condition$) ))))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs in the interval, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_before_satisfaction.svg"
  },
  "notin,regular,eventually,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), ( not $post_condition$) ))))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$)))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))))))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), ( not $post_condition$) )))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_eventually_satisfaction.svg"
  },
  "notin,regular,finally,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) V ((LNin_$scope_mode$ | LAST) -> $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V ((LNin_$scope_mode$ | LAST) -> $post_condition$))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) V ((LNin_$scope_mode$ | LAST) -> $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V ((LNin_$scope_mode$ | LAST) -> $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) -> $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) -> $post_condition$))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) -> $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) -> $post_condition$))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$)))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$)))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> $post_condition$)))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, if trigger holds, then RES holds at the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_finally_satisfaction.svg"
  },
  "notin,regular,for,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((G[<=$duration$] $post_condition$) | ((LNin_$scope_mode$ | LAST) V $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((LNin_$scope_mode$ | LAST) V $post_condition$))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((G[<=$duration$] $post_condition$) | ((LNin_$scope_mode$ | LAST) V $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((LNin_$scope_mode$ | LAST) V $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((G[<=$duration$] $post_condition$) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((G[<=$duration$] $post_condition$) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))))) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))))) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))))) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_for_satisfaction.svg"
  },
  "notin,regular,immediately,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X $post_condition$) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> $post_condition$))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X $post_condition$) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> $post_condition$))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> $post_condition$))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> $post_condition$))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> $post_condition$) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> $post_condition$) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) -> $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) -> $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), (($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) => $post_condition$) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), (($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X $post_condition$) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X $post_condition$) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> $post_condition$))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> $post_condition$))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X $post_condition$) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X $post_condition$) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> $post_condition$)))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X $post_condition$) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X $post_condition$) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> $post_condition$)))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) -> $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), (($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_immediately_satisfaction.svg"
  },
  "notin,regular,never,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_never_satisfaction.svg"
  },
  "notin,regular,next,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (LNin_$scope_mode$ | LAST))))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (LNin_$scope_mode$ | LAST))))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (LNin_$scope_mode$ | LAST))))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (LNin_$scope_mode$ | LAST))))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ($post_condition$ | FNin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ($post_condition$ | FNin_$scope_mode$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ($post_condition$ | FNin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ($post_condition$ | FNin_$scope_mode$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> ($post_condition$ | ((! $scope_mode$) & (Z $scope_mode$)))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> ($post_condition$ | ((! $scope_mode$) & (Z $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> ($post_condition$ | ((! $scope_mode$) & (Z $scope_mode$)))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> ($post_condition$ | ((! $scope_mode$) & (Z $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((YtoPre($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))))) => ($post_condition$ or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((YtoPre($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))))) => ($post_condition$ or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$))))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$))))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$))))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ($post_condition$ | FNin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ($post_condition$ | FNin_$scope_mode$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> ($post_condition$ | ((! $scope_mode$) & (Z $scope_mode$)))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> ($post_condition$ | ((! $scope_mode$) & (Z $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((YtoPre($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))))) => ($post_condition$ or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_next_satisfaction.svg"
  },
  "notin,regular,null,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), ( not $post_condition$) ))))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$)))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))))))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), ( not $post_condition$) )))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_null_satisfaction.svg"
  },
  "notin,regular,until,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (LNin_$scope_mode$ | LAST)) | (LNin_$scope_mode$ | LAST)) V $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (LNin_$scope_mode$ | LAST)) | (LNin_$scope_mode$ | LAST)) V $post_condition$))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (LNin_$scope_mode$ | LAST)) | (LNin_$scope_mode$ | LAST)) V $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (LNin_$scope_mode$ | LAST)) | (LNin_$scope_mode$ | LAST)) V $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) V $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) V $post_condition$))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) V $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) V $post_condition$))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) -> $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) -> $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), ( not $stop_condition$) )) => $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), ( not $stop_condition$) )) => $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) -> $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), ( not $stop_condition$) )) => $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_until_satisfaction.svg"
  },
  "notin,regular,within,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (FNin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (FNin_$scope_mode$ | $post_condition$))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (FNin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (FNin_$scope_mode$ | $post_condition$))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) & (! $post_condition$))) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) & (! $post_condition$))) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) & (! $post_condition$))) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) & (! $post_condition$))) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,$duration$,(($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$-1,0,((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) or $post_condition$)))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,$duration$,(($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$-1,0,((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) or $post_condition$)))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (FNin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (FNin_$scope_mode$ | $post_condition$))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) & (! $post_condition$))) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) & (! $post_condition$))) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,$duration$,(($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$-1,0,((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) or $post_condition$)))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_within_satisfaction.svg"
  },
  "null,noTrigger,after,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "(LAST V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))",
    "ftExpanded": "(LAST V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))",
    "pt": "((H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] ((Z FALSE) | $post_condition$)))))",
    "ptExpanded": "((H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] ((Z FALSE) | $post_condition$)))))",
    "CoCoSpecCode": "((H((OT($duration$,0,$regular_condition$)) => ((H( not $regular_condition$)) or ( not $post_condition$)))) and (H((OT($duration$+1,$duration$+1,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$,0,((ZtoPre( false )) or $post_condition$))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))",
    "ftInfAUExpanded": "(G ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))",
    "ftInfBtw": "(G ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))",
    "ftInfBtwExpanded": "(G ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))",
    "ftFinBtw": "(LAST V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))",
    "ftFinBtwExpanded": "(LAST V ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))",
    "ptFinBtw": "((H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] ((Z FALSE) | $post_condition$)))))",
    "ptFinBtwExpanded": "((H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$+1] ((Z FALSE) | $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "((H((OT($duration$,0,$regular_condition$)) => ((H( not $regular_condition$)) or ( not $post_condition$)))) and (H((OT($duration$+1,$duration$+1,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$,0,((ZtoPre( false )) or $post_condition$))))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_noTrigger_after_satisfaction.svg"
  },
  "null,noTrigger,always,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "(LAST V ($regular_condition$ -> (LAST V $post_condition$)))",
    "ftExpanded": "(LAST V ($regular_condition$ -> (LAST V $post_condition$)))",
    "pt": "(H ((H (! $regular_condition$)) | $post_condition$))",
    "ptExpanded": "(H ((H (! $regular_condition$)) | $post_condition$))",
    "CoCoSpecCode": "(H((H( not $regular_condition$)) or $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ($regular_condition$ -> (G $post_condition$)))",
    "ftInfAUExpanded": "(G ($regular_condition$ -> (G $post_condition$)))",
    "ftInfBtw": "(G ($regular_condition$ -> (G $post_condition$)))",
    "ftInfBtwExpanded": "(G ($regular_condition$ -> (G $post_condition$)))",
    "ftFinBtw": "(LAST V ($regular_condition$ -> (LAST V $post_condition$)))",
    "ftFinBtwExpanded": "(LAST V ($regular_condition$ -> (LAST V $post_condition$)))",
    "ptFinBtw": "(H ((H (! $regular_condition$)) | $post_condition$))",
    "ptFinBtwExpanded": "(H ((H (! $regular_condition$)) | $post_condition$))",
    "CoCoSpecCodeFinBtw": "(H((H( not $regular_condition$)) or $post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_noTrigger_always_satisfaction.svg"
  },
  "null,noTrigger,before,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "(LAST V ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))",
    "ftExpanded": "(LAST V ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))",
    "pt": "(H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))))",
    "ptExpanded": "(H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))))",
    "CoCoSpecCode": "(H($stop_condition$ => ((H( not $regular_condition$)) or (((YtoPre( true )) and ( not $regular_condition$)) and (YtoPre( not (SI( $regular_condition$, ( not $post_condition$) ))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))",
    "ftInfAUExpanded": "(G ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))",
    "ftInfBtw": "(G ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))",
    "ftInfBtwExpanded": "(G ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))",
    "ftFinBtw": "(LAST V ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))",
    "ftFinBtwExpanded": "(LAST V ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))",
    "ptFinBtw": "(H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))))",
    "ptFinBtwExpanded": "(H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! $regular_condition$)) & (Y (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))))",
    "CoCoSpecCodeFinBtw": "(H($stop_condition$ => ((H( not $regular_condition$)) or (((YtoPre( true )) and ( not $regular_condition$)) and (YtoPre( not (SI( $regular_condition$, ( not $post_condition$) ))))))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs in the interval, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_noTrigger_before_satisfaction.svg"
  },
  "null,noTrigger,eventually,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "(LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "ftExpanded": "(LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "pt": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))",
    "ptExpanded": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))",
    "CoCoSpecCode": "((H( not $regular_condition$)) or ( not (SI( $regular_condition$, ( not $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ($regular_condition$ -> (F $post_condition$)))",
    "ftInfAUExpanded": "(G ($regular_condition$ -> (F $post_condition$)))",
    "ftInfBtw": "(G ($regular_condition$ -> (F $post_condition$)))",
    "ftInfBtwExpanded": "(G ($regular_condition$ -> (F $post_condition$)))",
    "ftFinBtw": "(LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "ftFinBtwExpanded": "(LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "ptFinBtw": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))",
    "ptFinBtwExpanded": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))",
    "CoCoSpecCodeFinBtw": "((H( not $regular_condition$)) or ( not (SI( $regular_condition$, ( not $post_condition$) ))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_noTrigger_eventually_satisfaction.svg"
  },
  "null,noTrigger,finally,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "(LAST V ($regular_condition$ -> (LAST V (LAST -> $post_condition$))))",
    "ftExpanded": "(LAST V ($regular_condition$ -> (LAST V (LAST -> $post_condition$))))",
    "pt": "((H (! $regular_condition$)) | $post_condition$)",
    "ptExpanded": "((H (! $regular_condition$)) | $post_condition$)",
    "CoCoSpecCode": "((H( not $regular_condition$)) or $post_condition$)",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ($regular_condition$ -> TRUE))",
    "ftInfAUExpanded": "(G ($regular_condition$ -> TRUE))",
    "ftInfBtw": "(G ($regular_condition$ -> TRUE))",
    "ftInfBtwExpanded": "(G ($regular_condition$ -> TRUE))",
    "ftFinBtw": "(LAST V ($regular_condition$ -> (LAST V (LAST -> $post_condition$))))",
    "ftFinBtwExpanded": "(LAST V ($regular_condition$ -> (LAST V (LAST -> $post_condition$))))",
    "ptFinBtw": "((H (! $regular_condition$)) | $post_condition$)",
    "ptFinBtwExpanded": "((H (! $regular_condition$)) | $post_condition$)",
    "CoCoSpecCodeFinBtw": "((H( not $regular_condition$)) or $post_condition$)",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, if trigger holds, then RES holds at the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_noTrigger_finally_satisfaction.svg"
  },
  "null,noTrigger,for,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "(LAST V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))",
    "ftExpanded": "(LAST V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))",
    "pt": "(H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | $post_condition$)))",
    "ptExpanded": "(H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | $post_condition$)))",
    "CoCoSpecCode": "(H((OT($duration$,0,$regular_condition$)) => ((H( not $regular_condition$)) or $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))",
    "ftInfAUExpanded": "(G ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))",
    "ftInfBtw": "(G ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))",
    "ftInfBtwExpanded": "(G ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))",
    "ftFinBtw": "(LAST V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))",
    "ftFinBtwExpanded": "(LAST V ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))",
    "ptFinBtw": "(H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | $post_condition$)))",
    "ptFinBtwExpanded": "(H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | $post_condition$)))",
    "CoCoSpecCodeFinBtw": "(H((OT($duration$,0,$regular_condition$)) => ((H( not $regular_condition$)) or $post_condition$)))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_noTrigger_for_satisfaction.svg"
  },
  "null,noTrigger,immediately,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "(LAST V ($regular_condition$ -> $post_condition$))",
    "ftExpanded": "(LAST V ($regular_condition$ -> $post_condition$))",
    "pt": "(H ($regular_condition$ -> $post_condition$))",
    "ptExpanded": "(H ($regular_condition$ -> $post_condition$))",
    "CoCoSpecCode": "(H($regular_condition$ => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ($regular_condition$ -> $post_condition$))",
    "ftInfAUExpanded": "(G ($regular_condition$ -> $post_condition$))",
    "ftInfBtw": "(G ($regular_condition$ -> $post_condition$))",
    "ftInfBtwExpanded": "(G ($regular_condition$ -> $post_condition$))",
    "ftFinBtw": "(LAST V ($regular_condition$ -> $post_condition$))",
    "ftFinBtwExpanded": "(LAST V ($regular_condition$ -> $post_condition$))",
    "ptFinBtw": "(H ($regular_condition$ -> $post_condition$))",
    "ptFinBtwExpanded": "(H ($regular_condition$ -> $post_condition$))",
    "CoCoSpecCodeFinBtw": "(H($regular_condition$ => $post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_noTrigger_immediately_satisfaction.svg"
  },
  "null,noTrigger,never,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "(LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))",
    "ftExpanded": "(LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))",
    "pt": "(H ((H (! $regular_condition$)) | (! $post_condition$)))",
    "ptExpanded": "(H ((H (! $regular_condition$)) | (! $post_condition$)))",
    "CoCoSpecCode": "(H((H( not $regular_condition$)) or ( not $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ($regular_condition$ -> (G (! $post_condition$))))",
    "ftInfAUExpanded": "(G ($regular_condition$ -> (G (! $post_condition$))))",
    "ftInfBtw": "(G ($regular_condition$ -> (G (! $post_condition$))))",
    "ftInfBtwExpanded": "(G ($regular_condition$ -> (G (! $post_condition$))))",
    "ftFinBtw": "(LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))",
    "ftFinBtwExpanded": "(LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))",
    "ptFinBtw": "(H ((H (! $regular_condition$)) | (! $post_condition$)))",
    "ptFinBtwExpanded": "(H ((H (! $regular_condition$)) | (! $post_condition$)))",
    "CoCoSpecCodeFinBtw": "(H((H( not $regular_condition$)) or ( not $post_condition$)))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_noTrigger_never_satisfaction.svg"
  },
  "null,noTrigger,next,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "(LAST V ($regular_condition$ -> (LAST | (X $post_condition$))))",
    "ftExpanded": "(LAST V ($regular_condition$ -> (LAST | (X $post_condition$))))",
    "pt": "(H ((Y $regular_condition$) -> ($post_condition$ | (Z FALSE))))",
    "ptExpanded": "(H ((Y $regular_condition$) -> ($post_condition$ | (Z FALSE))))",
    "CoCoSpecCode": "(H((YtoPre($regular_condition$)) => ($post_condition$ or (ZtoPre( false )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ($regular_condition$ -> (X $post_condition$)))",
    "ftInfAUExpanded": "(G ($regular_condition$ -> (X $post_condition$)))",
    "ftInfBtw": "(G ($regular_condition$ -> (X $post_condition$)))",
    "ftInfBtwExpanded": "(G ($regular_condition$ -> (X $post_condition$)))",
    "ftFinBtw": "(LAST V ($regular_condition$ -> (LAST | (X $post_condition$))))",
    "ftFinBtwExpanded": "(LAST V ($regular_condition$ -> (LAST | (X $post_condition$))))",
    "ptFinBtw": "(H ((Y $regular_condition$) -> ($post_condition$ | (Z FALSE))))",
    "ptFinBtwExpanded": "(H ((Y $regular_condition$) -> ($post_condition$ | (Z FALSE))))",
    "CoCoSpecCodeFinBtw": "(H((YtoPre($regular_condition$)) => ($post_condition$ or (ZtoPre( false )))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_noTrigger_next_satisfaction.svg"
  },
  "null,noTrigger,null,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "(LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "ftExpanded": "(LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "pt": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))",
    "ptExpanded": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))",
    "CoCoSpecCode": "((H( not $regular_condition$)) or ( not (SI( $regular_condition$, ( not $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ($regular_condition$ -> (F $post_condition$)))",
    "ftInfAUExpanded": "(G ($regular_condition$ -> (F $post_condition$)))",
    "ftInfBtw": "(G ($regular_condition$ -> (F $post_condition$)))",
    "ftInfBtwExpanded": "(G ($regular_condition$ -> (F $post_condition$)))",
    "ftFinBtw": "(LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "ftFinBtwExpanded": "(LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "ptFinBtw": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))",
    "ptFinBtwExpanded": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))",
    "CoCoSpecCodeFinBtw": "((H( not $regular_condition$)) or ( not (SI( $regular_condition$, ( not $post_condition$) ))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_noTrigger_null_satisfaction.svg"
  },
  "null,noTrigger,until,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "(LAST V ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))",
    "ftExpanded": "(LAST V ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))",
    "pt": "(H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)))",
    "ptExpanded": "(H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)))",
    "CoCoSpecCode": "(H((H( not $regular_condition$)) or ((SI( $regular_condition$, ( not $stop_condition$) )) => $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ($regular_condition$ -> ($stop_condition$ V ($post_condition$ | $stop_condition$))))",
    "ftInfAUExpanded": "(G ($regular_condition$ -> ($stop_condition$ V ($post_condition$ | $stop_condition$))))",
    "ftInfBtw": "(G ($regular_condition$ -> ($stop_condition$ V ($post_condition$ | $stop_condition$))))",
    "ftInfBtwExpanded": "(G ($regular_condition$ -> ($stop_condition$ V ($post_condition$ | $stop_condition$))))",
    "ftFinBtw": "(LAST V ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))",
    "ftFinBtwExpanded": "(LAST V ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))",
    "ptFinBtw": "(H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)))",
    "ptFinBtwExpanded": "(H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> $post_condition$)))",
    "CoCoSpecCodeFinBtw": "(H((H( not $regular_condition$)) or ((SI( $regular_condition$, ( not $stop_condition$) )) => $post_condition$)))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_noTrigger_until_satisfaction.svg"
  },
  "null,noTrigger,within,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "(LAST V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))",
    "ftExpanded": "(LAST V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))",
    "pt": "(H ((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] ((Z FALSE) | $post_condition$))))",
    "ptExpanded": "(H ((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] ((Z FALSE) | $post_condition$))))",
    "CoCoSpecCode": "(H((OT($duration$,$duration$,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$-1,0,((ZtoPre( false )) or $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ($regular_condition$ -> (F[<=$duration$] $post_condition$)))",
    "ftInfAUExpanded": "(G ($regular_condition$ -> (F[<=$duration$] $post_condition$)))",
    "ftInfBtw": "(G ($regular_condition$ -> (F[<=$duration$] $post_condition$)))",
    "ftInfBtwExpanded": "(G ($regular_condition$ -> (F[<=$duration$] $post_condition$)))",
    "ftFinBtw": "(LAST V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))",
    "ftFinBtwExpanded": "(LAST V ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))",
    "ptFinBtw": "(H ((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] ((Z FALSE) | $post_condition$))))",
    "ptFinBtwExpanded": "(H ((O[=$duration$] ($regular_condition$ & (! $post_condition$))) -> (O[<$duration$] ((Z FALSE) | $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H((OT($duration$,$duration$,($regular_condition$ and ( not $post_condition$)))) => (OT($duration$-1,0,((ZtoPre( false )) or $post_condition$)))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_noTrigger_within_satisfaction.svg"
  },
  "null,null,after,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))",
    "ftExpanded": "(((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))",
    "pt": "((H ((O[<=$duration$] (Z FALSE)) -> (! $post_condition$))) & (H ((H (! $post_condition$)) -> (O[<$duration$+1] (Z FALSE)))))",
    "ptExpanded": "((H ((O[<=$duration$] (Z FALSE)) -> (! $post_condition$))) & (H ((H (! $post_condition$)) -> (O[<$duration$+1] (Z FALSE)))))",
    "CoCoSpecCode": "((H((OT($duration$,0,(ZtoPre( false )))) => ( not $post_condition$))) and (H((H( not $post_condition$)) => (OT($duration$,0,(ZtoPre( false )))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))",
    "ftInfAUExpanded": "(((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))",
    "ftInfBtw": "(((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))",
    "ftInfBtwExpanded": "(((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))",
    "ftFinBtw": "(((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))",
    "ftFinBtwExpanded": "(((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))",
    "ptFinBtw": "((H ((O[<=$duration$] (Z FALSE)) -> (! $post_condition$))) & (H ((H (! $post_condition$)) -> (O[<$duration$+1] (Z FALSE)))))",
    "ptFinBtwExpanded": "((H ((O[<=$duration$] (Z FALSE)) -> (! $post_condition$))) & (H ((H (! $post_condition$)) -> (O[<$duration$+1] (Z FALSE)))))",
    "CoCoSpecCodeFinBtw": "((H((OT($duration$,0,(ZtoPre( false )))) => ( not $post_condition$))) and (H((H( not $post_condition$)) => (OT($duration$,0,(ZtoPre( false )))))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_after_satisfaction.svg"
  },
  "null,null,always,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "(LAST V $post_condition$)",
    "ftExpanded": "(LAST V $post_condition$)",
    "pt": "(H $post_condition$)",
    "ptExpanded": "(H $post_condition$)",
    "CoCoSpecCode": "(H($post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G $post_condition$)",
    "ftInfAUExpanded": "(G $post_condition$)",
    "ftInfBtw": "(G $post_condition$)",
    "ftInfBtwExpanded": "(G $post_condition$)",
    "ftFinBtw": "(LAST V $post_condition$)",
    "ftFinBtwExpanded": "(LAST V $post_condition$)",
    "ptFinBtw": "(H $post_condition$)",
    "ptFinBtwExpanded": "(H $post_condition$)",
    "CoCoSpecCodeFinBtw": "(H($post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
  },
  "null,null,before,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "(($post_condition$ | LAST) V (! $stop_condition$))",
    "ftExpanded": "(($post_condition$ | LAST) V (! $stop_condition$))",
    "pt": "(H ($stop_condition$ -> (Y (O $post_condition$))))",
    "ptExpanded": "(H ($stop_condition$ -> (Y (O $post_condition$))))",
    "CoCoSpecCode": "(H($stop_condition$ => (YtoPre(O($post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "($post_condition$ V (! $stop_condition$))",
    "ftInfAUExpanded": "($post_condition$ V (! $stop_condition$))",
    "ftInfBtw": "($post_condition$ V (! $stop_condition$))",
    "ftInfBtwExpanded": "($post_condition$ V (! $stop_condition$))",
    "ftFinBtw": "(($post_condition$ | LAST) V (! $stop_condition$))",
    "ftFinBtwExpanded": "(($post_condition$ | LAST) V (! $stop_condition$))",
    "ptFinBtw": "(H ($stop_condition$ -> (Y (O $post_condition$))))",
    "ptFinBtwExpanded": "(H ($stop_condition$ -> (Y (O $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H($stop_condition$ => (YtoPre(O($post_condition$)))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs in the interval, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_before_satisfaction.svg"
  },
  "null,null,eventually,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "((! LAST) U $post_condition$)",
    "ftExpanded": "((! LAST) U $post_condition$)",
    "pt": "(O $post_condition$)",
    "ptExpanded": "(O $post_condition$)",
    "CoCoSpecCode": "(O($post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(F $post_condition$)",
    "ftInfAUExpanded": "(F $post_condition$)",
    "ftInfBtw": "(F $post_condition$)",
    "ftInfBtwExpanded": "(F $post_condition$)",
    "ftFinBtw": "((! LAST) U $post_condition$)",
    "ftFinBtwExpanded": "((! LAST) U $post_condition$)",
    "ptFinBtw": "(O $post_condition$)",
    "ptFinBtwExpanded": "(O $post_condition$)",
    "CoCoSpecCodeFinBtw": "(O($post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_eventually_satisfaction.svg"
  },
  "null,null,finally,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "(LAST V (LAST -> $post_condition$))",
    "ftExpanded": "(LAST V (LAST -> $post_condition$))",
    "pt": "$post_condition$",
    "ptExpanded": "$post_condition$",
    "CoCoSpecCode": "$post_condition$",
    "R2U2Code": "Under construction.",
    "ftInfAU": "TRUE",
    "ftInfAUExpanded": "TRUE",
    "ftInfBtw": "TRUE",
    "ftInfBtwExpanded": "TRUE",
    "ftFinBtw": "(LAST V (LAST -> $post_condition$))",
    "ftFinBtwExpanded": "(LAST V (LAST -> $post_condition$))",
    "ptFinBtw": "$post_condition$",
    "ptFinBtwExpanded": "$post_condition$",
    "CoCoSpecCodeFinBtw": "$post_condition$",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, if trigger holds, then RES holds at the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_finally_satisfaction.svg"
  },
  "null,null,for,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))",
    "ftExpanded": "((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))",
    "pt": "(H ((O[<=$duration$] (Z FALSE)) -> $post_condition$))",
    "ptExpanded": "(H ((O[<=$duration$] (Z FALSE)) -> $post_condition$))",
    "CoCoSpecCode": "(H((OT($duration$,0,(ZtoPre( false )))) => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G[<=$duration$] $post_condition$) | (G $post_condition$))",
    "ftInfAUExpanded": "((G[<=$duration$] $post_condition$) | (G $post_condition$))",
    "ftInfBtw": "((G[<=$duration$] $post_condition$) | (G $post_condition$))",
    "ftInfBtwExpanded": "((G[<=$duration$] $post_condition$) | (G $post_condition$))",
    "ftFinBtw": "((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))",
    "ftFinBtwExpanded": "((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))",
    "ptFinBtw": "(H ((O[<=$duration$] (Z FALSE)) -> $post_condition$))",
    "ptFinBtwExpanded": "(H ((O[<=$duration$] (Z FALSE)) -> $post_condition$))",
    "CoCoSpecCodeFinBtw": "(H((OT($duration$,0,(ZtoPre( false )))) => $post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_for_satisfaction.svg"
  },
  "null,null,immediately,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "$post_condition$",
    "ftExpanded": "$post_condition$",
    "pt": "(H ((Z FALSE) -> $post_condition$))",
    "ptExpanded": "(H ((Z FALSE) -> $post_condition$))",
    "CoCoSpecCode": "(H((ZtoPre( false )) => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "$post_condition$",
    "ftInfAUExpanded": "$post_condition$",
    "ftInfBtw": "$post_condition$",
    "ftInfBtwExpanded": "$post_condition$",
    "ftFinBtw": "$post_condition$",
    "ftFinBtwExpanded": "$post_condition$",
    "ptFinBtw": "(H ((Z FALSE) -> $post_condition$))",
    "ptFinBtwExpanded": "(H ((Z FALSE) -> $post_condition$))",
    "CoCoSpecCodeFinBtw": "(H((ZtoPre( false )) => $post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_immediately_satisfaction.svg"
  },
  "null,null,never,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "(LAST V (! $post_condition$))",
    "ftExpanded": "(LAST V (! $post_condition$))",
    "pt": "(H (! $post_condition$))",
    "ptExpanded": "(H (! $post_condition$))",
    "CoCoSpecCode": "(H( not $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G (! $post_condition$))",
    "ftInfAUExpanded": "(G (! $post_condition$))",
    "ftInfBtw": "(G (! $post_condition$))",
    "ftInfBtwExpanded": "(G (! $post_condition$))",
    "ftFinBtw": "(LAST V (! $post_condition$))",
    "ftFinBtwExpanded": "(LAST V (! $post_condition$))",
    "ptFinBtw": "(H (! $post_condition$))",
    "ptFinBtwExpanded": "(H (! $post_condition$))",
    "CoCoSpecCodeFinBtw": "(H( not $post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_never_satisfaction.svg"
  },
  "null,null,next,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "(LAST | (X $post_condition$))",
    "ftExpanded": "(LAST | (X $post_condition$))",
    "pt": "(H ((Y (Z FALSE)) -> $post_condition$))",
    "ptExpanded": "(H ((Y (Z FALSE)) -> $post_condition$))",
    "CoCoSpecCode": "(H((YtoPre(ZtoPre( false ))) => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(X $post_condition$)",
    "ftInfAUExpanded": "(X $post_condition$)",
    "ftInfBtw": "(X $post_condition$)",
    "ftInfBtwExpanded": "(X $post_condition$)",
    "ftFinBtw": "(LAST | (X $post_condition$))",
    "ftFinBtwExpanded": "(LAST | (X $post_condition$))",
    "ptFinBtw": "(H ((Y (Z FALSE)) -> $post_condition$))",
    "ptFinBtwExpanded": "(H ((Y (Z FALSE)) -> $post_condition$))",
    "CoCoSpecCodeFinBtw": "(H((YtoPre(ZtoPre( false ))) => $post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_next_satisfaction.svg"
  },
  "null,null,null,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "((! LAST) U $post_condition$)",
    "ftExpanded": "((! LAST) U $post_condition$)",
    "pt": "(O $post_condition$)",
    "ptExpanded": "(O $post_condition$)",
    "CoCoSpecCode": "(O($post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(F $post_condition$)",
    "ftInfAUExpanded": "(F $post_condition$)",
    "ftInfBtw": "(F $post_condition$)",
    "ftInfBtwExpanded": "(F $post_condition$)",
    "ftFinBtw": "((! LAST) U $post_condition$)",
    "ftFinBtwExpanded": "((! LAST) U $post_condition$)",
    "ptFinBtw": "(O $post_condition$)",
    "ptFinBtwExpanded": "(O $post_condition$)",
    "CoCoSpecCodeFinBtw": "(O($post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_null_satisfaction.svg"
  },
  "null,null,until,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "(($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))",
    "ftExpanded": "(($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))",
    "pt": "(H ((H (! $stop_condition$)) -> $post_condition$))",
    "ptExpanded": "(H ((H (! $stop_condition$)) -> $post_condition$))",
    "CoCoSpecCode": "(H((H( not $stop_condition$)) => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "($stop_condition$ V ($post_condition$ | $stop_condition$))",
    "ftInfAUExpanded": "($stop_condition$ V ($post_condition$ | $stop_condition$))",
    "ftInfBtw": "($stop_condition$ V ($post_condition$ | $stop_condition$))",
    "ftInfBtwExpanded": "($stop_condition$ V ($post_condition$ | $stop_condition$))",
    "ftFinBtw": "(($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))",
    "ftFinBtwExpanded": "(($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))",
    "ptFinBtw": "(H ((H (! $stop_condition$)) -> $post_condition$))",
    "ptFinBtwExpanded": "(H ((H (! $stop_condition$)) -> $post_condition$))",
    "CoCoSpecCodeFinBtw": "(H((H( not $stop_condition$)) => $post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_until_satisfaction.svg"
  },
  "null,null,within,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))",
    "ftExpanded": "((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))",
    "pt": "(H ((H (! $post_condition$)) -> (O[<$duration$] (Z FALSE))))",
    "ptExpanded": "(H ((H (! $post_condition$)) -> (O[<$duration$] (Z FALSE))))",
    "CoCoSpecCode": "(H((H( not $post_condition$)) => (OT($duration$-1,0,(ZtoPre( false ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(F[<=$duration$] $post_condition$)",
    "ftInfAUExpanded": "(F[<=$duration$] $post_condition$)",
    "ftInfBtw": "(F[<=$duration$] $post_condition$)",
    "ftInfBtwExpanded": "(F[<=$duration$] $post_condition$)",
    "ftFinBtw": "((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))",
    "ftFinBtwExpanded": "((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))",
    "ptFinBtw": "(H ((H (! $post_condition$)) -> (O[<$duration$] (Z FALSE))))",
    "ptFinBtwExpanded": "(H ((H (! $post_condition$)) -> (O[<$duration$] (Z FALSE))))",
    "CoCoSpecCodeFinBtw": "(H((H( not $post_condition$)) => (OT($duration$-1,0,(ZtoPre( false ))))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_within_satisfaction.svg"
  },
  "null,regular,after,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))",
    "pt": "((H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] (($regular_condition$ & (Z (! $regular_condition$))) & (! $post_condition$))) -> (O[<$duration$+1] ((Z FALSE) | $post_condition$)))))",
    "ptExpanded": "((H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] (($regular_condition$ & (Z (! $regular_condition$))) & (! $post_condition$))) -> (O[<$duration$+1] ((Z FALSE) | $post_condition$)))))",
    "CoCoSpecCode": "((H((OT($duration$,0,($regular_condition$ and (ZtoPre( not $regular_condition$))))) => ((H( not $regular_condition$)) or ( not $post_condition$)))) and (H((OT($duration$+1,$duration$+1,(($regular_condition$ and (ZtoPre( not $regular_condition$))) and ( not $post_condition$)))) => (OT($duration$,0,((ZtoPre( false )) or $post_condition$))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))",
    "ptFinBtw": "((H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] (($regular_condition$ & (Z (! $regular_condition$))) & (! $post_condition$))) -> (O[<$duration$+1] ((Z FALSE) | $post_condition$)))))",
    "ptFinBtwExpanded": "((H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] (($regular_condition$ & (Z (! $regular_condition$))) & (! $post_condition$))) -> (O[<$duration$+1] ((Z FALSE) | $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "((H((OT($duration$,0,($regular_condition$ and (ZtoPre( not $regular_condition$))))) => ((H( not $regular_condition$)) or ( not $post_condition$)))) and (H((OT($duration$+1,$duration$+1,(($regular_condition$ and (ZtoPre( not $regular_condition$))) and ( not $post_condition$)))) => (OT($duration$,0,((ZtoPre( false )) or $post_condition$))))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_after_satisfaction.svg"
  },
  "null,regular,always,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V $post_condition$)))) & ($regular_condition$ -> (LAST V $post_condition$)))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V $post_condition$)))) & ($regular_condition$ -> (LAST V $post_condition$)))",
    "pt": "(H ((H (! $regular_condition$)) | $post_condition$))",
    "ptExpanded": "(H ((H (! $regular_condition$)) | $post_condition$))",
    "CoCoSpecCode": "(H((H( not $regular_condition$)) or $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G $post_condition$)))) & ($regular_condition$ -> (G $post_condition$)))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G $post_condition$)))) & ($regular_condition$ -> (G $post_condition$)))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G $post_condition$)))) & ($regular_condition$ -> (G $post_condition$)))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G $post_condition$)))) & ($regular_condition$ -> (G $post_condition$)))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V $post_condition$)))) & ($regular_condition$ -> (LAST V $post_condition$)))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V $post_condition$)))) & ($regular_condition$ -> (LAST V $post_condition$)))",
    "ptFinBtw": "(H ((H (! $regular_condition$)) | $post_condition$))",
    "ptFinBtwExpanded": "(H ((H (! $regular_condition$)) | $post_condition$))",
    "CoCoSpecCodeFinBtw": "(H((H( not $regular_condition$)) or $post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_always_satisfaction.svg"
  },
  "null,regular,before,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($post_condition$ | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($post_condition$ | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))",
    "pt": "(H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & (Z (! $regular_condition$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))))))",
    "ptExpanded": "(H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & (Z (! $regular_condition$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))))))",
    "CoCoSpecCode": "(H($stop_condition$ => ((H( not $regular_condition$)) or (((YtoPre( true )) and ( not ($regular_condition$ and (ZtoPre( not $regular_condition$))))) and (YtoPre( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $post_condition$) ))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($post_condition$ V (! $stop_condition$))))) & ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($post_condition$ V (! $stop_condition$))))) & ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($post_condition$ V (! $stop_condition$))))) & ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($post_condition$ V (! $stop_condition$))))) & ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($post_condition$ | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($post_condition$ | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))",
    "ptFinBtw": "(H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & (Z (! $regular_condition$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))))))",
    "ptFinBtwExpanded": "(H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & (Z (! $regular_condition$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))))))",
    "CoCoSpecCodeFinBtw": "(H($stop_condition$ => ((H( not $regular_condition$)) or (((YtoPre( true )) and ( not ($regular_condition$ and (ZtoPre( not $regular_condition$))))) and (YtoPre( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $post_condition$) ))))))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs in the interval, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_before_satisfaction.svg"
  },
  "null,regular,eventually,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "pt": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))",
    "ptExpanded": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))",
    "CoCoSpecCode": "((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "ptFinBtw": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))",
    "ptFinBtwExpanded": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))",
    "CoCoSpecCodeFinBtw": "((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $post_condition$) ))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_eventually_satisfaction.svg"
  },
  "null,regular,finally,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (LAST -> $post_condition$))))) & ($regular_condition$ -> (LAST V (LAST -> $post_condition$))))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (LAST -> $post_condition$))))) & ($regular_condition$ -> (LAST V (LAST -> $post_condition$))))",
    "pt": "((H (! $regular_condition$)) | $post_condition$)",
    "ptExpanded": "((H (! $regular_condition$)) | $post_condition$)",
    "CoCoSpecCode": "((H( not $regular_condition$)) or $post_condition$)",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> TRUE)) & ($regular_condition$ -> TRUE))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> TRUE)) & ($regular_condition$ -> TRUE))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> TRUE)) & ($regular_condition$ -> TRUE))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> TRUE)) & ($regular_condition$ -> TRUE))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (LAST -> $post_condition$))))) & ($regular_condition$ -> (LAST V (LAST -> $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (LAST -> $post_condition$))))) & ($regular_condition$ -> (LAST V (LAST -> $post_condition$))))",
    "ptFinBtw": "((H (! $regular_condition$)) | $post_condition$)",
    "ptFinBtwExpanded": "((H (! $regular_condition$)) | $post_condition$)",
    "CoCoSpecCodeFinBtw": "((H( not $regular_condition$)) or $post_condition$)",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, if trigger holds, then RES holds at the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_finally_satisfaction.svg"
  },
  "null,regular,for,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))",
    "pt": "(H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | $post_condition$)))",
    "ptExpanded": "(H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | $post_condition$)))",
    "CoCoSpecCode": "(H((OT($duration$,0,($regular_condition$ and (ZtoPre( not $regular_condition$))))) => ((H( not $regular_condition$)) or $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))",
    "ptFinBtw": "(H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | $post_condition$)))",
    "ptFinBtwExpanded": "(H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | $post_condition$)))",
    "CoCoSpecCodeFinBtw": "(H((OT($duration$,0,($regular_condition$ and (ZtoPre( not $regular_condition$))))) => ((H( not $regular_condition$)) or $post_condition$)))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_for_satisfaction.svg"
  },
  "null,regular,immediately,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))",
    "pt": "(H (($regular_condition$ & (Z (! $regular_condition$))) -> $post_condition$))",
    "ptExpanded": "(H (($regular_condition$ & (Z (! $regular_condition$))) -> $post_condition$))",
    "CoCoSpecCode": "(H(($regular_condition$ and (ZtoPre( not $regular_condition$))) => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))",
    "ptFinBtw": "(H (($regular_condition$ & (Z (! $regular_condition$))) -> $post_condition$))",
    "ptFinBtwExpanded": "(H (($regular_condition$ & (Z (! $regular_condition$))) -> $post_condition$))",
    "CoCoSpecCodeFinBtw": "(H(($regular_condition$ and (ZtoPre( not $regular_condition$))) => $post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_immediately_satisfaction.svg"
  },
  "null,regular,never,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))",
    "pt": "(H ((H (! $regular_condition$)) | (! $post_condition$)))",
    "ptExpanded": "(H ((H (! $regular_condition$)) | (! $post_condition$)))",
    "CoCoSpecCode": "(H((H( not $regular_condition$)) or ( not $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))",
    "ptFinBtw": "(H ((H (! $regular_condition$)) | (! $post_condition$)))",
    "ptFinBtwExpanded": "(H ((H (! $regular_condition$)) | (! $post_condition$)))",
    "CoCoSpecCodeFinBtw": "(H((H( not $regular_condition$)) or ( not $post_condition$)))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_never_satisfaction.svg"
  },
  "null,regular,next,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X $post_condition$))))) & ($regular_condition$ -> (LAST | (X $post_condition$))))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X $post_condition$))))) & ($regular_condition$ -> (LAST | (X $post_condition$))))",
    "pt": "(H ((Y ($regular_condition$ & (Z (! $regular_condition$)))) -> ($post_condition$ | (Z FALSE))))",
    "ptExpanded": "(H ((Y ($regular_condition$ & (Z (! $regular_condition$)))) -> ($post_condition$ | (Z FALSE))))",
    "CoCoSpecCode": "(H((YtoPre($regular_condition$ and (ZtoPre( not $regular_condition$)))) => ($post_condition$ or (ZtoPre( false )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X $post_condition$)))) & ($regular_condition$ -> (X $post_condition$)))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X $post_condition$)))) & ($regular_condition$ -> (X $post_condition$)))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X $post_condition$)))) & ($regular_condition$ -> (X $post_condition$)))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X $post_condition$)))) & ($regular_condition$ -> (X $post_condition$)))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X $post_condition$))))) & ($regular_condition$ -> (LAST | (X $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X $post_condition$))))) & ($regular_condition$ -> (LAST | (X $post_condition$))))",
    "ptFinBtw": "(H ((Y ($regular_condition$ & (Z (! $regular_condition$)))) -> ($post_condition$ | (Z FALSE))))",
    "ptFinBtwExpanded": "(H ((Y ($regular_condition$ & (Z (! $regular_condition$)))) -> ($post_condition$ | (Z FALSE))))",
    "CoCoSpecCodeFinBtw": "(H((YtoPre($regular_condition$ and (ZtoPre( not $regular_condition$)))) => ($post_condition$ or (ZtoPre( false )))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_next_satisfaction.svg"
  },
  "null,regular,null,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "pt": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))",
    "ptExpanded": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))",
    "CoCoSpecCode": "((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "ptFinBtw": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))",
    "ptFinBtwExpanded": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))",
    "CoCoSpecCodeFinBtw": "((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $post_condition$) ))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_null_satisfaction.svg"
  },
  "null,regular,until,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))",
    "pt": "(H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))) -> $post_condition$)))",
    "ptExpanded": "(H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))) -> $post_condition$)))",
    "CoCoSpecCode": "(H((H( not $regular_condition$)) or ((SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $stop_condition$) )) => $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($stop_condition$ V ($post_condition$ | $stop_condition$))))) & ($regular_condition$ -> ($stop_condition$ V ($post_condition$ | $stop_condition$))))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($stop_condition$ V ($post_condition$ | $stop_condition$))))) & ($regular_condition$ -> ($stop_condition$ V ($post_condition$ | $stop_condition$))))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($stop_condition$ V ($post_condition$ | $stop_condition$))))) & ($regular_condition$ -> ($stop_condition$ V ($post_condition$ | $stop_condition$))))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($stop_condition$ V ($post_condition$ | $stop_condition$))))) & ($regular_condition$ -> ($stop_condition$ V ($post_condition$ | $stop_condition$))))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))",
    "ptFinBtw": "(H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))) -> $post_condition$)))",
    "ptFinBtwExpanded": "(H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))) -> $post_condition$)))",
    "CoCoSpecCodeFinBtw": "(H((H( not $regular_condition$)) or ((SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $stop_condition$) )) => $post_condition$)))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_until_satisfaction.svg"
  },
  "null,regular,within,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "LAST",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "LAST",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "LAST",
      "ftExtleft": "FTP",
      "ftExtright": "LAST",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "LAST",
      "ftExtleft2": "FTP",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "LAST"
    },
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))",
    "pt": "(H ((O[=$duration$] (($regular_condition$ & (Z (! $regular_condition$))) & (! $post_condition$))) -> (O[<$duration$] ((Z FALSE) | $post_condition$))))",
    "ptExpanded": "(H ((O[=$duration$] (($regular_condition$ & (Z (! $regular_condition$))) & (! $post_condition$))) -> (O[<$duration$] ((Z FALSE) | $post_condition$))))",
    "CoCoSpecCode": "(H((OT($duration$,$duration$,(($regular_condition$ and (ZtoPre( not $regular_condition$))) and ( not $post_condition$)))) => (OT($duration$-1,0,((ZtoPre( false )) or $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] $post_condition$)))) & ($regular_condition$ -> (F[<=$duration$] $post_condition$)))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] $post_condition$)))) & ($regular_condition$ -> (F[<=$duration$] $post_condition$)))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] $post_condition$)))) & ($regular_condition$ -> (F[<=$duration$] $post_condition$)))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] $post_condition$)))) & ($regular_condition$ -> (F[<=$duration$] $post_condition$)))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))",
    "ptFinBtw": "(H ((O[=$duration$] (($regular_condition$ & (Z (! $regular_condition$))) & (! $post_condition$))) -> (O[<$duration$] ((Z FALSE) | $post_condition$))))",
    "ptFinBtwExpanded": "(H ((O[=$duration$] (($regular_condition$ & (Z (! $regular_condition$))) & (! $post_condition$))) -> (O[<$duration$] ((Z FALSE) | $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H((OT($duration$,$duration$,(($regular_condition$ and (ZtoPre( not $regular_condition$))) and ( not $post_condition$)))) => (OT($duration$-1,0,((ZtoPre( false )) or $post_condition$)))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_within_satisfaction.svg"
  },
  "onlyAfter,noTrigger,after,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((FLin_$scope_mode$ | LAST) V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (FLin_$scope_mode$ | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | ((FLin_$scope_mode$ | LAST) V (! $post_condition$))))))",
    "ftExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] (Z FALSE)) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))))))) & ((H (! FLin_$scope_mode$)) -> (H ((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] (Z FALSE)) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] (Z FALSE)) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] (Z FALSE)) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((OT($duration$+1,$duration$+1,$regular_condition$)) => (((OT($duration$,0,(ZtoPre( false )))) or ( not $post_condition$)) or (YtoPre(OT($duration$,0,$post_condition$))))))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H((OT($duration$+1,$duration$+1,$regular_condition$)) => (((OT($duration$,0,(ZtoPre( false )))) or ( not $post_condition$)) or (YtoPre(OT($duration$,0,$post_condition$))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(FLin_$scope_mode$ V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] FLin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfAUExpanded": "((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) | ((G[<=$duration$+1] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] FLin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$)))))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) | ((G[<=$duration$+1] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] FLin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) | ((G[<=$duration$+1] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] (Z FALSE)) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$))))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] (Z FALSE)) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((OT($duration$+1,$duration$+1,$regular_condition$)) => (((OT($duration$,0,(ZtoPre( false )))) or ( not $post_condition$)) or (YtoPre(OT($duration$,0,$post_condition$)))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must either hold at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), or RES must remain false for $duration$+1 time points starting at the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$+1), or to the end of the interval if it ends sooner than trigger+$duration$+1.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_noTrigger_after_satisfaction.svg"
  },
  "onlyAfter,noTrigger,always,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((FLin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (FLin_$scope_mode$ | LAST)) U (! $post_condition$))))",
    "ftExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U (! $post_condition$))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y ((H (! $regular_condition$)) | (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) & ((H (! FLin_$scope_mode$)) -> ((H (! $regular_condition$)) | (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y ((H (! $regular_condition$)) | (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> ((H (! $regular_condition$)) | (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre((H( not $regular_condition$)) or ( not (SI( $regular_condition$, $post_condition$ ))))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => ((H( not $regular_condition$)) or ( not (SI( $regular_condition$, $post_condition$ ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(FLin_$scope_mode$ V ($regular_condition$ -> ((! FLin_$scope_mode$) U (! $post_condition$))))",
    "ftInfAUExpanded": "((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (! $post_condition$))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> ((! FLin_$scope_mode$) U (! $post_condition$)))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (! $post_condition$)))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> ((! FLin_$scope_mode$) U (! $post_condition$)))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (! $post_condition$)))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y ((H (! $regular_condition$)) | (! ($post_condition$ S ($post_condition$ & $regular_condition$)))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y ((H (! $regular_condition$)) | (! ($post_condition$ S ($post_condition$ & $regular_condition$)))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre((H( not $regular_condition$)) or ( not (SI( $regular_condition$, $post_condition$ )))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_noTrigger_always_satisfaction.svg"
  },
  "onlyAfter,noTrigger,before,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((FLin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (FLin_$scope_mode$ | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (FLin_$scope_mode$ | LAST))) & (! (FLin_$scope_mode$ | LAST))) U $post_condition$)))))",
    "ftExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $post_condition$)))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))))))) & ((H (! FLin_$scope_mode$)) -> (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((H( not $regular_condition$)) or ((SI( $regular_condition$, ( not $stop_condition$) )) => ( not $post_condition$))))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H((H( not $regular_condition$)) or ((SI( $regular_condition$, ( not $stop_condition$) )) => ( not $post_condition$))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(FLin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! FLin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & FLin_$scope_mode$)) & (! FLin_$scope_mode$)) U $post_condition$)))))",
    "ftInfAUExpanded": "((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $post_condition$)))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! FLin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & FLin_$scope_mode$)) & (! FLin_$scope_mode$)) U $post_condition$))))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $post_condition$))))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! FLin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & FLin_$scope_mode$)) & (! FLin_$scope_mode$)) U $post_condition$))))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $post_condition$))))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$)))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$)))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((H( not $regular_condition$)) or ((SI( $regular_condition$, ( not $stop_condition$) )) => ( not $post_condition$)))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false until, but not necessarily including, the state where the stop condition holds. If the stop condition never occurs in the interval, RES cannot occur.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_noTrigger_before_satisfaction.svg"
  },
  "onlyAfter,noTrigger,eventually,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((FLin_$scope_mode$ | LAST) V ($regular_condition$ -> ((FLin_$scope_mode$ | LAST) V (! $post_condition$))))",
    "ftExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$)))))) & ((H (! FLin_$scope_mode$)) -> (H ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$)))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((H( not $regular_condition$)) or ( not $post_condition$)))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H((H( not $regular_condition$)) or ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(FLin_$scope_mode$ V ($regular_condition$ -> (FLin_$scope_mode$ V (! $post_condition$))))",
    "ftInfAUExpanded": "((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> (FLin_$scope_mode$ V (! $post_condition$)))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> (FLin_$scope_mode$ V (! $post_condition$)))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((H( not $regular_condition$)) or ( not $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_noTrigger_eventually_satisfaction.svg"
  },
  "onlyAfter,noTrigger,finally,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((FLin_$scope_mode$ | LAST) V ($regular_condition$ -> ((FLin_$scope_mode$ | LAST) V ((FLin_$scope_mode$ | LAST) -> (! $post_condition$)))))",
    "ftExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) -> (! $post_condition$)))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y ((H (! $regular_condition$)) | (! $post_condition$))))) & ((H (! FLin_$scope_mode$)) -> ((H (! $regular_condition$)) | (! $post_condition$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y ((H (! $regular_condition$)) | (! $post_condition$))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> ((H (! $regular_condition$)) | (! $post_condition$))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre((H( not $regular_condition$)) or ( not $post_condition$))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => ((H( not $regular_condition$)) or ( not $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(FLin_$scope_mode$ V ($regular_condition$ -> (FLin_$scope_mode$ V (FLin_$scope_mode$ -> (! $post_condition$)))))",
    "ftInfAUExpanded": "((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> (! $post_condition$)))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> (FLin_$scope_mode$ V (FLin_$scope_mode$ -> (! $post_condition$))))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> (! $post_condition$))))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> (FLin_$scope_mode$ V (FLin_$scope_mode$ -> (! $post_condition$))))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> (! $post_condition$))))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre((H( not $regular_condition$)) or ( not $post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, trigger and RES cannot hold at the last time point of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_noTrigger_finally_satisfaction.svg"
  },
  "onlyAfter,noTrigger,for,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((FLin_$scope_mode$ | LAST) V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (FLin_$scope_mode$ | LAST)))))",
    "ftExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] ((Z FALSE) | (! $post_condition$)))))))) & ((H (! FLin_$scope_mode$)) -> (H ((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] ((Z FALSE) | (! $post_condition$)))))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] ((Z FALSE) | (! $post_condition$)))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] ((Z FALSE) | (! $post_condition$)))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((OT($duration$,$duration$,($regular_condition$ and $post_condition$))) => (OT($duration$-1,0,((ZtoPre( false )) or ( not $post_condition$))))))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H((OT($duration$,$duration$,($regular_condition$ and $post_condition$))) => (OT($duration$-1,0,((ZtoPre( false )) or ( not $post_condition$))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(FLin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] FLin_$scope_mode$))))",
    "ftInfAUExpanded": "((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] FLin_$scope_mode$)))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] FLin_$scope_mode$)))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] ((Z FALSE) | (! $post_condition$))))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] ((Z FALSE) | (! $post_condition$))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((OT($duration$,$duration$,($regular_condition$ and $post_condition$))) => (OT($duration$-1,0,((ZtoPre( false )) or ( not $post_condition$)))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), except if the end of the interval occurs sooner.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_noTrigger_for_satisfaction.svg"
  },
  "onlyAfter,noTrigger,immediately,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((FLin_$scope_mode$ | LAST) V ($regular_condition$ -> (! $post_condition$)))",
    "ftExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> (! $post_condition$)))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ($regular_condition$ -> (! $post_condition$)))))) & ((H (! FLin_$scope_mode$)) -> (H ($regular_condition$ -> (! $post_condition$)))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ($regular_condition$ -> (! $post_condition$)))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ($regular_condition$ -> (! $post_condition$)))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H($regular_condition$ => ( not $post_condition$)))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H($regular_condition$ => ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(FLin_$scope_mode$ V ($regular_condition$ -> (! $post_condition$)))",
    "ftInfAUExpanded": "((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> (! $post_condition$)))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> (! $post_condition$))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> (! $post_condition$))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> (! $post_condition$))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> (! $post_condition$))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ($regular_condition$ -> (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ($regular_condition$ -> (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H($regular_condition$ => ( not $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, trigger and RES cannot hold at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_noTrigger_immediately_satisfaction.svg"
  },
  "onlyAfter,noTrigger,never,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((FLin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (FLin_$scope_mode$ | LAST)) U $post_condition$)))",
    "ftExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))",
    "pt": "((H (FLin_$scope_mode$ -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & ((H (! FLin_$scope_mode$)) -> ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre((H( not $regular_condition$)) or ( not (SI( $regular_condition$, ( not $post_condition$) ))))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => ((H( not $regular_condition$)) or ( not (SI( $regular_condition$, ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(FLin_$scope_mode$ V ($regular_condition$ -> ((! FLin_$scope_mode$) U $post_condition$)))",
    "ftInfAUExpanded": "((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> ((! FLin_$scope_mode$) U $post_condition$))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> ((! FLin_$scope_mode$) U $post_condition$))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre((H( not $regular_condition$)) or ( not (SI( $regular_condition$, ( not $post_condition$) )))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_noTrigger_never_satisfaction.svg"
  },
  "onlyAfter,noTrigger,next,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((FLin_$scope_mode$ | LAST) V ($regular_condition$ -> ((FLin_$scope_mode$ | LAST) | ((X (! $post_condition$)) & (! (FLin_$scope_mode$ | LAST))))))",
    "ftExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) | ((X (! $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ((Y $regular_condition$) -> ((! $post_condition$) | (Z FALSE))))))) & ((H (! FLin_$scope_mode$)) -> (H ((Y $regular_condition$) -> ((! $post_condition$) | (Z FALSE))))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((Y $regular_condition$) -> ((! $post_condition$) | (Z FALSE))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((Y $regular_condition$) -> ((! $post_condition$) | (Z FALSE))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((YtoPre($regular_condition$)) => (( not $post_condition$) or (ZtoPre( false )))))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H((YtoPre($regular_condition$)) => (( not $post_condition$) or (ZtoPre( false )))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(FLin_$scope_mode$ V ($regular_condition$ -> (FLin_$scope_mode$ | ((X (! $post_condition$)) & (! FLin_$scope_mode$)))))",
    "ftInfAUExpanded": "((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> (FLin_$scope_mode$ | ((X (! $post_condition$)) & (! FLin_$scope_mode$))))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> (FLin_$scope_mode$ | ((X (! $post_condition$)) & (! FLin_$scope_mode$))))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ((Y $regular_condition$) -> ((! $post_condition$) | (Z FALSE)))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((Y $regular_condition$) -> ((! $post_condition$) | (Z FALSE)))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((YtoPre($regular_condition$)) => (( not $post_condition$) or (ZtoPre( false ))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES cannot hold at the next time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_noTrigger_next_satisfaction.svg"
  },
  "onlyAfter,noTrigger,null,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((FLin_$scope_mode$ | LAST) V ($regular_condition$ -> ((FLin_$scope_mode$ | LAST) V (! $post_condition$))))",
    "ftExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$)))))) & ((H (! FLin_$scope_mode$)) -> (H ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$)))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((H( not $regular_condition$)) or ( not $post_condition$)))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H((H( not $regular_condition$)) or ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(FLin_$scope_mode$ V ($regular_condition$ -> (FLin_$scope_mode$ V (! $post_condition$))))",
    "ftInfAUExpanded": "((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> (FLin_$scope_mode$ V (! $post_condition$)))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> (FLin_$scope_mode$ V (! $post_condition$)))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((H( not $regular_condition$)) or ( not $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_noTrigger_null_satisfaction.svg"
  },
  "onlyAfter,noTrigger,until,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((FLin_$scope_mode$ | LAST) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (FLin_$scope_mode$ | LAST)))) & (! (FLin_$scope_mode$ | LAST))) U $stop_condition$))))",
    "ftExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $stop_condition$))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))))))) & ((H (! FLin_$scope_mode$)) -> (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H($stop_condition$ => ((H( not $regular_condition$)) or (((YtoPre( true )) and ( not $regular_condition$)) and (YtoPre( not (SI( $regular_condition$, $post_condition$ ))))))))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H($stop_condition$ => ((H( not $regular_condition$)) or (((YtoPre( true )) and ( not $regular_condition$)) and (YtoPre( not (SI( $regular_condition$, $post_condition$ ))))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(FLin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | FLin_$scope_mode$))) & (! FLin_$scope_mode$)) U $stop_condition$))))",
    "ftInfAUExpanded": "((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | FLin_$scope_mode$))) & (! FLin_$scope_mode$)) U $stop_condition$)))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | FLin_$scope_mode$))) & (! FLin_$scope_mode$)) U $stop_condition$)))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$)))))))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$)))))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H($stop_condition$ => ((H( not $regular_condition$)) or (((YtoPre( true )) and ( not $regular_condition$)) and (YtoPre( not (SI( $regular_condition$, $post_condition$ )))))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at least once strictly before the state where the stop condition holds. If the stop condition never holds in the interval, RES need not be false at least once.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_noTrigger_until_satisfaction.svg"
  },
  "onlyAfter,noTrigger,within,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((FLin_$scope_mode$ | LAST) V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((FLin_$scope_mode$ | LAST) V (! $post_condition$)))))",
    "ftExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$)))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | (! $post_condition$))))))) & ((H (! FLin_$scope_mode$)) -> (H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | (! $post_condition$))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((OT($duration$,0,$regular_condition$)) => ((H( not $regular_condition$)) or ( not $post_condition$))))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H((OT($duration$,0,$regular_condition$)) => ((H( not $regular_condition$)) or ( not $post_condition$))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(FLin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$)))))",
    "ftInfAUExpanded": "((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (FLin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$))))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | (! $post_condition$)))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((O[<=$duration$] $regular_condition$) -> ((H (! $regular_condition$)) | (! $post_condition$)))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((OT($duration$,0,$regular_condition$)) => ((H( not $regular_condition$)) or ( not $post_condition$)))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$), or until the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_noTrigger_within_satisfaction.svg"
  },
  "onlyAfter,null,after,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "(((F[<=$duration$] $post_condition$) | (F[<$duration$] (FLin_$scope_mode$ | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | ((FLin_$scope_mode$ | LAST) V (! $post_condition$))))",
    "ftExpanded": "(((F[<=$duration$] $post_condition$) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ((O[=$duration$+1] (Z FALSE)) -> (((O[<=$duration$] (Z FALSE)) | (! $post_condition$)) | (Y (O $post_condition$)))))))) & ((H (! FLin_$scope_mode$)) -> (H ((O[=$duration$+1] (Z FALSE)) -> (((O[<=$duration$] (Z FALSE)) | (! $post_condition$)) | (Y (O $post_condition$)))))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((O[=$duration$+1] (Z FALSE)) -> (((O[<=$duration$] (Z FALSE)) | (! $post_condition$)) | (Y (O $post_condition$)))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((O[=$duration$+1] (Z FALSE)) -> (((O[<=$duration$] (Z FALSE)) | (! $post_condition$)) | (Y (O $post_condition$)))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((OT($duration$+1,$duration$+1,(ZtoPre( false )))) => (((OT($duration$,0,(ZtoPre( false )))) or ( not $post_condition$)) or (YtoPre(O($post_condition$))))))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H((OT($duration$+1,$duration$+1,(ZtoPre( false )))) => (((OT($duration$,0,(ZtoPre( false )))) or ( not $post_condition$)) or (YtoPre(O($post_condition$))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((F[<=$duration$] $post_condition$) | (F[<$duration$] FLin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$))))",
    "ftInfAUExpanded": "(((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) | ((G[<=$duration$+1] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] FLin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$)))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) | ((G[<=$duration$+1] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] FLin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$)))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) | ((G[<=$duration$+1] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ((O[=$duration$+1] (Z FALSE)) -> (((O[<=$duration$] (Z FALSE)) | (! $post_condition$)) | (Y (O $post_condition$))))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((O[=$duration$+1] (Z FALSE)) -> (((O[<=$duration$] (Z FALSE)) | (! $post_condition$)) | (Y (O $post_condition$))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((OT($duration$+1,$duration$+1,(ZtoPre( false )))) => (((OT($duration$,0,(ZtoPre( false )))) or ( not $post_condition$)) or (YtoPre(O($post_condition$)))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must either hold at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), or RES must remain false for $duration$+1 time points starting at the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$+1), or to the end of the interval if it ends sooner than trigger+$duration$+1.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_after_satisfaction.svg"
  },
  "onlyAfter,null,always,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((! (FLin_$scope_mode$ | LAST)) U (! $post_condition$))",
    "ftExpanded": "((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U (! $post_condition$))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (! (H $post_condition$))))) & ((H (! FLin_$scope_mode$)) -> (! (H $post_condition$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (! (H $post_condition$))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (! (H $post_condition$))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre( not (H($post_condition$)))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => ( not (H($post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((! FLin_$scope_mode$) U (! $post_condition$))",
    "ftInfAUExpanded": "((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (! $post_condition$))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((! FLin_$scope_mode$) U (! $post_condition$)))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (! $post_condition$)))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((! FLin_$scope_mode$) U (! $post_condition$)))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (! $post_condition$)))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (! (H $post_condition$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (! (H $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre( not (H($post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_always_satisfaction.svg"
  },
  "onlyAfter,null,before,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((! (((! $stop_condition$) & (! (FLin_$scope_mode$ | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (FLin_$scope_mode$ | LAST))) & (! (FLin_$scope_mode$ | LAST))) U $post_condition$)))",
    "ftExpanded": "((! (((! $stop_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $post_condition$)))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ((H (! $stop_condition$)) -> (! $post_condition$)))))) & ((H (! FLin_$scope_mode$)) -> (H ((H (! $stop_condition$)) -> (! $post_condition$)))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((H (! $stop_condition$)) -> (! $post_condition$)))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((H (! $stop_condition$)) -> (! $post_condition$)))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((H( not $stop_condition$)) => ( not $post_condition$)))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H((H( not $stop_condition$)) => ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((! (((! $stop_condition$) & (! FLin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & FLin_$scope_mode$)) & (! FLin_$scope_mode$)) U $post_condition$)))",
    "ftInfAUExpanded": "((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $post_condition$)))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((! (((! $stop_condition$) & (! FLin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & FLin_$scope_mode$)) & (! FLin_$scope_mode$)) U $post_condition$))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $post_condition$))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((! (((! $stop_condition$) & (! FLin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & FLin_$scope_mode$)) & (! FLin_$scope_mode$)) U $post_condition$))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $post_condition$))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ((H (! $stop_condition$)) -> (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((H (! $stop_condition$)) -> (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((H( not $stop_condition$)) => ( not $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false until, but not necessarily including, the state where the stop condition holds. If the stop condition never occurs in the interval, RES cannot occur.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_before_satisfaction.svg"
  },
  "onlyAfter,null,eventually,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((FLin_$scope_mode$ | LAST) V (! $post_condition$))",
    "ftExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H (! $post_condition$))))) & ((H (! FLin_$scope_mode$)) -> (H (! $post_condition$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H (! $post_condition$))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H (! $post_condition$))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H( not $post_condition$))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H( not $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(FLin_$scope_mode$ V (! $post_condition$))",
    "ftInfAUExpanded": "((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (FLin_$scope_mode$ V (! $post_condition$)))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (FLin_$scope_mode$ V (! $post_condition$)))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H (! $post_condition$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H (! $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H( not $post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_eventually_satisfaction.svg"
  },
  "onlyAfter,null,finally,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((FLin_$scope_mode$ | LAST) V ((FLin_$scope_mode$ | LAST) -> (! $post_condition$)))",
    "ftExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) -> (! $post_condition$)))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (! $post_condition$)))) & ((H (! FLin_$scope_mode$)) -> (! $post_condition$)))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (! $post_condition$)))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (! $post_condition$)))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre( not $post_condition$)))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => ( not $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(FLin_$scope_mode$ V (FLin_$scope_mode$ -> (! $post_condition$)))",
    "ftInfAUExpanded": "((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> (! $post_condition$)))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (FLin_$scope_mode$ V (FLin_$scope_mode$ -> (! $post_condition$))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> (! $post_condition$))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (FLin_$scope_mode$ V (FLin_$scope_mode$ -> (! $post_condition$))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> (! $post_condition$))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (! $post_condition$))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (! $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre( not $post_condition$))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, trigger and RES cannot hold at the last time point of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_finally_satisfaction.svg"
  },
  "onlyAfter,null,for,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (FLin_$scope_mode$ | LAST)))",
    "ftExpanded": "((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ((H $post_condition$) -> (O[<$duration$] (Z FALSE))))))) & ((H (! FLin_$scope_mode$)) -> (H ((H $post_condition$) -> (O[<$duration$] (Z FALSE))))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((H $post_condition$) -> (O[<$duration$] (Z FALSE))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((H $post_condition$) -> (O[<$duration$] (Z FALSE))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((H($post_condition$)) => (OT($duration$-1,0,(ZtoPre( false ))))))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H((H($post_condition$)) => (OT($duration$-1,0,(ZtoPre( false ))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] FLin_$scope_mode$))",
    "ftInfAUExpanded": "((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ((H $post_condition$) -> (O[<$duration$] (Z FALSE)))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((H $post_condition$) -> (O[<$duration$] (Z FALSE)))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((H($post_condition$)) => (OT($duration$-1,0,(ZtoPre( false )))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), except if the end of the interval occurs sooner.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_for_satisfaction.svg"
  },
  "onlyAfter,null,immediately,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "(! $post_condition$)",
    "ftExpanded": "(! $post_condition$)",
    "pt": "(H ((Z FALSE) -> (! $post_condition$)))",
    "ptExpanded": "(H ((Z FALSE) -> (! $post_condition$)))",
    "CoCoSpecCode": "(H((ZtoPre( false )) => ( not $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(! $post_condition$)",
    "ftInfAUExpanded": "(! $post_condition$)",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (! $post_condition$))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (! $post_condition$))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (! $post_condition$))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (! $post_condition$))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ((Z FALSE) -> (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((Z FALSE) -> (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((ZtoPre( false )) => ( not $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, trigger and RES cannot hold at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_immediately_satisfaction.svg"
  },
  "onlyAfter,null,never,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((! (FLin_$scope_mode$ | LAST)) U $post_condition$)",
    "ftExpanded": "((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)",
    "pt": "((H (FLin_$scope_mode$ -> (Y (O $post_condition$)))) & ((H (! FLin_$scope_mode$)) -> (O $post_condition$)))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (O $post_condition$)))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O $post_condition$)))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(O($post_condition$))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (O($post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((! FLin_$scope_mode$) U $post_condition$)",
    "ftInfAUExpanded": "((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((! FLin_$scope_mode$) U $post_condition$))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((! FLin_$scope_mode$) U $post_condition$))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (O $post_condition$))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (O $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(O($post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_never_satisfaction.svg"
  },
  "onlyAfter,null,next,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((FLin_$scope_mode$ | LAST) | ((X (! $post_condition$)) & (! (FLin_$scope_mode$ | LAST))))",
    "ftExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) | ((X (! $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ((Y (Z FALSE)) -> (! $post_condition$)))))) & ((H (! FLin_$scope_mode$)) -> (H ((Y (Z FALSE)) -> (! $post_condition$)))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((Y (Z FALSE)) -> (! $post_condition$)))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((Y (Z FALSE)) -> (! $post_condition$)))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((YtoPre(ZtoPre( false ))) => ( not $post_condition$)))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H((YtoPre(ZtoPre( false ))) => ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(FLin_$scope_mode$ | ((X (! $post_condition$)) & (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (FLin_$scope_mode$ | ((X (! $post_condition$)) & (! FLin_$scope_mode$))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (FLin_$scope_mode$ | ((X (! $post_condition$)) & (! FLin_$scope_mode$))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ((Y (Z FALSE)) -> (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((Y (Z FALSE)) -> (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((YtoPre(ZtoPre( false ))) => ( not $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES cannot hold at the next time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_next_satisfaction.svg"
  },
  "onlyAfter,null,null,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((FLin_$scope_mode$ | LAST) V (! $post_condition$))",
    "ftExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H (! $post_condition$))))) & ((H (! FLin_$scope_mode$)) -> (H (! $post_condition$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H (! $post_condition$))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H (! $post_condition$))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H( not $post_condition$))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H( not $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(FLin_$scope_mode$ V (! $post_condition$))",
    "ftInfAUExpanded": "((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (FLin_$scope_mode$ V (! $post_condition$)))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (FLin_$scope_mode$ V (! $post_condition$)))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H (! $post_condition$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H (! $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H( not $post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_null_satisfaction.svg"
  },
  "onlyAfter,null,until,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "(! (((! ((! $stop_condition$) & ((! $post_condition$) | (FLin_$scope_mode$ | LAST)))) & (! (FLin_$scope_mode$ | LAST))) U $stop_condition$))",
    "ftExpanded": "(! (((! ((! $stop_condition$) & ((! $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $stop_condition$))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ($stop_condition$ -> (Y (! (H $post_condition$)))))))) & ((H (! FLin_$scope_mode$)) -> (H ($stop_condition$ -> (Y (! (H $post_condition$)))))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ($stop_condition$ -> (Y (! (H $post_condition$)))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ($stop_condition$ -> (Y (! (H $post_condition$)))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H($stop_condition$ => (YtoPre( not (H($post_condition$))))))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H($stop_condition$ => (YtoPre( not (H($post_condition$))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(! (((! ((! $stop_condition$) & ((! $post_condition$) | FLin_$scope_mode$))) & (! FLin_$scope_mode$)) U $stop_condition$))",
    "ftInfAUExpanded": "(! (((! ((! $stop_condition$) & ((! $post_condition$) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | FLin_$scope_mode$))) & (! FLin_$scope_mode$)) U $stop_condition$)))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | FLin_$scope_mode$))) & (! FLin_$scope_mode$)) U $stop_condition$)))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ($stop_condition$ -> (Y (! (H $post_condition$))))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ($stop_condition$ -> (Y (! (H $post_condition$))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H($stop_condition$ => (YtoPre( not (H($post_condition$)))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at least once strictly before the state where the stop condition holds. If the stop condition never holds in the interval, RES need not be false at least once.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_until_satisfaction.svg"
  },
  "onlyAfter,null,within,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "((G[<=$duration$] (! $post_condition$)) | ((FLin_$scope_mode$ | LAST) V (! $post_condition$)))",
    "ftExpanded": "((G[<=$duration$] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$)))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ((O[<=$duration$] (Z FALSE)) -> (! $post_condition$)))))) & ((H (! FLin_$scope_mode$)) -> (H ((O[<=$duration$] (Z FALSE)) -> (! $post_condition$)))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((O[<=$duration$] (Z FALSE)) -> (! $post_condition$)))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((O[<=$duration$] (Z FALSE)) -> (! $post_condition$)))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((OT($duration$,0,(ZtoPre( false )))) => ( not $post_condition$)))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H((OT($duration$,0,(ZtoPre( false )))) => ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G[<=$duration$] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$)))",
    "ftInfAUExpanded": "((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((G[<=$duration$] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((G[<=$duration$] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ((O[<=$duration$] (Z FALSE)) -> (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((O[<=$duration$] (Z FALSE)) -> (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((OT($duration$,0,(ZtoPre( false )))) => ( not $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$), or until the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_within_satisfaction.svg"
  },
  "onlyAfter,regular,after,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (FLin_$scope_mode$ | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | ((FLin_$scope_mode$ | LAST) V (! $post_condition$))))) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (FLin_$scope_mode$ | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | ((FLin_$scope_mode$ | LAST) V (! $post_condition$))))))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ((O[=$duration$+1] ($regular_condition$ & (Z (! $regular_condition$)))) -> (((O[<=$duration$] (Z FALSE)) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))))))) & ((H (! FLin_$scope_mode$)) -> (H ((O[=$duration$+1] ($regular_condition$ & (Z (! $regular_condition$)))) -> (((O[<=$duration$] (Z FALSE)) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((O[=$duration$+1] ($regular_condition$ & (Z (! $regular_condition$)))) -> (((O[<=$duration$] (Z FALSE)) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((O[=$duration$+1] ($regular_condition$ & (Z (! $regular_condition$)))) -> (((O[<=$duration$] (Z FALSE)) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((OT($duration$+1,$duration$+1,($regular_condition$ and (ZtoPre( not $regular_condition$))))) => (((OT($duration$,0,(ZtoPre( false )))) or ( not $post_condition$)) or (YtoPre(OT($duration$,0,$post_condition$))))))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H((OT($duration$+1,$duration$+1,($regular_condition$ and (ZtoPre( not $regular_condition$))))) => (((OT($duration$,0,(ZtoPre( false )))) or ( not $post_condition$)) or (YtoPre(OT($duration$,0,$post_condition$))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] FLin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$))))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] FLin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) | ((G[<=$duration$+1] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) | ((G[<=$duration$+1] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] FLin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$))))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] FLin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$)))))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) | ((G[<=$duration$+1] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) | ((G[<=$duration$+1] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] FLin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$))))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] FLin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) | ((G[<=$duration$+1] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) | ((G[<=$duration$+1] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ((O[=$duration$+1] ($regular_condition$ & (Z (! $regular_condition$)))) -> (((O[<=$duration$] (Z FALSE)) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$))))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((O[=$duration$+1] ($regular_condition$ & (Z (! $regular_condition$)))) -> (((O[<=$duration$] (Z FALSE)) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((OT($duration$+1,$duration$+1,($regular_condition$ and (ZtoPre( not $regular_condition$))))) => (((OT($duration$,0,(ZtoPre( false )))) or ( not $post_condition$)) or (YtoPre(OT($duration$,0,$post_condition$)))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must either hold at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), or RES must remain false for $duration$+1 time points starting at the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$+1), or to the end of the interval if it ends sooner than trigger+$duration$+1.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_after_satisfaction.svg"
  },
  "onlyAfter,regular,always,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X ((! (FLin_$scope_mode$ | LAST)) U (! $post_condition$))) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (FLin_$scope_mode$ | LAST)) U (! $post_condition$))))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U (! $post_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U (! $post_condition$))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y ((H (! $regular_condition$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & (Z (! $regular_condition$)))))))))) & ((H (! FLin_$scope_mode$)) -> ((H (! $regular_condition$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & (Z (! $regular_condition$)))))))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y ((H (! $regular_condition$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & (Z (! $regular_condition$)))))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> ((H (! $regular_condition$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & (Z (! $regular_condition$)))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), $post_condition$ ))))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => ((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), $post_condition$ ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X ((! FLin_$scope_mode$) U (! $post_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((! FLin_$scope_mode$) U (! $post_condition$))))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (! $post_condition$))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X ((! FLin_$scope_mode$) U (! $post_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((! FLin_$scope_mode$) U (! $post_condition$)))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (! $post_condition$)))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X ((! FLin_$scope_mode$) U (! $post_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((! FLin_$scope_mode$) U (! $post_condition$)))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (! $post_condition$)))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y ((H (! $regular_condition$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & (Z (! $regular_condition$))))))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y ((H (! $regular_condition$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & (Z (! $regular_condition$))))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), $post_condition$ )))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_always_satisfaction.svg"
  },
  "onlyAfter,regular,before,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X ((! (((! $stop_condition$) & (! (FLin_$scope_mode$ | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (FLin_$scope_mode$ | LAST))) & (! (FLin_$scope_mode$ | LAST))) U $post_condition$)))) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (FLin_$scope_mode$ | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (FLin_$scope_mode$ | LAST))) & (! (FLin_$scope_mode$ | LAST))) U $post_condition$)))))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((! (((! $stop_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $post_condition$)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $post_condition$)))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))) -> (! $post_condition$))))))) & ((H (! FLin_$scope_mode$)) -> (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))) -> (! $post_condition$))))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))) -> (! $post_condition$))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))) -> (! $post_condition$))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((H( not $regular_condition$)) or ((SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $stop_condition$) )) => ( not $post_condition$))))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H((H( not $regular_condition$)) or ((SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $stop_condition$) )) => ( not $post_condition$))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! FLin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & FLin_$scope_mode$)) & (! FLin_$scope_mode$)) U $post_condition$)))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! FLin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & FLin_$scope_mode$)) & (! FLin_$scope_mode$)) U $post_condition$)))))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $post_condition$)))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $post_condition$)))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! FLin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & FLin_$scope_mode$)) & (! FLin_$scope_mode$)) U $post_condition$)))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! FLin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & FLin_$scope_mode$)) & (! FLin_$scope_mode$)) U $post_condition$))))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $post_condition$)))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $post_condition$))))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X ((! (((! $stop_condition$) & (! FLin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & FLin_$scope_mode$)) & (! FLin_$scope_mode$)) U $post_condition$)))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! FLin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & FLin_$scope_mode$)) & (! FLin_$scope_mode$)) U $post_condition$))))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $post_condition$)))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $post_condition$))))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))) -> (! $post_condition$)))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))) -> (! $post_condition$)))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((H( not $regular_condition$)) or ((SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $stop_condition$) )) => ( not $post_condition$)))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false until, but not necessarily including, the state where the stop condition holds. If the stop condition never occurs in the interval, RES cannot occur.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_before_satisfaction.svg"
  },
  "onlyAfter,regular,eventually,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X ((FLin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((FLin_$scope_mode$ | LAST) V (! $post_condition$))))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$)))))) & ((H (! FLin_$scope_mode$)) -> (H ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$)))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((H( not $regular_condition$)) or ( not $post_condition$)))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H((H( not $regular_condition$)) or ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (FLin_$scope_mode$ V (! $post_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (FLin_$scope_mode$ V (! $post_condition$))))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (FLin_$scope_mode$ V (! $post_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (FLin_$scope_mode$ V (! $post_condition$)))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X (FLin_$scope_mode$ V (! $post_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (FLin_$scope_mode$ V (! $post_condition$)))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((H( not $regular_condition$)) or ( not $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_eventually_satisfaction.svg"
  },
  "onlyAfter,regular,finally,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X ((FLin_$scope_mode$ | LAST) V ((FLin_$scope_mode$ | LAST) -> (! $post_condition$)))) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((FLin_$scope_mode$ | LAST) V ((FLin_$scope_mode$ | LAST) -> (! $post_condition$)))))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) -> (! $post_condition$)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) -> (! $post_condition$)))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y ((H (! $regular_condition$)) | (! $post_condition$))))) & ((H (! FLin_$scope_mode$)) -> ((H (! $regular_condition$)) | (! $post_condition$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y ((H (! $regular_condition$)) | (! $post_condition$))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> ((H (! $regular_condition$)) | (! $post_condition$))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre((H( not $regular_condition$)) or ( not $post_condition$))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => ((H( not $regular_condition$)) or ( not $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (FLin_$scope_mode$ V (FLin_$scope_mode$ -> (! $post_condition$)))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (FLin_$scope_mode$ V (FLin_$scope_mode$ -> (! $post_condition$)))))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> (! $post_condition$)))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> (! $post_condition$)))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (FLin_$scope_mode$ V (FLin_$scope_mode$ -> (! $post_condition$)))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (FLin_$scope_mode$ V (FLin_$scope_mode$ -> (! $post_condition$))))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> (! $post_condition$)))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> (! $post_condition$))))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X (FLin_$scope_mode$ V (FLin_$scope_mode$ -> (! $post_condition$)))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (FLin_$scope_mode$ V (FLin_$scope_mode$ -> (! $post_condition$))))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> (! $post_condition$)))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) -> (! $post_condition$))))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre((H( not $regular_condition$)) or ( not $post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, trigger and RES cannot hold at the last time point of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_finally_satisfaction.svg"
  },
  "onlyAfter,regular,for,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (FLin_$scope_mode$ | LAST)))) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (FLin_$scope_mode$ | LAST)))))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ((O[=$duration$] (($regular_condition$ & (Z (! $regular_condition$))) & $post_condition$)) -> (O[<$duration$] ((Z FALSE) | (! $post_condition$)))))))) & ((H (! FLin_$scope_mode$)) -> (H ((O[=$duration$] (($regular_condition$ & (Z (! $regular_condition$))) & $post_condition$)) -> (O[<$duration$] ((Z FALSE) | (! $post_condition$)))))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((O[=$duration$] (($regular_condition$ & (Z (! $regular_condition$))) & $post_condition$)) -> (O[<$duration$] ((Z FALSE) | (! $post_condition$)))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((O[=$duration$] (($regular_condition$ & (Z (! $regular_condition$))) & $post_condition$)) -> (O[<$duration$] ((Z FALSE) | (! $post_condition$)))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((OT($duration$,$duration$,(($regular_condition$ and (ZtoPre( not $regular_condition$))) and $post_condition$))) => (OT($duration$-1,0,((ZtoPre( false )) or ( not $post_condition$))))))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H((OT($duration$,$duration$,(($regular_condition$ and (ZtoPre( not $regular_condition$))) and $post_condition$))) => (OT($duration$-1,0,((ZtoPre( false )) or ( not $post_condition$))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] FLin_$scope_mode$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] FLin_$scope_mode$))))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] FLin_$scope_mode$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] FLin_$scope_mode$)))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] FLin_$scope_mode$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] FLin_$scope_mode$)))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ((O[=$duration$] (($regular_condition$ & (Z (! $regular_condition$))) & $post_condition$)) -> (O[<$duration$] ((Z FALSE) | (! $post_condition$))))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((O[=$duration$] (($regular_condition$ & (Z (! $regular_condition$))) & $post_condition$)) -> (O[<$duration$] ((Z FALSE) | (! $post_condition$))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((OT($duration$,$duration$,(($regular_condition$ and (ZtoPre( not $regular_condition$))) and $post_condition$))) => (OT($duration$-1,0,((ZtoPre( false )) or ( not $post_condition$)))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), except if the end of the interval occurs sooner.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_for_satisfaction.svg"
  },
  "onlyAfter,regular,immediately,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X (! $post_condition$)) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! $post_condition$)))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (! $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (! $post_condition$)))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H (($regular_condition$ & (Z (! $regular_condition$))) -> (! $post_condition$)))))) & ((H (! FLin_$scope_mode$)) -> (H (($regular_condition$ & (Z (! $regular_condition$))) -> (! $post_condition$)))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H (($regular_condition$ & (Z (! $regular_condition$))) -> (! $post_condition$)))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H (($regular_condition$ & (Z (! $regular_condition$))) -> (! $post_condition$)))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H(($regular_condition$ and (ZtoPre( not $regular_condition$))) => ( not $post_condition$)))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H(($regular_condition$ and (ZtoPre( not $regular_condition$))) => ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (! $post_condition$)) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (! $post_condition$)))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! $post_condition$)))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (! $post_condition$)) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (! $post_condition$))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! $post_condition$))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X (! $post_condition$)) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (! $post_condition$))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! $post_condition$))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H (($regular_condition$ & (Z (! $regular_condition$))) -> (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H (($regular_condition$ & (Z (! $regular_condition$))) -> (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H(($regular_condition$ and (ZtoPre( not $regular_condition$))) => ( not $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, trigger and RES cannot hold at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_immediately_satisfaction.svg"
  },
  "onlyAfter,regular,never,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X ((! (FLin_$scope_mode$ | LAST)) U $post_condition$)) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (FLin_$scope_mode$ | LAST)) U $post_condition$)))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))",
    "pt": "((H (FLin_$scope_mode$ -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))))) & ((H (! FLin_$scope_mode$)) -> ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$)))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $post_condition$) ))))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => ((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X ((! FLin_$scope_mode$) U $post_condition$)) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((! FLin_$scope_mode$) U $post_condition$)))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X ((! FLin_$scope_mode$) U $post_condition$)) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((! FLin_$scope_mode$) U $post_condition$))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X ((! FLin_$scope_mode$) U $post_condition$)) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((! FLin_$scope_mode$) U $post_condition$))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & (Z (! $regular_condition$))))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), ( not $post_condition$) )))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_never_satisfaction.svg"
  },
  "onlyAfter,regular,next,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X ((FLin_$scope_mode$ | LAST) | ((X (! $post_condition$)) & (! (FLin_$scope_mode$ | LAST))))) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((FLin_$scope_mode$ | LAST) | ((X (! $post_condition$)) & (! (FLin_$scope_mode$ | LAST))))))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) | ((X (! $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) | ((X (! $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ((Y ($regular_condition$ & (Z (! $regular_condition$)))) -> ((! $post_condition$) | (Z FALSE))))))) & ((H (! FLin_$scope_mode$)) -> (H ((Y ($regular_condition$ & (Z (! $regular_condition$)))) -> ((! $post_condition$) | (Z FALSE))))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((Y ($regular_condition$ & (Z (! $regular_condition$)))) -> ((! $post_condition$) | (Z FALSE))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((Y ($regular_condition$ & (Z (! $regular_condition$)))) -> ((! $post_condition$) | (Z FALSE))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((YtoPre($regular_condition$ and (ZtoPre( not $regular_condition$)))) => (( not $post_condition$) or (ZtoPre( false )))))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H((YtoPre($regular_condition$ and (ZtoPre( not $regular_condition$)))) => (( not $post_condition$) or (ZtoPre( false )))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (FLin_$scope_mode$ | ((X (! $post_condition$)) & (! FLin_$scope_mode$)))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (FLin_$scope_mode$ | ((X (! $post_condition$)) & (! FLin_$scope_mode$)))))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (FLin_$scope_mode$ | ((X (! $post_condition$)) & (! FLin_$scope_mode$)))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (FLin_$scope_mode$ | ((X (! $post_condition$)) & (! FLin_$scope_mode$))))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X (FLin_$scope_mode$ | ((X (! $post_condition$)) & (! FLin_$scope_mode$)))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (FLin_$scope_mode$ | ((X (! $post_condition$)) & (! FLin_$scope_mode$))))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ((Y ($regular_condition$ & (Z (! $regular_condition$)))) -> ((! $post_condition$) | (Z FALSE)))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((Y ($regular_condition$ & (Z (! $regular_condition$)))) -> ((! $post_condition$) | (Z FALSE)))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((YtoPre($regular_condition$ and (ZtoPre( not $regular_condition$)))) => (( not $post_condition$) or (ZtoPre( false ))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES cannot hold at the next time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_next_satisfaction.svg"
  },
  "onlyAfter,regular,null,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X ((FLin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((FLin_$scope_mode$ | LAST) V (! $post_condition$))))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$)))))) & ((H (! FLin_$scope_mode$)) -> (H ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$)))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((H( not $regular_condition$)) or ( not $post_condition$)))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H((H( not $regular_condition$)) or ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (FLin_$scope_mode$ V (! $post_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (FLin_$scope_mode$ V (! $post_condition$))))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (FLin_$scope_mode$ V (! $post_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (FLin_$scope_mode$ V (! $post_condition$)))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X (FLin_$scope_mode$ V (! $post_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (FLin_$scope_mode$ V (! $post_condition$)))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((H( not $regular_condition$)) or ( not $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_null_satisfaction.svg"
  },
  "onlyAfter,regular,until,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (FLin_$scope_mode$ | LAST)))) & (! (FLin_$scope_mode$ | LAST))) U $stop_condition$))) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (FLin_$scope_mode$ | LAST)))) & (! (FLin_$scope_mode$ | LAST))) U $stop_condition$))))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $stop_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $stop_condition$))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & (Z (! $regular_condition$))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & (Z (! $regular_condition$)))))))))))))) & ((H (! FLin_$scope_mode$)) -> (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & (Z (! $regular_condition$))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & (Z (! $regular_condition$)))))))))))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & (Z (! $regular_condition$))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & (Z (! $regular_condition$)))))))))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & (Z (! $regular_condition$))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & (Z (! $regular_condition$)))))))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H($stop_condition$ => ((H( not $regular_condition$)) or (((YtoPre( true )) and ( not ($regular_condition$ and (ZtoPre( not $regular_condition$))))) and (YtoPre( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), $post_condition$ ))))))))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H($stop_condition$ => ((H( not $regular_condition$)) or (((YtoPre( true )) and ( not ($regular_condition$ and (ZtoPre( not $regular_condition$))))) and (YtoPre( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), $post_condition$ ))))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | FLin_$scope_mode$))) & (! FLin_$scope_mode$)) U $stop_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | FLin_$scope_mode$))) & (! FLin_$scope_mode$)) U $stop_condition$))))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | FLin_$scope_mode$))) & (! FLin_$scope_mode$)) U $stop_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | FLin_$scope_mode$))) & (! FLin_$scope_mode$)) U $stop_condition$)))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | FLin_$scope_mode$))) & (! FLin_$scope_mode$)) U $stop_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | FLin_$scope_mode$))) & (! FLin_$scope_mode$)) U $stop_condition$)))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & (Z (! $regular_condition$))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & (Z (! $regular_condition$))))))))))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & (Z (! $regular_condition$))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & (Z (! $regular_condition$))))))))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H($stop_condition$ => ((H( not $regular_condition$)) or (((YtoPre( true )) and ( not ($regular_condition$ and (ZtoPre( not $regular_condition$))))) and (YtoPre( not (SI( ($regular_condition$ and (ZtoPre( not $regular_condition$))), $post_condition$ )))))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at least once strictly before the state where the stop condition holds. If the stop condition never holds in the interval, RES need not be false at least once.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_until_satisfaction.svg"
  },
  "onlyAfter,regular,within,satisfaction": {
    "endpoints": {
      "left": "FTP",
      "right": "FLin_$scope_mode$",
      "ptExtleft": "(not previous TRUE)",
      "ptExtright": "(((not $scope_mode$) and (previous $scope_mode$)) and previous (historically (not ((not $scope_mode$) and (previous $scope_mode$)))))",
      "SMVptExtleft": "(!(Y TRUE))",
      "SMVptExtright": "(((!$scope_mode$) & (Y $scope_mode$)) & (Y (H (!((!$scope_mode$) & (Y $scope_mode$))))))",
      "ftExtleft": "FTP",
      "ftExtright": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "SMVftExtleft": "FTP",
      "SMVftExtright": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "ftExtleft2": "FTP",
      "ftExtright2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "SMVftExtleft2": "FTP",
      "SMVftExtright2": "($scope_mode$ & (LAST | X (! $scope_mode$)))"
    },
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((FLin_$scope_mode$ | LAST) V (! $post_condition$)))) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((FLin_$scope_mode$ | LAST) V (! $post_condition$)))))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$)))))",
    "pt": "((H (FLin_$scope_mode$ -> (Y (H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | (! $post_condition$))))))) & ((H (! FLin_$scope_mode$)) -> (H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | (! $post_condition$))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((OT($duration$,0,($regular_condition$ and (ZtoPre( not $regular_condition$))))) => ((H( not $regular_condition$)) or ( not $post_condition$))))))) and ((H( not ((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))))) => (H((OT($duration$,0,($regular_condition$ and (ZtoPre( not $regular_condition$))))) => ((H( not $regular_condition$)) or ( not $post_condition$))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$)))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$)))))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$)))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$)))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$))))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))))",
    "ptFinBtw": "(H (FLin_$scope_mode$ -> (Y (H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | (! $post_condition$)))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> (Y (H ((O[<=$duration$] ($regular_condition$ & (Z (! $regular_condition$)))) -> ((H (! $regular_condition$)) | (! $post_condition$)))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (YtoPre($scope_mode$))) and YtoPre(H( not (( not $scope_mode$) and (YtoPre($scope_mode$)))))) => (YtoPre(H((OT($duration$,0,($regular_condition$ and (ZtoPre( not $regular_condition$))))) => ((H( not $regular_condition$)) or ( not $post_condition$)))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds. In the interval defined by the entire execution, if $scope_mode$ never holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$), or until the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_within_satisfaction.svg"
  },
  "onlyBefore,noTrigger,after,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))",
    "pt": "((O FFin_$scope_mode$) -> (((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((OT($duration$+1,$duration$+1,$regular_condition$)) => (((OT($duration$,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) or ( not $post_condition$)) or (YtoPre(OT($duration$,0,$post_condition$))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((OT($duration$+1,$duration$+1,$regular_condition$)) => (((OT($duration$,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) or ( not $post_condition$)) or (YtoPre(OT($duration$,0,$post_condition$))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must either hold at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), or RES must remain false for $duration$+1 time points starting at the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$+1), or to the end of the interval if it ends sooner than trigger+$duration$+1.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_noTrigger_after_satisfaction.svg"
  },
  "onlyBefore,noTrigger,always,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))",
    "pt": "((O FFin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! ($post_condition$ S ($post_condition$ & $regular_condition$)))))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! ($post_condition$ S ($post_condition$ & $regular_condition$)))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, $post_condition$ )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> (F (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> (F (! $post_condition$))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> (F (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> (F (! $post_condition$))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> (F (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> (F (! $post_condition$))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> (F (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> (F (! $post_condition$))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! ($post_condition$ S ($post_condition$ & $regular_condition$)))))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! ($post_condition$ S ($post_condition$ & $regular_condition$)))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, $post_condition$ )))))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_noTrigger_always_satisfaction.svg"
  },
  "onlyBefore,noTrigger,before,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))",
    "pt": "((O FFin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ((SI( $regular_condition$, ( not $stop_condition$) )) => ( not $post_condition$))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ((SI( $regular_condition$, ( not $stop_condition$) )) => ( not $post_condition$))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false until, but not necessarily including, the state where the stop condition holds. If the stop condition never occurs in the interval, RES cannot occur.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_noTrigger_before_satisfaction.svg"
  },
  "onlyBefore,noTrigger,eventually,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "pt": "((O FFin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$)) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$)) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_noTrigger_eventually_satisfaction.svg"
  },
  "onlyBefore,noTrigger,finally,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (LAST V (LAST -> (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (LAST V (LAST -> (! $post_condition$)))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> (LAST V (LAST -> (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (LAST V (LAST -> (! $post_condition$)))))))",
    "pt": "((O FFin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$)))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> TRUE))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> TRUE))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> TRUE))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> TRUE))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> TRUE))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> TRUE))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> TRUE))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> TRUE))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (LAST V (LAST -> (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (LAST V (LAST -> (! $post_condition$)))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> (LAST V (LAST -> (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (LAST V (LAST -> (! $post_condition$)))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$)))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$)))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, trigger and RES cannot hold at the last time point of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_noTrigger_finally_satisfaction.svg"
  },
  "onlyBefore,noTrigger,for,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))",
    "pt": "((O FFin_$scope_mode$) -> (((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] (FFin_$scope_mode$ | (! $post_condition$)))) S (((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] (FFin_$scope_mode$ | (! $post_condition$)))) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] ((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) | (! $post_condition$)))) S (((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] ((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) | (! $post_condition$)))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((OT($duration$,$duration$,($regular_condition$ and $post_condition$))) => (OT($duration$-1,0,((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) or ( not $post_condition$))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] (FFin_$scope_mode$ | (! $post_condition$)))) S (((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] (FFin_$scope_mode$ | (! $post_condition$)))) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] ((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) | (! $post_condition$)))) S (((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] ((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) | (! $post_condition$)))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((OT($duration$,$duration$,($regular_condition$ and $post_condition$))) => (OT($duration$-1,0,((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) or ( not $post_condition$))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), except if the end of the interval occurs sooner.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_noTrigger_for_satisfaction.svg"
  },
  "onlyBefore,noTrigger,immediately,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (! $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (! $post_condition$)))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> (! $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (! $post_condition$)))))",
    "pt": "((O FFin_$scope_mode$) -> (($regular_condition$ -> (! $post_condition$)) S (($regular_condition$ -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (($regular_condition$ -> (! $post_condition$)) S (($regular_condition$ -> (! $post_condition$)) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ($regular_condition$ => ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> (! $post_condition$)))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> (! $post_condition$)))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> (! $post_condition$)))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> (! $post_condition$)))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> (! $post_condition$)))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> (! $post_condition$)))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> (! $post_condition$)))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> (! $post_condition$)))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (! $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (! $post_condition$)))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> (! $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (! $post_condition$)))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (($regular_condition$ -> (! $post_condition$)) S (($regular_condition$ -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (($regular_condition$ -> (! $post_condition$)) S (($regular_condition$ -> (! $post_condition$)) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ($regular_condition$ => ( not $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, trigger and RES cannot hold at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_noTrigger_immediately_satisfaction.svg"
  },
  "onlyBefore,noTrigger,never,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))))",
    "pt": "((O FFin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> (F $post_condition$)))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> (F $post_condition$)))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> (F $post_condition$)))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> (F $post_condition$)))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> (F $post_condition$)))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> (F $post_condition$)))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> (F $post_condition$)))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> (F $post_condition$)))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> ((! LAST) U $post_condition$)))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, ( not $post_condition$) )))))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_noTrigger_never_satisfaction.svg"
  },
  "onlyBefore,noTrigger,next,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))",
    "pt": "((O FFin_$scope_mode$) -> (((Y $regular_condition$) -> ((! $post_condition$) | FFin_$scope_mode$)) S (((Y $regular_condition$) -> ((! $post_condition$) | FFin_$scope_mode$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((Y $regular_condition$) -> ((! $post_condition$) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) S (((Y $regular_condition$) -> ((! $post_condition$) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((YtoPre($regular_condition$)) => (( not $post_condition$) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> (X (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> (X (! $post_condition$))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> (X (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> (X (! $post_condition$))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> (X (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> (X (! $post_condition$))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> (X (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> (X (! $post_condition$))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((Y $regular_condition$) -> ((! $post_condition$) | FFin_$scope_mode$)) S (((Y $regular_condition$) -> ((! $post_condition$) | FFin_$scope_mode$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((Y $regular_condition$) -> ((! $post_condition$) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) S (((Y $regular_condition$) -> ((! $post_condition$) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((YtoPre($regular_condition$)) => (( not $post_condition$) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES cannot hold at the next time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_noTrigger_next_satisfaction.svg"
  },
  "onlyBefore,noTrigger,null,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "pt": "((O FFin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$)) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$)) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_noTrigger_null_satisfaction.svg"
  },
  "onlyBefore,noTrigger,until,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))",
    "pt": "((O FFin_$scope_mode$) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! FFin_$scope_mode$) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! FFin_$scope_mode$) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (((! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (((! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ($stop_condition$ => ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ((( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) and ( not $regular_condition$)) and (YtoPre( not (SI( $regular_condition$, $post_condition$ ))))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! FFin_$scope_mode$) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! FFin_$scope_mode$) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (((! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (((! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ($stop_condition$ => ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ((( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) and ( not $regular_condition$)) and (YtoPre( not (SI( $regular_condition$, $post_condition$ ))))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at least once strictly before the state where the stop condition holds. If the stop condition never holds in the interval, RES need not be false at least once.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_noTrigger_until_satisfaction.svg"
  },
  "onlyBefore,noTrigger,within,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))",
    "pt": "((O FFin_$scope_mode$) -> (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$))) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((OT($duration$,0,$regular_condition$)) => ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$))) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((OT($duration$,0,$regular_condition$)) => ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$), or until the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_noTrigger_within_satisfaction.svg"
  },
  "onlyBefore,null,after,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))",
    "pt": "((O FFin_$scope_mode$) -> (((O[=$duration$+1] FFin_$scope_mode$) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))))) S (((O[=$duration$+1] FFin_$scope_mode$) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))))) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((O[=$duration$+1] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((O[<=$duration$] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))))) S (((O[=$duration$+1] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((O[<=$duration$] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((OT($duration$+1,$duration$+1,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (((OT($duration$,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) or ( not $post_condition$)) or (YtoPre( not (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $post_condition$) )))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((O[=$duration$+1] FFin_$scope_mode$) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))))) S (((O[=$duration$+1] FFin_$scope_mode$) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))))) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((O[=$duration$+1] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((O[<=$duration$] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))))) S (((O[=$duration$+1] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((O[<=$duration$] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((OT($duration$+1,$duration$+1,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => (((OT($duration$,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) or ( not $post_condition$)) or (YtoPre( not (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $post_condition$) )))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must either hold at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), or RES must remain false for $duration$+1 time points starting at the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$+1), or to the end of the interval if it ends sooner than trigger+$duration$+1.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_after_satisfaction.svg"
  },
  "onlyBefore,null,always,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((! LAST) U (! $post_condition$))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((! LAST) U (! $post_condition$))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((! LAST) U (! $post_condition$))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((! LAST) U (! $post_condition$))))",
    "pt": "((O FFin_$scope_mode$) -> (! ($post_condition$ S ($post_condition$ & FFin_$scope_mode$))))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (! ($post_condition$ S ($post_condition$ & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => ( not (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), $post_condition$ ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (F (! $post_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (F (! $post_condition$))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (F (! $post_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (F (! $post_condition$))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (F (! $post_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (F (! $post_condition$))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (F (! $post_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (F (! $post_condition$))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((! LAST) U (! $post_condition$))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((! LAST) U (! $post_condition$))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((! LAST) U (! $post_condition$))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((! LAST) U (! $post_condition$))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (! ($post_condition$ S ($post_condition$ & FFin_$scope_mode$))))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (! ($post_condition$ S ($post_condition$ & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => ( not (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), $post_condition$ ))))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_always_satisfaction.svg"
  },
  "onlyBefore,null,before,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))",
    "pt": "((O FFin_$scope_mode$) -> ((((! $stop_condition$) S ((! $stop_condition$) & FFin_$scope_mode$)) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & FFin_$scope_mode$)) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((((! $stop_condition$) S ((! $stop_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (! $post_condition$)) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $stop_condition$) )) => ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((((! $stop_condition$) S ((! $stop_condition$) & FFin_$scope_mode$)) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & FFin_$scope_mode$)) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((((! $stop_condition$) S ((! $stop_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (! $post_condition$)) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $stop_condition$) )) => ( not $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false until, but not necessarily including, the state where the stop condition holds. If the stop condition never occurs in the interval, RES cannot occur.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_before_satisfaction.svg"
  },
  "onlyBefore,null,eventually,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V (! $post_condition$))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V (! $post_condition$))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V (! $post_condition$))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V (! $post_condition$))))",
    "pt": "((O FFin_$scope_mode$) -> ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G (! $post_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G (! $post_condition$))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G (! $post_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G (! $post_condition$))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G (! $post_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G (! $post_condition$))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G (! $post_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G (! $post_condition$))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V (! $post_condition$))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V (! $post_condition$))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V (! $post_condition$))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V (! $post_condition$))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $post_condition$) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_eventually_satisfaction.svg"
  },
  "onlyBefore,null,finally,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V (LAST -> (! $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V (LAST -> (! $post_condition$)))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V (LAST -> (! $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V (LAST -> (! $post_condition$)))))",
    "pt": "((O FFin_$scope_mode$) -> (! $post_condition$))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (! $post_condition$))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => ( not $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U FFin_$scope_mode$) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> TRUE))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> TRUE))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U FFin_$scope_mode$) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> TRUE))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> TRUE))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V (LAST -> (! $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V (LAST -> (! $post_condition$)))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V (LAST -> (! $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V (LAST -> (! $post_condition$)))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (! $post_condition$))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (! $post_condition$))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => ( not $post_condition$))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, trigger and RES cannot hold at the last time point of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_finally_satisfaction.svg"
  },
  "onlyBefore,null,for,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))",
    "pt": "((O FFin_$scope_mode$) -> ((($post_condition$ S ($post_condition$ & FFin_$scope_mode$)) -> (O[<$duration$] FFin_$scope_mode$)) S ((($post_condition$ S ($post_condition$ & FFin_$scope_mode$)) -> (O[<$duration$] FFin_$scope_mode$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((($post_condition$ S ($post_condition$ & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (O[<$duration$] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) S ((($post_condition$ S ($post_condition$ & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (O[<$duration$] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), $post_condition$ )) => (OT($duration$-1,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (F[<=$duration$] (! $post_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (F[<=$duration$] (! $post_condition$))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (F[<=$duration$] (! $post_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (F[<=$duration$] (! $post_condition$))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (F[<=$duration$] (! $post_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (F[<=$duration$] (! $post_condition$))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (F[<=$duration$] (! $post_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (F[<=$duration$] (! $post_condition$))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((($post_condition$ S ($post_condition$ & FFin_$scope_mode$)) -> (O[<$duration$] FFin_$scope_mode$)) S ((($post_condition$ S ($post_condition$ & FFin_$scope_mode$)) -> (O[<$duration$] FFin_$scope_mode$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((($post_condition$ S ($post_condition$ & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (O[<$duration$] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) S ((($post_condition$ S ($post_condition$ & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (O[<$duration$] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), $post_condition$ )) => (OT($duration$-1,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), except if the end of the interval occurs sooner.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_for_satisfaction.svg"
  },
  "onlyBefore,null,immediately,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (! $post_condition$)))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (! $post_condition$)))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (! $post_condition$)))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (! $post_condition$)))",
    "pt": "((O FFin_$scope_mode$) -> ((FFin_$scope_mode$ -> (! $post_condition$)) S ((FFin_$scope_mode$ -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) -> (! $post_condition$)) S (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) -> (! $post_condition$)) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) => ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (! $post_condition$)))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (! $post_condition$)))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (! $post_condition$)))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (! $post_condition$)))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (! $post_condition$)))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (! $post_condition$)))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (! $post_condition$)))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (! $post_condition$)))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (! $post_condition$)))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (! $post_condition$)))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (! $post_condition$)))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (! $post_condition$)))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((FFin_$scope_mode$ -> (! $post_condition$)) S ((FFin_$scope_mode$ -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) -> (! $post_condition$)) S (((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) -> (! $post_condition$)) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) => ( not $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, trigger and RES cannot hold at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_immediately_satisfaction.svg"
  },
  "onlyBefore,null,never,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((! LAST) U $post_condition$)))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((! LAST) U $post_condition$)))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((! LAST) U $post_condition$)))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((! LAST) U $post_condition$)))",
    "pt": "((O FFin_$scope_mode$) -> (! ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$))))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (! ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => ( not (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (F $post_condition$)))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (F $post_condition$)))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (F $post_condition$)))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (F $post_condition$)))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (F $post_condition$)))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (F $post_condition$)))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (F $post_condition$)))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (F $post_condition$)))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((! LAST) U $post_condition$)))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((! LAST) U $post_condition$)))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((! LAST) U $post_condition$)))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((! LAST) U $post_condition$)))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (! ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$))))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (! ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => ( not (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $post_condition$) ))))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_never_satisfaction.svg"
  },
  "onlyBefore,null,next,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST | (X (! $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST | (X (! $post_condition$)))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST | (X (! $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST | (X (! $post_condition$)))))",
    "pt": "((O FFin_$scope_mode$) -> (((Y FFin_$scope_mode$) -> (! $post_condition$)) S (((Y FFin_$scope_mode$) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((Y (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (! $post_condition$)) S (((Y (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (! $post_condition$)) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((YtoPre(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (X (! $post_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (X (! $post_condition$))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (X (! $post_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (X (! $post_condition$))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (X (! $post_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (X (! $post_condition$))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (X (! $post_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (X (! $post_condition$))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST | (X (! $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST | (X (! $post_condition$)))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST | (X (! $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST | (X (! $post_condition$)))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((Y FFin_$scope_mode$) -> (! $post_condition$)) S (((Y FFin_$scope_mode$) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((Y (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (! $post_condition$)) S (((Y (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (! $post_condition$)) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((YtoPre(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => ( not $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES cannot hold at the next time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_next_satisfaction.svg"
  },
  "onlyBefore,null,null,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V (! $post_condition$))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V (! $post_condition$))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V (! $post_condition$))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V (! $post_condition$))))",
    "pt": "((O FFin_$scope_mode$) -> ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G (! $post_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G (! $post_condition$))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G (! $post_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G (! $post_condition$))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G (! $post_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G (! $post_condition$))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G (! $post_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G (! $post_condition$))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V (! $post_condition$))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V (! $post_condition$))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V (! $post_condition$))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V (! $post_condition$))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $post_condition$) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_null_satisfaction.svg"
  },
  "onlyBefore,null,until,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))",
    "pt": "((O FFin_$scope_mode$) -> (($stop_condition$ -> ((! FFin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FFin_$scope_mode$)))))) S (($stop_condition$ -> ((! FFin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FFin_$scope_mode$)))))) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (($stop_condition$ -> ((! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) & (Y (! ($post_condition$ S ($post_condition$ & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))))) S (($stop_condition$ -> ((! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) & (Y (! ($post_condition$ S ($post_condition$ & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ($stop_condition$ => (( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) and (YtoPre( not (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), $post_condition$ )))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (! ($post_condition$ U $stop_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (! ($post_condition$ U $stop_condition$))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (! ($post_condition$ U $stop_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (! ($post_condition$ U $stop_condition$))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (! ($post_condition$ U $stop_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (! ($post_condition$ U $stop_condition$))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (! ($post_condition$ U $stop_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (! ($post_condition$ U $stop_condition$))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (($stop_condition$ -> ((! FFin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FFin_$scope_mode$)))))) S (($stop_condition$ -> ((! FFin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FFin_$scope_mode$)))))) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (($stop_condition$ -> ((! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) & (Y (! ($post_condition$ S ($post_condition$ & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))))) S (($stop_condition$ -> ((! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) & (Y (! ($post_condition$ S ($post_condition$ & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ($stop_condition$ => (( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) and (YtoPre( not (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), $post_condition$ )))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at least once strictly before the state where the stop condition holds. If the stop condition never holds in the interval, RES need not be false at least once.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_until_satisfaction.svg"
  },
  "onlyBefore,null,within,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))",
    "pt": "((O FFin_$scope_mode$) -> (((O[<=$duration$] FFin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FFin_$scope_mode$) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((O[<=$duration$] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (! $post_condition$)) S (((O[<=$duration$] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (! $post_condition$)) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((OT($duration$,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((O[<=$duration$] FFin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FFin_$scope_mode$) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((O[<=$duration$] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (! $post_condition$)) S (((O[<=$duration$] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (! $post_condition$)) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((OT($duration$,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => ( not $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$), or until the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_within_satisfaction.svg"
  },
  "onlyBefore,regular,after,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))",
    "pt": "((O FFin_$scope_mode$) -> (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))))) -> (((O[<=$duration$] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))))) -> (((O[<=$duration$] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((OT($duration$+1,$duration$+1,($regular_condition$ and ((YtoPre( not $regular_condition$)) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))))) => (((OT($duration$,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) or ( not $post_condition$)) or (YtoPre(OT($duration$,0,$post_condition$))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))))) -> (((O[<=$duration$] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))))) -> (((O[<=$duration$] (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((OT($duration$+1,$duration$+1,($regular_condition$ and ((YtoPre( not $regular_condition$)) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))))) => (((OT($duration$,0,(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) or ( not $post_condition$)) or (YtoPre(OT($duration$,0,$post_condition$))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must either hold at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), or RES must remain false for $duration$+1 time points starting at the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$+1), or to the end of the interval if it ends sooner than trigger+$duration$+1.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_after_satisfaction.svg"
  },
  "onlyBefore,regular,always,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U (! $post_condition$))))) & ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U (! $post_condition$))))) & ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U (! $post_condition$))))) & ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U (! $post_condition$))))) & ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))",
    "pt": "((O FFin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))))))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))), $post_condition$ )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F (! $post_condition$))))) & ($regular_condition$ -> (F (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F (! $post_condition$))))) & ($regular_condition$ -> (F (! $post_condition$))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F (! $post_condition$))))) & ($regular_condition$ -> (F (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F (! $post_condition$))))) & ($regular_condition$ -> (F (! $post_condition$))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F (! $post_condition$))))) & ($regular_condition$ -> (F (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F (! $post_condition$))))) & ($regular_condition$ -> (F (! $post_condition$))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F (! $post_condition$))))) & ($regular_condition$ -> (F (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F (! $post_condition$))))) & ($regular_condition$ -> (F (! $post_condition$))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U (! $post_condition$))))) & ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U (! $post_condition$))))) & ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U (! $post_condition$))))) & ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U (! $post_condition$))))) & ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))))))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))), $post_condition$ )))))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_always_satisfaction.svg"
  },
  "onlyBefore,regular,before,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))",
    "pt": "((O FFin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))) -> (! $post_condition$))) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))) -> (! $post_condition$))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))), ( not $stop_condition$) )) => ( not $post_condition$))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))) -> (! $post_condition$))) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))) -> (! $post_condition$))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))), ( not $stop_condition$) )) => ( not $post_condition$))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false until, but not necessarily including, the state where the stop condition holds. If the stop condition never occurs in the interval, RES cannot occur.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_before_satisfaction.svg"
  },
  "onlyBefore,regular,eventually,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "pt": "((O FFin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$)) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$)) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_eventually_satisfaction.svg"
  },
  "onlyBefore,regular,finally,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (LAST -> (! $post_condition$)))))) & ($regular_condition$ -> (LAST V (LAST -> (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (LAST -> (! $post_condition$)))))) & ($regular_condition$ -> (LAST V (LAST -> (! $post_condition$)))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (LAST -> (! $post_condition$)))))) & ($regular_condition$ -> (LAST V (LAST -> (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (LAST -> (! $post_condition$)))))) & ($regular_condition$ -> (LAST V (LAST -> (! $post_condition$)))))))",
    "pt": "((O FFin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$)))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> TRUE)) & ($regular_condition$ -> TRUE))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> TRUE)) & ($regular_condition$ -> TRUE))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> TRUE)) & ($regular_condition$ -> TRUE))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> TRUE)) & ($regular_condition$ -> TRUE))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> TRUE)) & ($regular_condition$ -> TRUE))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> TRUE)) & ($regular_condition$ -> TRUE))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> TRUE)) & ($regular_condition$ -> TRUE))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> TRUE)) & ($regular_condition$ -> TRUE))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (LAST -> (! $post_condition$)))))) & ($regular_condition$ -> (LAST V (LAST -> (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (LAST -> (! $post_condition$)))))) & ($regular_condition$ -> (LAST V (LAST -> (! $post_condition$)))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (LAST -> (! $post_condition$)))))) & ($regular_condition$ -> (LAST V (LAST -> (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (LAST -> (! $post_condition$)))))) & ($regular_condition$ -> (LAST V (LAST -> (! $post_condition$)))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$)))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$)))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, trigger and RES cannot hold at the last time point of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_finally_satisfaction.svg"
  },
  "onlyBefore,regular,for,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))",
    "pt": "((O FFin_$scope_mode$) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)) & $post_condition$)) -> (O[<$duration$] (FFin_$scope_mode$ | (! $post_condition$)))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)) & $post_condition$)) -> (O[<$duration$] (FFin_$scope_mode$ | (! $post_condition$)))) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) & $post_condition$)) -> (O[<$duration$] ((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) | (! $post_condition$)))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) & $post_condition$)) -> (O[<$duration$] ((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) | (! $post_condition$)))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((OT($duration$,$duration$,(($regular_condition$ and ((YtoPre( not $regular_condition$)) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) and $post_condition$))) => (OT($duration$-1,0,((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) or ( not $post_condition$))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] (! $post_condition$))))) & ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] (! $post_condition$))))) & ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] (! $post_condition$))))) & ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] (! $post_condition$))))) & ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] (! $post_condition$))))) & ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] (! $post_condition$))))) & ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] (! $post_condition$))))) & ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] (! $post_condition$))))) & ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)) & $post_condition$)) -> (O[<$duration$] (FFin_$scope_mode$ | (! $post_condition$)))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)) & $post_condition$)) -> (O[<$duration$] (FFin_$scope_mode$ | (! $post_condition$)))) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) & $post_condition$)) -> (O[<$duration$] ((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) | (! $post_condition$)))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) & $post_condition$)) -> (O[<$duration$] ((($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))) | (! $post_condition$)))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((OT($duration$,$duration$,(($regular_condition$ and ((YtoPre( not $regular_condition$)) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) and $post_condition$))) => (OT($duration$-1,0,((($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)) or ( not $post_condition$))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), except if the end of the interval occurs sooner.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_for_satisfaction.svg"
  },
  "onlyBefore,regular,immediately,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))",
    "pt": "((O FFin_$scope_mode$) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)) -> (! $post_condition$)) S ((($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (! $post_condition$)) S ((($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (! $post_condition$)) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), (($regular_condition$ and ((YtoPre( not $regular_condition$)) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)) -> (! $post_condition$)) S ((($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (! $post_condition$)) S ((($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) -> (! $post_condition$)) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), (($regular_condition$ and ((YtoPre( not $regular_condition$)) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) => ( not $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, trigger and RES cannot hold at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_immediately_satisfaction.svg"
  },
  "onlyBefore,regular,never,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))",
    "pt": "((O FFin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))))))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))), ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))))))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))), ( not $post_condition$) )))))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_never_satisfaction.svg"
  },
  "onlyBefore,regular,next,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X (! $post_condition$)))))) & ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X (! $post_condition$)))))) & ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X (! $post_condition$)))))) & ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X (! $post_condition$)))))) & ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))",
    "pt": "((O FFin_$scope_mode$) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> ((! $post_condition$) | FFin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> ((! $post_condition$) | FFin_$scope_mode$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))))) -> ((! $post_condition$) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))))) -> ((! $post_condition$) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((YtoPre($regular_condition$ and ((YtoPre( not $regular_condition$)) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))))) => (( not $post_condition$) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X (! $post_condition$))))) & ($regular_condition$ -> (X (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X (! $post_condition$))))) & ($regular_condition$ -> (X (! $post_condition$))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X (! $post_condition$))))) & ($regular_condition$ -> (X (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X (! $post_condition$))))) & ($regular_condition$ -> (X (! $post_condition$))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X (! $post_condition$))))) & ($regular_condition$ -> (X (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X (! $post_condition$))))) & ($regular_condition$ -> (X (! $post_condition$))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X (! $post_condition$))))) & ($regular_condition$ -> (X (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X (! $post_condition$))))) & ($regular_condition$ -> (X (! $post_condition$))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X (! $post_condition$)))))) & ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X (! $post_condition$)))))) & ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X (! $post_condition$)))))) & ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X (! $post_condition$)))))) & ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> ((! $post_condition$) | FFin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> ((! $post_condition$) | FFin_$scope_mode$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))))) -> ((! $post_condition$) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))))) -> ((! $post_condition$) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((YtoPre($regular_condition$ and ((YtoPre( not $regular_condition$)) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))))) => (( not $post_condition$) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES cannot hold at the next time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_next_satisfaction.svg"
  },
  "onlyBefore,regular,null,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "pt": "((O FFin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$)) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$)) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_null_satisfaction.svg"
  },
  "onlyBefore,regular,until,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))",
    "pt": "((O FFin_$scope_mode$) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! FFin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! FFin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))))))))) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (((! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (((! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))))))))))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ($stop_condition$ => ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ((( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) and ( not ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))))) and (YtoPre( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))), $post_condition$ ))))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! ($post_condition$ U $stop_condition$))))) & ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! ($post_condition$ U $stop_condition$))))) & ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! ($post_condition$ U $stop_condition$))))) & ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! ($post_condition$ U $stop_condition$))))) & ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! ($post_condition$ U $stop_condition$))))) & ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! ($post_condition$ U $stop_condition$))))) & ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! ($post_condition$ U $stop_condition$))))) & ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! ($post_condition$ U $stop_condition$))))) & ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! FFin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! FFin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))))))))) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (((! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (((! (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))))))))))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ($stop_condition$ => ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ((( not (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) and ( not ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))))) and (YtoPre( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))), $post_condition$ ))))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at least once strictly before the state where the stop condition holds. If the stop condition never holds in the interval, RES need not be false at least once.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_until_satisfaction.svg"
  },
  "onlyBefore,regular,within,satisfaction": {
    "endpoints": {
      "left": "FFin_$scope_mode$",
      "right": "LAST",
      "ptExtleft": "(($scope_mode$ and ((not previous TRUE) or (previous not $scope_mode$))) and ((previous (historically not $scope_mode$)) or (not previous TRUE)))",
      "ptExtright": "LAST",
      "SMVptExtleft": "(($scope_mode$ & ((!(Y TRUE)) | (Y (!$scope_mode$)))) & ((Y (H (!$scope_mode$))) | (!(Y TRUE))))",
      "SMVptExtright": "LAST",
      "ftExtleft": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright": "LAST",
      "SMVftExtleft": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright": "LAST",
      "ftExtleft2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "ftExtright2": "LAST",
      "SMVftExtleft2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "SMVftExtright2": "LAST"
    },
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))",
    "pt": "((O FFin_$scope_mode$) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$))) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((OT($duration$,0,($regular_condition$ and ((YtoPre( not $regular_condition$)) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))))) => ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$))) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))) | (! $post_condition$))) & (($scope_mode$ & (Z (! $scope_mode$))) & (Z (H (! $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ((OT($duration$,0,($regular_condition$ and ((YtoPre( not $regular_condition$)) or (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)))))) => ((SI( (($scope_mode$ and (FTP or (YtoPre( not $scope_mode$)))) and ((YtoPre(H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$), or until the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_within_satisfaction.svg"
  },
  "onlyIn,noTrigger,after,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$+1,$duration$+1,$regular_condition$)) => (((OT($duration$,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) or ( not $post_condition$)) or (YtoPre(OT($duration$,0,$post_condition$))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$+1,$duration$+1,$regular_condition$)) => (((OT($duration$,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) or ( not $post_condition$)) or (YtoPre(OT($duration$,0,$post_condition$))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] $regular_condition$) -> (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$+1,$duration$+1,$regular_condition$)) => (((OT($duration$,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) or ( not $post_condition$)) or (YtoPre(OT($duration$,0,$post_condition$))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must either hold at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), or RES must remain false for $duration$+1 time points starting at the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$+1), or to the end of the interval if it ends sooner than trigger+$duration$+1.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_noTrigger_after_satisfaction.svg"
  },
  "onlyIn,noTrigger,always,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U (! $post_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U (! $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U (! $post_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U (! $post_condition$))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, $post_condition$ ))))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, $post_condition$ ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U (! $post_condition$))))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U (! $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U (! $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U (! $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$)))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ($post_condition$ S ($post_condition$ & $regular_condition$)))))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ($post_condition$ S ($post_condition$ & $regular_condition$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, $post_condition$ )))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_noTrigger_always_satisfaction.svg"
  },
  "onlyIn,noTrigger,before,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (LNin_$scope_mode$ | LAST))) & (! (LNin_$scope_mode$ | LAST))) U $post_condition$)))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (LNin_$scope_mode$ | LAST))) & (! (LNin_$scope_mode$ | LAST))) U $post_condition$)))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $post_condition$)))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $post_condition$)))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((SI( $regular_condition$, ( not $stop_condition$) )) => ( not $post_condition$))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((SI( $regular_condition$, ( not $stop_condition$) )) => ( not $post_condition$))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$))))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$))))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$))))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$))))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & $regular_condition$)) -> (! $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((SI( $regular_condition$, ( not $stop_condition$) )) => ( not $post_condition$))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false until, but not necessarily including, the state where the stop condition holds. If the stop condition never occurs in the interval, RES cannot occur.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_noTrigger_before_satisfaction.svg"
  },
  "onlyIn,noTrigger,eventually,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$))))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_noTrigger_eventually_satisfaction.svg"
  },
  "onlyIn,noTrigger,finally,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V ((LNin_$scope_mode$ | LAST) -> (! $post_condition$)))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V ((LNin_$scope_mode$ | LAST) -> (! $post_condition$)))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) -> (! $post_condition$)))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) -> (! $post_condition$)))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$)))))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$)))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$)))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$)))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$))))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$))))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$))))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$))))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, trigger and RES cannot hold at the last time point of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_noTrigger_finally_satisfaction.svg"
  },
  "onlyIn,noTrigger,for,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] (FNin_$scope_mode$ | (! $post_condition$)))) S (((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] (FNin_$scope_mode$ | (! $post_condition$)))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] (FNin_$scope_mode$ | (! $post_condition$)))) S (((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] (FNin_$scope_mode$ | (! $post_condition$)))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | (! $post_condition$)))) S (((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | (! $post_condition$)))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | (! $post_condition$)))) S (((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | (! $post_condition$)))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,$duration$,($regular_condition$ and $post_condition$))) => (OT($duration$-1,0,((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) or ( not $post_condition$))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,$duration$,($regular_condition$ and $post_condition$))) => (OT($duration$-1,0,((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) or ( not $post_condition$))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] (FNin_$scope_mode$ | (! $post_condition$)))) S (((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] (FNin_$scope_mode$ | (! $post_condition$)))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | (! $post_condition$)))) S (((O[=$duration$] ($regular_condition$ & $post_condition$)) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | (! $post_condition$)))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,$duration$,($regular_condition$ and $post_condition$))) => (OT($duration$-1,0,((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) or ( not $post_condition$))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), except if the end of the interval occurs sooner.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_noTrigger_for_satisfaction.svg"
  },
  "onlyIn,noTrigger,immediately,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> (! $post_condition$)))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> (! $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (! $post_condition$)))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (! $post_condition$)))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (($regular_condition$ -> (! $post_condition$)) S (($regular_condition$ -> (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (($regular_condition$ -> (! $post_condition$)) S (($regular_condition$ -> (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (($regular_condition$ -> (! $post_condition$)) S (($regular_condition$ -> (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (($regular_condition$ -> (! $post_condition$)) S (($regular_condition$ -> (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($regular_condition$ => ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($regular_condition$ => ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> (! $post_condition$)))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (! $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (! $post_condition$)))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (! $post_condition$)))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (! $post_condition$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (! $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (! $post_condition$))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (! $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (! $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (! $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (! $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (! $post_condition$))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (($regular_condition$ -> (! $post_condition$)) S (($regular_condition$ -> (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (($regular_condition$ -> (! $post_condition$)) S (($regular_condition$ -> (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($regular_condition$ => ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, trigger and RES cannot hold at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_noTrigger_immediately_satisfaction.svg"
  },
  "onlyIn,noTrigger,never,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, ( not $post_condition$) ))))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$)))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ((! $post_condition$) S ((! $post_condition$) & $regular_condition$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( $regular_condition$, ( not $post_condition$) )))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_noTrigger_never_satisfaction.svg"
  },
  "onlyIn,noTrigger,next,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) | ((X (! $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) | ((X (! $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X (! $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X (! $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((Y $regular_condition$) -> ((! $post_condition$) | FNin_$scope_mode$)) S (((Y $regular_condition$) -> ((! $post_condition$) | FNin_$scope_mode$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((Y $regular_condition$) -> ((! $post_condition$) | FNin_$scope_mode$)) S (((Y $regular_condition$) -> ((! $post_condition$) | FNin_$scope_mode$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((Y $regular_condition$) -> ((! $post_condition$) | ((! $scope_mode$) & (Z $scope_mode$)))) S (((Y $regular_condition$) -> ((! $post_condition$) | ((! $scope_mode$) & (Z $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((Y $regular_condition$) -> ((! $post_condition$) | ((! $scope_mode$) & (Z $scope_mode$)))) S (((Y $regular_condition$) -> ((! $post_condition$) | ((! $scope_mode$) & (Z $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((YtoPre($regular_condition$)) => (( not $post_condition$) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((YtoPre($regular_condition$)) => (( not $post_condition$) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$))))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$))))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$))))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((Y $regular_condition$) -> ((! $post_condition$) | FNin_$scope_mode$)) S (((Y $regular_condition$) -> ((! $post_condition$) | FNin_$scope_mode$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((Y $regular_condition$) -> ((! $post_condition$) | ((! $scope_mode$) & (Z $scope_mode$)))) S (((Y $regular_condition$) -> ((! $post_condition$) | ((! $scope_mode$) & (Z $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((YtoPre($regular_condition$)) => (( not $post_condition$) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES cannot hold at the next time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_noTrigger_next_satisfaction.svg"
  },
  "onlyIn,noTrigger,null,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$))))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_noTrigger_null_satisfaction.svg"
  },
  "onlyIn,noTrigger,until,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($stop_condition$ => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((( not (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) and ( not $regular_condition$)) and (YtoPre( not (SI( $regular_condition$, $post_condition$ ))))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($stop_condition$ => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((( not (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) and ( not $regular_condition$)) and (YtoPre( not (SI( $regular_condition$, $post_condition$ ))))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! $regular_condition$)) & (Y (! ($post_condition$ S ($post_condition$ & $regular_condition$))))))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($stop_condition$ => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((( not (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) and ( not $regular_condition$)) and (YtoPre( not (SI( $regular_condition$, $post_condition$ ))))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at least once strictly before the state where the stop condition holds. If the stop condition never holds in the interval, RES need not be false at least once.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_noTrigger_until_satisfaction.svg"
  },
  "onlyIn,noTrigger,within,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$)))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$)))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,$regular_condition$)) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,$regular_condition$)) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) S (((O[<=$duration$] $regular_condition$) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,$regular_condition$)) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: every point in the interval where $regular_condition$ is true.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$), or until the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_noTrigger_within_satisfaction.svg"
  },
  "onlyIn,null,after,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((O[=$duration$+1] FNin_$scope_mode$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) S (((O[=$duration$+1] FNin_$scope_mode$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[=$duration$+1] FNin_$scope_mode$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) S (((O[=$duration$+1] FNin_$scope_mode$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[=$duration$+1] ((! $scope_mode$) & (Z $scope_mode$))) -> (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))) S (((O[=$duration$+1] ((! $scope_mode$) & (Z $scope_mode$))) -> (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((O[=$duration$+1] ((! $scope_mode$) & (Z $scope_mode$))) -> (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))) S (((O[=$duration$+1] ((! $scope_mode$) & (Z $scope_mode$))) -> (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$+1,$duration$+1,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) => (((OT($duration$,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) or ( not $post_condition$)) or (YtoPre( not (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) )))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$+1,$duration$+1,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) => (((OT($duration$,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) or ( not $post_condition$)) or (YtoPre( not (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) )))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))) & ((! $scope_mode$) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((O[=$duration$+1] FNin_$scope_mode$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) S (((O[=$duration$+1] FNin_$scope_mode$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[=$duration$+1] ((! $scope_mode$) & (Z $scope_mode$))) -> (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))) S (((O[=$duration$+1] ((! $scope_mode$) & (Z $scope_mode$))) -> (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$+1,$duration$+1,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) => (((OT($duration$,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) or ( not $post_condition$)) or (YtoPre( not (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) )))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must either hold at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), or RES must remain false for $duration$+1 time points starting at the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$+1), or to the end of the interval if it ends sooner than trigger+$duration$+1.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_after_satisfaction.svg"
  },
  "onlyIn,null,always,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((! (LNin_$scope_mode$ | LAST)) U (! $post_condition$))))) & ((! $scope_mode$) -> ((! (LNin_$scope_mode$ | LAST)) U (! $post_condition$))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U (! $post_condition$))))) & ((! $scope_mode$) -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U (! $post_condition$))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & (Z $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre( not (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), $post_condition$ )))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => ( not (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), $post_condition$ )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((! LNin_$scope_mode$) U (! $post_condition$))))) & ((! $scope_mode$) -> ((! LNin_$scope_mode$) U (! $post_condition$))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))))) & ((! $scope_mode$) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U (! $post_condition$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U (! $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$)))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U (! $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U (! $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$)))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & (Z $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre( not (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), $post_condition$ ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_always_satisfaction.svg"
  },
  "onlyIn,null,before,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (LNin_$scope_mode$ | LAST))) & (! (LNin_$scope_mode$ | LAST))) U $post_condition$)))))) & ((! $scope_mode$) -> ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (LNin_$scope_mode$ | LAST))) & (! (LNin_$scope_mode$ | LAST))) U $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $post_condition$)))))) & ((! $scope_mode$) -> ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $post_condition$)))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $stop_condition$) )) => ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $stop_condition$) )) => ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))))) & ((! $scope_mode$) -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))))) & ((! $scope_mode$) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $stop_condition$) )) => ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false until, but not necessarily including, the state where the stop condition holds. If the stop condition never occurs in the interval, RES cannot occur.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_before_satisfaction.svg"
  },
  "onlyIn,null,eventually,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "(LAST V ($post_condition$ -> $scope_mode$))",
    "ftExpanded": "(LAST V ($post_condition$ -> $scope_mode$))",
    "pt": "(H ($post_condition$ -> $scope_mode$))",
    "ptExpanded": "(H ($post_condition$ -> $scope_mode$))",
    "CoCoSpecCode": "(H($post_condition$ => $scope_mode$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ($post_condition$ -> $scope_mode$))",
    "ftInfAUExpanded": "(G ($post_condition$ -> $scope_mode$))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_eventually_satisfaction.svg"
  },
  "onlyIn,null,finally,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V ((LNin_$scope_mode$ | LAST) -> (! $post_condition$)))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V ((LNin_$scope_mode$ | LAST) -> (! $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) -> (! $post_condition$)))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) -> (! $post_condition$)))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (! $post_condition$)))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (! $post_condition$)))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (! $post_condition$)))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (! $post_condition$)))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre( not $post_condition$)))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => ( not $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$)))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$)))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$)))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (! $post_condition$))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (! $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre( not $post_condition$))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, trigger and RES cannot hold at the last time point of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_finally_satisfaction.svg"
  },
  "onlyIn,null,for,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))))) & ((! $scope_mode$) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))) & ((! $scope_mode$) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((($post_condition$ S ($post_condition$ & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) S ((($post_condition$ S ($post_condition$ & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((($post_condition$ S ($post_condition$ & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) S ((($post_condition$ S ($post_condition$ & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((($post_condition$ S ($post_condition$ & ((! $scope_mode$) & (Z $scope_mode$)))) -> (O[<$duration$] ((! $scope_mode$) & (Z $scope_mode$)))) S ((($post_condition$ S ($post_condition$ & ((! $scope_mode$) & (Z $scope_mode$)))) -> (O[<$duration$] ((! $scope_mode$) & (Z $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((($post_condition$ S ($post_condition$ & ((! $scope_mode$) & (Z $scope_mode$)))) -> (O[<$duration$] ((! $scope_mode$) & (Z $scope_mode$)))) S ((($post_condition$ S ($post_condition$ & ((! $scope_mode$) & (Z $scope_mode$)))) -> (O[<$duration$] ((! $scope_mode$) & (Z $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), $post_condition$ )) => (OT($duration$-1,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), $post_condition$ )) => (OT($duration$-1,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))))) & ((! $scope_mode$) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))) & ((! $scope_mode$) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((($post_condition$ S ($post_condition$ & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) S ((($post_condition$ S ($post_condition$ & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((($post_condition$ S ($post_condition$ & ((! $scope_mode$) & (Z $scope_mode$)))) -> (O[<$duration$] ((! $scope_mode$) & (Z $scope_mode$)))) S ((($post_condition$ S ($post_condition$ & ((! $scope_mode$) & (Z $scope_mode$)))) -> (O[<$duration$] ((! $scope_mode$) & (Z $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), $post_condition$ )) => (OT($duration$-1,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), except if the end of the interval occurs sooner.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_for_satisfaction.svg"
  },
  "onlyIn,null,immediately,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (! $post_condition$)))) & ((! $scope_mode$) -> (! $post_condition$)))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (! $post_condition$)))) & ((! $scope_mode$) -> (! $post_condition$)))",
    "pt": "(H (FNin_$scope_mode$ -> (! $post_condition$)))",
    "ptExpanded": "(H (((! $scope_mode$) & (Z $scope_mode$)) -> (! $post_condition$)))",
    "CoCoSpecCode": "(H((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) => ( not $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (! $post_condition$)))) & ((! $scope_mode$) -> (! $post_condition$)))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (! $post_condition$)))) & ((! $scope_mode$) -> (! $post_condition$)))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (! $post_condition$))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (! $post_condition$))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! $post_condition$))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! $post_condition$))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (! $post_condition$))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (! $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! $post_condition$))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! $post_condition$))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((FNin_$scope_mode$ -> (! $post_condition$)) S ((FNin_$scope_mode$ -> (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $scope_mode$) & (Z $scope_mode$)) -> (! $post_condition$)) S ((((! $scope_mode$) & (Z $scope_mode$)) -> (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) => ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, trigger and RES cannot hold at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_immediately_satisfaction.svg"
  },
  "onlyIn,null,never,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))) & ((! $scope_mode$) -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))) & ((! $scope_mode$) -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre( not (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) )))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => ( not (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((! LNin_$scope_mode$) U $post_condition$)))) & ((! $scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$)))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))) & ((! $scope_mode$) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre( not (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_never_satisfaction.svg"
  },
  "onlyIn,null,next,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) | ((X (! $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) | ((X (! $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X (! $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X (! $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((Y FNin_$scope_mode$) -> (! $post_condition$)) S (((Y FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((Y FNin_$scope_mode$) -> (! $post_condition$)) S (((Y FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((Y ((! $scope_mode$) & (Z $scope_mode$))) -> (! $post_condition$)) S (((Y ((! $scope_mode$) & (Z $scope_mode$))) -> (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((Y ((! $scope_mode$) & (Z $scope_mode$))) -> (! $post_condition$)) S (((Y ((! $scope_mode$) & (Z $scope_mode$))) -> (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((YtoPre(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) => ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((YtoPre(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) => ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((Y FNin_$scope_mode$) -> (! $post_condition$)) S (((Y FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((Y ((! $scope_mode$) & (Z $scope_mode$))) -> (! $post_condition$)) S (((Y ((! $scope_mode$) & (Z $scope_mode$))) -> (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((YtoPre(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) => ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES cannot hold at the next time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_next_satisfaction.svg"
  },
  "onlyIn,null,null,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V (! $post_condition$))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_null_satisfaction.svg"
  },
  "onlyIn,null,until,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))))) & ((! $scope_mode$) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (! (((! ((! $stop_condition$) & ((! $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))))) & ((! $scope_mode$) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))) S (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))) S (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (($stop_condition$ -> ((! ((! $scope_mode$) & (Z $scope_mode$))) & (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & (Z $scope_mode$)))))))) S (($stop_condition$ -> ((! ((! $scope_mode$) & (Z $scope_mode$))) & (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & (Z $scope_mode$)))))))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (($stop_condition$ -> ((! ((! $scope_mode$) & (Z $scope_mode$))) & (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & (Z $scope_mode$)))))))) S (($stop_condition$ -> ((! ((! $scope_mode$) & (Z $scope_mode$))) & (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & (Z $scope_mode$)))))))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($stop_condition$ => (( not (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) and (YtoPre( not (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), $post_condition$ )))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($stop_condition$ => (( not (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) and (YtoPre( not (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), $post_condition$ )))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))))) & ((! $scope_mode$) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))) & ((! $scope_mode$) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))) S (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (($stop_condition$ -> ((! ((! $scope_mode$) & (Z $scope_mode$))) & (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & (Z $scope_mode$)))))))) S (($stop_condition$ -> ((! ((! $scope_mode$) & (Z $scope_mode$))) & (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & (Z $scope_mode$)))))))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($stop_condition$ => (( not (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) and (YtoPre( not (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), $post_condition$ )))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at least once strictly before the state where the stop condition holds. If the stop condition never holds in the interval, RES need not be false at least once.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_until_satisfaction.svg"
  },
  "onlyIn,null,within,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$)))))) & ((! $scope_mode$) -> ((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$)))))) & ((! $scope_mode$) -> ((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$)))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) -> (! $post_condition$)) S (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) -> (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) -> (! $post_condition$)) S (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) -> (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) => ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) => ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))) & ((! $scope_mode$) -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))) & ((! $scope_mode$) -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) -> (! $post_condition$)) S (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) -> (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) => ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$), or until the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_within_satisfaction.svg"
  },
  "onlyIn,regular,after,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$+1,$duration$+1,($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))))) => (((OT($duration$,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) or ( not $post_condition$)) or (YtoPre(OT($duration$,0,$post_condition$))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$+1,$duration$+1,($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))))) => (((OT($duration$,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) or ( not $post_condition$)) or (YtoPre(OT($duration$,0,$post_condition$))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((O[<=$duration$] ((! $scope_mode$) & (Z $scope_mode$))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$+1,$duration$+1,($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))))) => (((OT($duration$,0,(( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) or ( not $post_condition$)) or (YtoPre(OT($duration$,0,$post_condition$))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must either hold at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), or RES must remain false for $duration$+1 time points starting at the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$+1), or to the end of the interval if it ends sooner than trigger+$duration$+1.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_after_satisfaction.svg"
  },
  "onlyIn,regular,always,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (LNin_$scope_mode$ | LAST)) U (! $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U (! $post_condition$))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (LNin_$scope_mode$ | LAST)) U (! $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U (! $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U (! $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U (! $post_condition$))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U (! $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U (! $post_condition$))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), $post_condition$ ))))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), $post_condition$ ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U (! $post_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U (! $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U (! $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! LNin_$scope_mode$) U (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! LNin_$scope_mode$) U (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U (! $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$)))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))))))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), $post_condition$ )))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_always_satisfaction.svg"
  },
  "onlyIn,regular,before,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (LNin_$scope_mode$ | LAST))) & (! (LNin_$scope_mode$ | LAST))) U $post_condition$)))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (LNin_$scope_mode$ | LAST))) & (! (LNin_$scope_mode$ | LAST))) U $post_condition$)))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (LNin_$scope_mode$ | LAST))) & (! (LNin_$scope_mode$ | LAST))) U $post_condition$)))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (LNin_$scope_mode$ | LAST))) & (! (LNin_$scope_mode$ | LAST))) U $post_condition$)))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $post_condition$)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $post_condition$)))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $post_condition$)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $post_condition$)))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> (! $post_condition$))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> (! $post_condition$))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) -> (! $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) -> (! $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), ( not $stop_condition$) )) => ( not $post_condition$))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), ( not $stop_condition$) )) => ( not $post_condition$))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$))))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$))))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$))))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$))))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> (! $post_condition$))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) -> (! $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), ( not $stop_condition$) )) => ( not $post_condition$))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false until, but not necessarily including, the state where the stop condition holds. If the stop condition never occurs in the interval, RES cannot occur.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_before_satisfaction.svg"
  },
  "onlyIn,regular,eventually,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_eventually_satisfaction.svg"
  },
  "onlyIn,regular,finally,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) V ((LNin_$scope_mode$ | LAST) -> (! $post_condition$)))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V ((LNin_$scope_mode$ | LAST) -> (! $post_condition$)))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) V ((LNin_$scope_mode$ | LAST) -> (! $post_condition$)))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V ((LNin_$scope_mode$ | LAST) -> (! $post_condition$)))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) -> (! $post_condition$)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) -> (! $post_condition$)))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) -> (! $post_condition$)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) -> (! $post_condition$)))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$)))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$)))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$)))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$)))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$))))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$))))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$))))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (LNin_$scope_mode$ -> (! $post_condition$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) -> (! $post_condition$))))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, trigger and RES cannot hold at the last time point of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_finally_satisfaction.svg"
  },
  "onlyIn,regular,for,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & $post_condition$)) -> (O[<$duration$] (FNin_$scope_mode$ | (! $post_condition$)))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & $post_condition$)) -> (O[<$duration$] (FNin_$scope_mode$ | (! $post_condition$)))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & $post_condition$)) -> (O[<$duration$] (FNin_$scope_mode$ | (! $post_condition$)))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & $post_condition$)) -> (O[<$duration$] (FNin_$scope_mode$ | (! $post_condition$)))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) & $post_condition$)) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | (! $post_condition$)))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) & $post_condition$)) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | (! $post_condition$)))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) & $post_condition$)) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | (! $post_condition$)))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) & $post_condition$)) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | (! $post_condition$)))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,$duration$,(($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) and $post_condition$))) => (OT($duration$-1,0,((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) or ( not $post_condition$))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,$duration$,(($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) and $post_condition$))) => (OT($duration$-1,0,((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) or ( not $post_condition$))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & $post_condition$)) -> (O[<$duration$] (FNin_$scope_mode$ | (! $post_condition$)))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & $post_condition$)) -> (O[<$duration$] (FNin_$scope_mode$ | (! $post_condition$)))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) & $post_condition$)) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | (! $post_condition$)))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) & $post_condition$)) -> (O[<$duration$] (((! $scope_mode$) & (Z $scope_mode$)) | (! $post_condition$)))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,$duration$,(($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) and $post_condition$))) => (OT($duration$-1,0,((( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))) or ( not $post_condition$))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), except if the end of the interval occurs sooner.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_for_satisfaction.svg"
  },
  "onlyIn,regular,immediately,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X (! $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! $post_condition$)))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X (! $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (! $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (! $post_condition$)))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (! $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (! $post_condition$)))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> (! $post_condition$)) S ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> (! $post_condition$)) S ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) -> (! $post_condition$)) S ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) -> (! $post_condition$)) S ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), (($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) => ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), (($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) => ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! $post_condition$)))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! $post_condition$)))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! $post_condition$)))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! $post_condition$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! $post_condition$))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! $post_condition$))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> (! $post_condition$)) S ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) -> (! $post_condition$)) S ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), (($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) => ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, trigger and RES cannot hold at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_immediately_satisfaction.svg"
  },
  "onlyIn,regular,never,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), ( not $post_condition$) ))))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$)))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))))))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), ( not $post_condition$) )))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_never_satisfaction.svg"
  },
  "onlyIn,regular,next,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) | ((X (! $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) | ((X (! $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) | ((X (! $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) | ((X (! $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X (! $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X (! $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X (! $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X (! $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ((! $post_condition$) | FNin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ((! $post_condition$) | FNin_$scope_mode$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ((! $post_condition$) | FNin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ((! $post_condition$) | FNin_$scope_mode$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> ((! $post_condition$) | ((! $scope_mode$) & (Z $scope_mode$)))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> ((! $post_condition$) | ((! $scope_mode$) & (Z $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> ((! $post_condition$) | ((! $scope_mode$) & (Z $scope_mode$)))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> ((! $post_condition$) | ((! $scope_mode$) & (Z $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((YtoPre($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))))) => (( not $post_condition$) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((YtoPre($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))))) => (( not $post_condition$) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$))))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$))))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$))))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ((! $post_condition$) | FNin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ((! $post_condition$) | FNin_$scope_mode$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> ((! $post_condition$) | ((! $scope_mode$) & (Z $scope_mode$)))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> ((! $post_condition$) | ((! $scope_mode$) & (Z $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((YtoPre($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))))) => (( not $post_condition$) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES cannot hold at the next time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_next_satisfaction.svg"
  },
  "onlyIn,regular,null,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$)) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_null_satisfaction.svg"
  },
  "onlyIn,regular,until,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))))))))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))))))))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($stop_condition$ => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((( not (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) and ( not ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))))) and (YtoPre( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), $post_condition$ ))))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($stop_condition$ => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((( not (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) and ( not ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))))) and (YtoPre( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), $post_condition$ ))))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (((! ((! $scope_mode$) & (Z $scope_mode$))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$)))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))))))))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ($stop_condition$ => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ((( not (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$))))) and ( not ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))))) and (YtoPre( not (SI( ($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))), $post_condition$ ))))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at least once strictly before the state where the stop condition holds. If the stop condition never holds in the interval, RES need not be false at least once.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_until_satisfaction.svg"
  },
  "onlyIn,regular,within,satisfaction": {
    "endpoints": {
      "left": "FNin_$scope_mode$",
      "right": "LNin_$scope_mode$",
      "ptExtleft": "((not $scope_mode$) and ((not previous TRUE) or (previous $scope_mode$)))",
      "ptExtright": "($scope_mode$ and (previous not $scope_mode$))",
      "SMVptExtleft": "((!$scope_mode$) & ((!(Y TRUE)) | (Y $scope_mode$)))",
      "SMVptExtright": "($scope_mode$ & (Y (!$scope_mode$)))",
      "ftExtleft": "($scope_mode$ and (not LAST) and next (not $scope_mode$))",
      "ftExtright": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft": "($scope_mode$ & (! LAST) & X (! $scope_mode$))",
      "SMVftExtright": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))",
      "ftExtleft2": "($scope_mode$ and (LAST or next (not $scope_mode$)))",
      "ftExtright2": "((not $scope_mode$) and (not LAST) and next $scope_mode$)",
      "SMVftExtleft2": "($scope_mode$ & (LAST | X (! $scope_mode$)))",
      "SMVftExtright2": "((! $scope_mode$) & (! LAST) & (X $scope_mode$))"
    },
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$)))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$)))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$)))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$)))))))",
    "pt": "((H (LNin_$scope_mode$ -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & (Z $scope_mode$)))) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$))))))",
    "CoCoSpecCode": "((H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))))) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not ($scope_mode$ and (YtoPre( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))))) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))))",
    "ptFinBtw": "(H (LNin_$scope_mode$ -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H (($scope_mode$ & (Y (! $scope_mode$))) -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & (Z $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & (Z $scope_mode$)))) | (! $post_condition$))) & ((! $scope_mode$) & (Z $scope_mode$)))))))",
    "CoCoSpecCodeFinBtw": "(H(($scope_mode$ and (YtoPre( not $scope_mode$))) => (YtoPre(SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((YtoPre( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))))))) => ((SI( (( not $scope_mode$) and (FTP or (YtoPre($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$), or until the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_within_satisfaction.svg"
  }
}